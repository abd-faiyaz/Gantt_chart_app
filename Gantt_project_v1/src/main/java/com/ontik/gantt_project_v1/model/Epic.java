package com.ontik.gantt_project_v1.model;

import jakarta.persistence.*;
import lombok.*;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonFormat;
import org.hibernate.annotations.Type;
import com.vladmihalcea.hibernate.type.json.JsonBinaryType;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

/**
 * Epic entity representing high-level work items that contain multiple tasks/stories
 */
@Entity
@Table(name = "epics")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class Epic {

    // Primary key: UUID, mapped to 'epic_id', auto-generated by database
    @Id
    @Column(name = "epic_id", nullable = false)
    @GeneratedValue(strategy = GenerationType.AUTO)
    @JsonProperty("id")
    private UUID epicId;

    // Epic name, VARCHAR(255), NOT NULL
    @Column(name = "name", nullable = false, length = 255)
    private String name;

    // Epic description, TEXT, nullable
    @Column(name = "description")
    private String description;

    // Start date, DATE, NOT NULL
    @Column(name = "start_date", nullable = false)
    @JsonFormat(pattern = "yyyy-MM-dd")
    private LocalDate startDate;

    // End date, DATE, NOT NULL
    @Column(name = "end_date", nullable = false)
    @JsonFormat(pattern = "yyyy-MM-dd")
    private LocalDate endDate;

    // Epic status, VARCHAR(50), NOT NULL, default via DB as 'Not Started'
    @Column(name = "status", nullable = false, length = 50)
    private String status;

    // Priority, VARCHAR(50), NOT NULL, default via DB as 'Medium'
    @Column(name = "priority", nullable = false, length = 50)
    private String priority;

    // Project reference, UUID, NOT NULL, maps to 'project_id'
    @Column(name = "project_id", nullable = false)
    private UUID projectId;

    // Assigned to reference, UUID, nullable, maps to 'assigned_to'
    @Column(name = "assigned_to")
    private UUID assignedTo;

    // Progress percentage, FLOAT8, default 0.00
    @Column(name = "progress_percentage")
    @Builder.Default
    private Double progressPercentage = 0.00;

    // Parent epic reference, UUID, nullable, maps to 'parent_epic_id'
    @Column(name = "parent_epic_id")
    private UUID parentEpicId;

    // Milestone reference, UUID, nullable, maps to 'milestone_id'
    @Column(name = "milestone_id")
    private UUID milestoneId;

    // Tags, jsonb, nullable, mapped as List<String>
    @Type(JsonBinaryType.class)
    @Column(name = "tags", columnDefinition = "jsonb")
    private List<String> tags;

    // Created at, TIMESTAMP WITH TIME ZONE, nullable, set by DB default
    @Column(name = "created_at")
    private OffsetDateTime createdAt;

    // Updated at, TIMESTAMP WITH TIME ZONE, nullable, set by DB default
    @Column(name = "updated_at")
    private OffsetDateTime updatedAt;

    // Transient field for assignee name (not persisted to database)
    @Transient
    private String assignedToName;
}
