spring.application.name=Gantt_project_v1

# Database configuration for Docker environment
spring.datasource.url=jdbc:postgresql://postgres:5432/gantt_project_db
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:1234}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:false}

# Connection pool settings for Docker
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000

# Server configuration
server.port=8080

# Actuator for health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true

# CORS configuration for frontend
spring.web.cors.allowed-origins=http://localhost:3000,http://frontend:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Logging configuration
logging.level.com.ontik.gantt_project_v1=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=${SQL_LOGGING_LEVEL:WARN}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${SQL_PARAM_LOGGING:WARN}
