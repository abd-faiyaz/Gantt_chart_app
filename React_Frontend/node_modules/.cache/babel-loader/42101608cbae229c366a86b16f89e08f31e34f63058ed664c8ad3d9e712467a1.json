{"ast":null,"code":"var _jsxFileName = \"/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/modules/TaskView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport HierarchicalTaskTree from \"../components/HierarchicalTaskTree\";\nimport TaskCard from \"../components/TaskList\";\nimport \"./TaskView.css\";\nimport Filter from \"../components/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskView = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [hierarchyData, setHierarchyData] = useState([]);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"\");\n  const [activeFilters, setActiveFilters] = useState(null);\n  const [expandedTasks, setExpandedTasks] = useState(new Set());\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Fetch tasks from backend API\n  const fetchTasks = async (filterParams = null) => {\n    setLoading(true);\n    try {\n      let url = \"/tasks\";\n\n      // Always use the hierarchy endpoint for unified view\n      if (!filterParams) {\n        url = \"/tasks/hierarchy\";\n      } else if (filterParams) {\n        // If filters are provided, use the filter endpoint\n        const queryParams = new URLSearchParams();\n        if (filterParams.startDate) queryParams.append('startDate', filterParams.startDate);\n        if (filterParams.endDate) queryParams.append('endDate', filterParams.endDate);\n        if (filterParams.types && filterParams.types.length > 0) {\n          queryParams.append('types', filterParams.types.join(','));\n        }\n        if (filterParams.assignee) queryParams.append('assignee', filterParams.assignee);\n        if (filterParams.status) queryParams.append('status', filterParams.status);\n        if (filterParams.priority) queryParams.append('priority', filterParams.priority);\n        url = `/tasks/filter?${queryParams.toString()}`;\n      }\n      console.log(\"Fetching tasks from\", url);\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(\"Failed to fetch tasks\");\n      const data = await response.json();\n      console.log(\"Fetched tasks:\", data);\n\n      // Always keep the hierarchical structure for unified view\n      if (!filterParams) {\n        setTasks(data); // Keep the hierarchical structure\n        setHierarchyData(data); // Store hierarchy data separately\n      } else {\n        setTasks(data);\n        setHierarchyData([]); // Clear hierarchy data for filtered view\n      }\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      setTasks([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle filter application\n  const handleFilterApply = filterData => {\n    console.log(\"Applying filters:\", filterData);\n\n    // Process the filter data\n    const processedFilters = {\n      startDate: filterData.startDate || null,\n      endDate: filterData.endDate || null,\n      types: [],\n      assignee: filterData.assignee || null,\n      status: filterData.status || null,\n      priority: filterData.priority || null\n    };\n\n    // Process work types from checkboxes\n    if (filterData.epic) processedFilters.types.push('epic');\n    if (filterData.story) processedFilters.types.push('story');\n    if (filterData.subtask) processedFilters.types.push('sub_task');\n    if (filterData.task) processedFilters.types.push('task');\n    setActiveFilters(processedFilters);\n    fetchTasks(processedFilters);\n  };\n\n  // Handle filter clear\n  const handleFilterClear = () => {\n    console.log(\"Clearing filters\");\n    setActiveFilters(null);\n    fetchTasks(); // Fetch all tasks without filters\n  };\n  const handleAddTask = () => {\n    navigate(\"/add-task\");\n  };\n  const handleDeleteClick = task => {\n    setTaskToDelete(task);\n    setShowConfirm(true);\n  };\n  const handleConfirmDelete = async () => {\n    try {\n      console.log(\"Deleting task:\", taskToDelete);\n      // Use the correct task ID field based on the Task entity\n      const taskId = taskToDelete.taskId || taskToDelete.id;\n      console.log(\"Using task ID:\", taskId);\n      const response = await fetch(`/tasks/${taskId}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to delete task: ${errorText}`);\n      }\n      console.log(\"Task deleted successfully\");\n      // Remove from local state after successful backend deletion\n      setTasks(tasks.filter(t => (t.taskId || t.id) !== taskId));\n      setShowConfirm(false);\n      setTaskToDelete(null);\n\n      // Refresh the task list to ensure consistency\n      fetchTasks(activeFilters);\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      alert(`Failed to delete task: ${error.message}`);\n      setShowConfirm(false);\n      setTaskToDelete(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setShowConfirm(false);\n    setTaskToDelete(null);\n  };\n\n  // Handle task editing\n  const handleEditTask = task => {\n    navigate(`/edit-task/${task.id || task.taskId}`);\n  };\n\n  // Handle creating a subtask\n  const handleCreateSubtask = parentTaskId => {\n    navigate(`/add-task?parentId=${parentTaskId}`);\n  };\n\n  // Handle expand/collapse of task tree nodes\n  const handleToggleExpand = (taskId, forceState = null) => {\n    setExpandedTasks(prev => {\n      const newExpanded = new Set(prev);\n      if (forceState === true) {\n        newExpanded.add(taskId);\n      } else if (forceState === false) {\n        newExpanded.delete(taskId);\n      } else {\n        if (newExpanded.has(taskId)) {\n          newExpanded.delete(taskId);\n        } else {\n          newExpanded.add(taskId);\n        }\n      }\n      return newExpanded;\n    });\n  };\n\n  // Handle view mode toggle\n  const handleViewModeToggle = () => {\n    const newMode = viewMode === 'hierarchy' ? 'table' : 'hierarchy';\n    setViewMode(newMode);\n    // Refetch tasks for the new view mode\n    fetchTasks(activeFilters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modern-task-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-view-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-toggle\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `view-toggle-btn ${viewMode === 'hierarchy' ? 'active' : ''}`,\n            onClick: handleViewModeToggle,\n            children: viewMode === 'hierarchy' ? 'ðŸ“‹ Hierarchy' : 'ðŸ“Š Table'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modern-create-btn\",\n          onClick: handleAddTask,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"plus-icon\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), \" Create Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modern-filter-section\",\n      children: /*#__PURE__*/_jsxDEV(Filter, {\n        onFilterApply: handleFilterApply,\n        onFilterClear: handleFilterClear,\n        activeFilters: activeFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content-container\",\n      children: viewMode === 'hierarchy' ? /*#__PURE__*/_jsxDEV(HierarchicalTaskTree, {\n        tasks: tasks,\n        onEdit: handleEditTask,\n        onDelete: taskId => handleDeleteClick(tasks.find(t => (t.id || t.taskId) === taskId)),\n        onCreateSubtask: handleCreateSubtask,\n        expandedTasks: expandedTasks,\n        onToggleExpand: handleToggleExpand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modern-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-scroll-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"modern-task-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Assignee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Priority\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Estimation (Days)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Start Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Due Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Labels\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: tasks.filter(task => {\n                var _task$title, _task$assignee, _task$status;\n                return ((_task$title = task.title) === null || _task$title === void 0 ? void 0 : _task$title.toLowerCase().includes(filter.toLowerCase())) || ((_task$assignee = task.assignee) === null || _task$assignee === void 0 ? void 0 : _task$assignee.toLowerCase().includes(filter.toLowerCase())) || ((_task$status = task.status) === null || _task$status === void 0 ? void 0 : _task$status.toLowerCase().includes(filter.toLowerCase()));\n              }).map((task, idx) => /*#__PURE__*/_jsxDEV(TaskCard, {\n                task: task,\n                onDelete: () => handleDeleteClick(task),\n                onEdit: handleEditTask\n              }, task.task_id || idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), showConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modern-confirm-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modern-confirm-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-btn delete\",\n            onClick: handleConfirmDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-btn cancel\",\n            onClick: handleCancelDelete,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskView, \"sQ8wFLN0VPyHxSxmOJ+ZwHZwSlU=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskView;\nexport default TaskView;\nvar _c;\n$RefreshReg$(_c, \"TaskView\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","HierarchicalTaskTree","TaskCard","Filter","jsxDEV","_jsxDEV","TaskView","_s","tasks","setTasks","hierarchyData","setHierarchyData","showConfirm","setShowConfirm","taskToDelete","setTaskToDelete","filter","setFilter","activeFilters","setActiveFilters","expandedTasks","setExpandedTasks","Set","loading","setLoading","navigate","fetchTasks","filterParams","url","queryParams","URLSearchParams","startDate","append","endDate","types","length","join","assignee","status","priority","toString","console","log","response","fetch","ok","Error","data","json","error","handleFilterApply","filterData","processedFilters","epic","push","story","subtask","task","handleFilterClear","handleAddTask","handleDeleteClick","handleConfirmDelete","taskId","id","method","errorText","text","t","alert","message","handleCancelDelete","handleEditTask","handleCreateSubtask","parentTaskId","handleToggleExpand","forceState","prev","newExpanded","add","delete","has","handleViewModeToggle","newMode","viewMode","setViewMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onFilterApply","onFilterClear","onEdit","onDelete","find","onCreateSubtask","onToggleExpand","_task$title","_task$assignee","_task$status","title","toLowerCase","includes","map","idx","task_id","_c","$RefreshReg$"],"sources":["/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/modules/TaskView.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport HierarchicalTaskTree from \"../components/HierarchicalTaskTree\";\nimport TaskCard from \"../components/TaskList\";\nimport \"./TaskView.css\";\nimport Filter from \"../components/Filter\";\n\nconst TaskView = () => {\n  const [tasks, setTasks] = useState([]);\n  const [hierarchyData, setHierarchyData] = useState([]);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [filter, setFilter] = useState(\"\");\n  const [activeFilters, setActiveFilters] = useState(null);\n  const [expandedTasks, setExpandedTasks] = useState(new Set());\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Fetch tasks from backend API\n  const fetchTasks = async (filterParams = null) => {\n    setLoading(true);\n    try {\n      let url = \"/tasks\";\n      \n      // Always use the hierarchy endpoint for unified view\n      if (!filterParams) {\n        url = \"/tasks/hierarchy\";\n      } else if (filterParams) {\n        // If filters are provided, use the filter endpoint\n        const queryParams = new URLSearchParams();\n        \n        if (filterParams.startDate) queryParams.append('startDate', filterParams.startDate);\n        if (filterParams.endDate) queryParams.append('endDate', filterParams.endDate);\n        if (filterParams.types && filterParams.types.length > 0) {\n          queryParams.append('types', filterParams.types.join(','));\n        }\n        if (filterParams.assignee) queryParams.append('assignee', filterParams.assignee);\n        if (filterParams.status) queryParams.append('status', filterParams.status);\n        if (filterParams.priority) queryParams.append('priority', filterParams.priority);\n        \n        url = `/tasks/filter?${queryParams.toString()}`;\n      }\n      \n      console.log(\"Fetching tasks from\", url);\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(\"Failed to fetch tasks\");\n      const data = await response.json();\n      console.log(\"Fetched tasks:\", data);\n      \n      // Always keep the hierarchical structure for unified view\n      if (!filterParams) {\n        setTasks(data); // Keep the hierarchical structure\n        setHierarchyData(data); // Store hierarchy data separately\n      } else {\n        setTasks(data);\n        setHierarchyData([]); // Clear hierarchy data for filtered view\n      }\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      setTasks([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle filter application\n  const handleFilterApply = (filterData) => {\n    console.log(\"Applying filters:\", filterData);\n    \n    // Process the filter data\n    const processedFilters = {\n      startDate: filterData.startDate || null,\n      endDate: filterData.endDate || null,\n      types: [],\n      assignee: filterData.assignee || null,\n      status: filterData.status || null,\n      priority: filterData.priority || null\n    };\n    \n    // Process work types from checkboxes\n    if (filterData.epic) processedFilters.types.push('epic');\n    if (filterData.story) processedFilters.types.push('story');\n    if (filterData.subtask) processedFilters.types.push('sub_task');\n    if (filterData.task) processedFilters.types.push('task');\n    \n    setActiveFilters(processedFilters);\n    fetchTasks(processedFilters);\n  };\n\n  // Handle filter clear\n  const handleFilterClear = () => {\n    console.log(\"Clearing filters\");\n    setActiveFilters(null);\n    fetchTasks(); // Fetch all tasks without filters\n  };\n\n  const handleAddTask = () => {\n    navigate(\"/add-task\");\n  };\n\n  const handleDeleteClick = (task) => {\n    setTaskToDelete(task);\n    setShowConfirm(true);\n  };\n\n  const handleConfirmDelete = async () => {\n    try {\n      console.log(\"Deleting task:\", taskToDelete);\n      // Use the correct task ID field based on the Task entity\n      const taskId = taskToDelete.taskId || taskToDelete.id;\n      console.log(\"Using task ID:\", taskId);\n      \n      const response = await fetch(`/tasks/${taskId}`, {\n        method: \"DELETE\"\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to delete task: ${errorText}`);\n      }\n      \n      console.log(\"Task deleted successfully\");\n      // Remove from local state after successful backend deletion\n      setTasks(tasks.filter(t => (t.taskId || t.id) !== taskId));\n      setShowConfirm(false);\n      setTaskToDelete(null);\n      \n      // Refresh the task list to ensure consistency\n      fetchTasks(activeFilters);\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      alert(`Failed to delete task: ${error.message}`);\n      setShowConfirm(false);\n      setTaskToDelete(null);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setShowConfirm(false);\n    setTaskToDelete(null);\n  };\n\n  // Handle task editing\n  const handleEditTask = (task) => {\n    navigate(`/edit-task/${task.id || task.taskId}`);\n  };\n\n  // Handle creating a subtask\n  const handleCreateSubtask = (parentTaskId) => {\n    navigate(`/add-task?parentId=${parentTaskId}`);\n  };\n\n  // Handle expand/collapse of task tree nodes\n  const handleToggleExpand = (taskId, forceState = null) => {\n    setExpandedTasks(prev => {\n      const newExpanded = new Set(prev);\n      if (forceState === true) {\n        newExpanded.add(taskId);\n      } else if (forceState === false) {\n        newExpanded.delete(taskId);\n      } else {\n        if (newExpanded.has(taskId)) {\n          newExpanded.delete(taskId);\n        } else {\n          newExpanded.add(taskId);\n        }\n      }\n      return newExpanded;\n    });\n  };\n\n  // Handle view mode toggle\n  const handleViewModeToggle = () => {\n    const newMode = viewMode === 'hierarchy' ? 'table' : 'hierarchy';\n    setViewMode(newMode);\n    // Refetch tasks for the new view mode\n    fetchTasks(activeFilters);\n  };\n\n  return (\n    <div className=\"modern-task-view\">\n      <div className=\"task-view-header\">\n        <h2>Task Management</h2>\n        <div className=\"header-actions\">\n          <div className=\"view-toggle\">\n            <button \n              className={`view-toggle-btn ${viewMode === 'hierarchy' ? 'active' : ''}`}\n              onClick={handleViewModeToggle}\n            >\n              {viewMode === 'hierarchy' ? 'ðŸ“‹ Hierarchy' : 'ðŸ“Š Table'}\n            </button>\n          </div>\n          <button className=\"modern-create-btn\" onClick={handleAddTask}>\n            <span className=\"plus-icon\">+</span> Create Task\n          </button>\n        </div>\n      </div>\n\n      <div className=\"modern-filter-section\">\n        <Filter onFilterApply={handleFilterApply} onFilterClear={handleFilterClear} activeFilters={activeFilters} />\n      </div>\n\n      <div className=\"task-content-container\">\n        {viewMode === 'hierarchy' ? (\n          <HierarchicalTaskTree\n            tasks={tasks}\n            onEdit={handleEditTask}\n            onDelete={(taskId) => handleDeleteClick(tasks.find(t => (t.id || t.taskId) === taskId))}\n            onCreateSubtask={handleCreateSubtask}\n            expandedTasks={expandedTasks}\n            onToggleExpand={handleToggleExpand}\n          />\n        ) : (\n          <div className=\"modern-table-container\">\n            <div className=\"table-scroll-container\">\n              <table className=\"modern-task-table\">\n                <thead>\n                  <tr>\n                    <th>Title</th>\n                    <th>Description</th>\n                    <th>Assignee</th>\n                    <th>Type</th>\n                    <th>Status</th>\n                    <th>Priority</th>\n                    <th>Estimation (Days)</th>\n                    <th>Start Date</th>\n                    <th>Due Date</th>\n                    <th>Labels</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {tasks\n                    .filter(task =>\n                      (task.title?.toLowerCase().includes(filter.toLowerCase()) ||\n                      task.assignee?.toLowerCase().includes(filter.toLowerCase()) ||\n                      task.status?.toLowerCase().includes(filter.toLowerCase()))\n                    )\n                    .map((task, idx) => (\n                      <TaskCard\n                        key={task.task_id || idx}\n                        task={task}\n                        onDelete={() => handleDeleteClick(task)}\n                        onEdit={handleEditTask}\n                      />\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {showConfirm && (\n        <div className=\"modern-confirm-overlay\">\n          <div className=\"modern-confirm-box\">\n            <h3>Confirm Deletion</h3>\n            <p>Are you sure you want to delete this task?</p>\n            <div className=\"confirm-buttons\">\n              <button className=\"confirm-btn delete\" onClick={handleConfirmDelete}>Delete</button>\n              <button className=\"confirm-btn cancel\" onClick={handleCancelDelete}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}