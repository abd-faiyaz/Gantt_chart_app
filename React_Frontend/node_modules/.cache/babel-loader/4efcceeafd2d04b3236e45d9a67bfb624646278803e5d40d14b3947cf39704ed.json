{"ast":null,"code":"var _jsxFileName = \"/home/abd_faiyaz/ontik_project_1/React_Frontend/src/modules/TaskView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport TaskCard from \"../components/TaskList\";\nimport HierarchicalTaskTable from \"../components/HierarchicalTaskTable\";\nimport \"./TaskView.css\";\nimport Filter from \"../components/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskView = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [activeFilters, setActiveFilters] = useState(null);\n  const [viewMode, setViewMode] = useState('hierarchical'); // 'hierarchical' or 'flat'\n  const [refreshTrigger, setRefreshTrigger] = useState(0); // Add refresh trigger for hierarchical view\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Fetch tasks from backend API\n  const fetchTasks = async (filterParams = null) => {\n    try {\n      let url = \"/tasks\";\n\n      // If filters are provided, use the filter endpoint\n      if (filterParams) {\n        const queryParams = new URLSearchParams();\n        if (filterParams.startDate) queryParams.append('startDate', filterParams.startDate);\n        if (filterParams.endDate) queryParams.append('endDate', filterParams.endDate);\n        if (filterParams.types && filterParams.types.length > 0) {\n          queryParams.append('types', filterParams.types.join(','));\n        }\n        if (filterParams.assignee) queryParams.append('assignee', filterParams.assignee);\n        if (filterParams.status) queryParams.append('status', filterParams.status);\n        if (filterParams.priority) queryParams.append('priority', filterParams.priority);\n        url = `/tasks/filter?${queryParams.toString()}`;\n      }\n      console.log(\"Fetching tasks from\", url);\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(\"Failed to fetch tasks\");\n      const data = await response.json();\n      console.log(\"Fetched tasks:\", data);\n      setTasks(data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      setTasks([]);\n    }\n  };\n\n  // Handle filter application\n  const handleFilterApply = filterData => {\n    console.log(\"Applying filters:\", filterData);\n\n    // Process the filter data\n    const processedFilters = {\n      startDate: filterData.startDate || null,\n      endDate: filterData.endDate || null,\n      types: [],\n      assignee: filterData.assignee || null,\n      status: filterData.status || null,\n      priority: filterData.priority || null\n    };\n\n    // Process work types from checkboxes\n    if (filterData.epic) processedFilters.types.push('epic');\n    if (filterData.story) processedFilters.types.push('story');\n    if (filterData.subtask) processedFilters.types.push('sub_task');\n    if (filterData.task) processedFilters.types.push('task');\n    setActiveFilters(processedFilters);\n    fetchTasks(processedFilters);\n  };\n\n  // Handle filter clear\n  const handleFilterClear = () => {\n    console.log(\"Clearing filters\");\n    setActiveFilters(null);\n    fetchTasks(); // Fetch all tasks without filters\n  };\n  const handleAddTask = () => {\n    navigate(\"/add-task\");\n  };\n  const handleAddEpic = () => {\n    navigate(\"/add-epic\");\n  };\n  const handleDeleteClick = task => {\n    setTaskToDelete(task);\n    setShowConfirm(true);\n  };\n  const handleConfirmDelete = async () => {\n    try {\n      console.log(\"Deleting item:\", taskToDelete);\n\n      // Determine if this is an epic or a task based on available fields\n      const isEpic = taskToDelete.epicId || taskToDelete.type === 'epic' || !taskToDelete.taskId && taskToDelete.name; // Epic has name, task has title\n\n      const itemId = taskToDelete.epicId || taskToDelete.taskId || taskToDelete.id;\n      const endpoint = isEpic ? `/epics/${itemId}` : `/tasks/${itemId}`;\n      const itemType = isEpic ? 'epic' : 'task';\n      console.log(`Deleting ${itemType} with ID:`, itemId);\n      const response = await fetch(endpoint, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to delete ${itemType}: ${errorText}`);\n      }\n      console.log(`${itemType} deleted successfully`);\n\n      // Remove from local state after successful backend deletion\n      if (isEpic) {\n        // For epics, we don't maintain them in the tasks state, so just refresh\n        console.log(\"Epic deleted, refreshing views...\");\n      } else {\n        setTasks(tasks.filter(t => (t.taskId || t.id) !== itemId));\n      }\n      setShowConfirm(false);\n      setTaskToDelete(null);\n\n      // Refresh the task list to ensure consistency\n      fetchTasks(activeFilters);\n\n      // Trigger refresh for hierarchical view\n      setRefreshTrigger(prev => prev + 1);\n    } catch (error) {\n      console.error(\"Error deleting item:\", error);\n      alert(`Failed to delete item: ${error.message}`);\n      setShowConfirm(false);\n      setTaskToDelete(null);\n    }\n  };\n  const handleCancelDelete = () => {\n    setShowConfirm(false);\n    setTaskToDelete(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modern-task-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-view-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `toggle-btn ${viewMode === 'hierarchical' ? 'active' : ''}`,\n            onClick: () => setViewMode('hierarchical'),\n            children: \"\\uD83D\\uDCCA Hierarchical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `toggle-btn ${viewMode === 'flat' ? 'active' : ''}`,\n            onClick: () => setViewMode('flat'),\n            children: \"\\uD83D\\uDCCB Flat List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modern-create-btn\",\n          onClick: viewMode === 'hierarchical' ? handleAddEpic : handleAddTask,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"plus-icon\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), \" \", viewMode === 'hierarchical' ? 'Create Epic' : 'Create Task']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modern-filter-section\",\n      children: /*#__PURE__*/_jsxDEV(Filter, {\n        onFilterApply: handleFilterApply,\n        onFilterClear: handleFilterClear,\n        activeFilters: activeFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modern-table-container\",\n      children: viewMode === 'hierarchical' ? /*#__PURE__*/_jsxDEV(HierarchicalTaskTable, {\n        tasks: tasks,\n        onDeleteTask: handleDeleteClick,\n        onEditTask: task => navigate(\"/edit-task\", {\n          state: {\n            task\n          }\n        }),\n        refreshTrigger: refreshTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-scroll-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"modern-task-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Estimation (Days)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"date-column\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"date-column\",\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Labels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasks.map((task, idx) => /*#__PURE__*/_jsxDEV(TaskCard, {\n              task: task,\n              onDelete: () => handleDeleteClick(task)\n            }, task.task_id || idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), showConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modern-confirm-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modern-confirm-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-btn delete\",\n            onClick: handleConfirmDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-btn cancel\",\n            onClick: handleCancelDelete,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskView, \"4Ef7/shVMP27mTNXa6AH/7vVnQ8=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskView;\nexport default TaskView;\nvar _c;\n$RefreshReg$(_c, \"TaskView\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","TaskCard","HierarchicalTaskTable","Filter","jsxDEV","_jsxDEV","TaskView","_s","tasks","setTasks","showConfirm","setShowConfirm","taskToDelete","setTaskToDelete","activeFilters","setActiveFilters","viewMode","setViewMode","refreshTrigger","setRefreshTrigger","navigate","fetchTasks","filterParams","url","queryParams","URLSearchParams","startDate","append","endDate","types","length","join","assignee","status","priority","toString","console","log","response","fetch","ok","Error","data","json","error","handleFilterApply","filterData","processedFilters","epic","push","story","subtask","task","handleFilterClear","handleAddTask","handleAddEpic","handleDeleteClick","handleConfirmDelete","isEpic","epicId","type","taskId","name","itemId","id","endpoint","itemType","method","errorText","text","filter","t","prev","alert","message","handleCancelDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onFilterApply","onFilterClear","onDeleteTask","onEditTask","state","map","idx","onDelete","task_id","_c","$RefreshReg$"],"sources":["/home/abd_faiyaz/ontik_project_1/React_Frontend/src/modules/TaskView.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport TaskCard from \"../components/TaskList\";\nimport HierarchicalTaskTable from \"../components/HierarchicalTaskTable\";\nimport \"./TaskView.css\";\nimport Filter from \"../components/Filter\";\n\nconst TaskView = () => {\n  const [tasks, setTasks] = useState([]);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n  const [activeFilters, setActiveFilters] = useState(null);\n  const [viewMode, setViewMode] = useState('hierarchical'); // 'hierarchical' or 'flat'\n  const [refreshTrigger, setRefreshTrigger] = useState(0); // Add refresh trigger for hierarchical view\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Fetch tasks from backend API\n  const fetchTasks = async (filterParams = null) => {\n    try {\n      let url = \"/tasks\";\n      \n      // If filters are provided, use the filter endpoint\n      if (filterParams) {\n        const queryParams = new URLSearchParams();\n        \n        if (filterParams.startDate) queryParams.append('startDate', filterParams.startDate);\n        if (filterParams.endDate) queryParams.append('endDate', filterParams.endDate);\n        if (filterParams.types && filterParams.types.length > 0) {\n          queryParams.append('types', filterParams.types.join(','));\n        }\n        if (filterParams.assignee) queryParams.append('assignee', filterParams.assignee);\n        if (filterParams.status) queryParams.append('status', filterParams.status);\n        if (filterParams.priority) queryParams.append('priority', filterParams.priority);\n        \n        url = `/tasks/filter?${queryParams.toString()}`;\n      }\n      \n      console.log(\"Fetching tasks from\", url);\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(\"Failed to fetch tasks\");\n      const data = await response.json();\n      console.log(\"Fetched tasks:\", data);\n      setTasks(data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      setTasks([]);\n    }\n  };\n\n  // Handle filter application\n  const handleFilterApply = (filterData) => {\n    console.log(\"Applying filters:\", filterData);\n    \n    // Process the filter data\n    const processedFilters = {\n      startDate: filterData.startDate || null,\n      endDate: filterData.endDate || null,\n      types: [],\n      assignee: filterData.assignee || null,\n      status: filterData.status || null,\n      priority: filterData.priority || null\n    };\n    \n    // Process work types from checkboxes\n    if (filterData.epic) processedFilters.types.push('epic');\n    if (filterData.story) processedFilters.types.push('story');\n    if (filterData.subtask) processedFilters.types.push('sub_task');\n    if (filterData.task) processedFilters.types.push('task');\n    \n    setActiveFilters(processedFilters);\n    fetchTasks(processedFilters);\n  };\n\n  // Handle filter clear\n  const handleFilterClear = () => {\n    console.log(\"Clearing filters\");\n    setActiveFilters(null);\n    fetchTasks(); // Fetch all tasks without filters\n  };\n\n  const handleAddTask = () => {\n    navigate(\"/add-task\");\n  };\n\n  const handleAddEpic = () => {\n    navigate(\"/add-epic\");\n  };\n\n  const handleDeleteClick = (task) => {\n    setTaskToDelete(task);\n    setShowConfirm(true);\n  };\n\n  const handleConfirmDelete = async () => {\n    try {\n      console.log(\"Deleting item:\", taskToDelete);\n      \n      // Determine if this is an epic or a task based on available fields\n      const isEpic = taskToDelete.epicId || (taskToDelete.type === 'epic') || \n                    (!taskToDelete.taskId && taskToDelete.name); // Epic has name, task has title\n      \n      const itemId = taskToDelete.epicId || taskToDelete.taskId || taskToDelete.id;\n      const endpoint = isEpic ? `/epics/${itemId}` : `/tasks/${itemId}`;\n      const itemType = isEpic ? 'epic' : 'task';\n      \n      console.log(`Deleting ${itemType} with ID:`, itemId);\n      \n      const response = await fetch(endpoint, {\n        method: \"DELETE\"\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to delete ${itemType}: ${errorText}`);\n      }\n      \n      console.log(`${itemType} deleted successfully`);\n      \n      // Remove from local state after successful backend deletion\n      if (isEpic) {\n        // For epics, we don't maintain them in the tasks state, so just refresh\n        console.log(\"Epic deleted, refreshing views...\");\n      } else {\n        setTasks(tasks.filter(t => (t.taskId || t.id) !== itemId));\n      }\n      \n      setShowConfirm(false);\n      setTaskToDelete(null);\n      \n      // Refresh the task list to ensure consistency\n      fetchTasks(activeFilters);\n      \n      // Trigger refresh for hierarchical view\n      setRefreshTrigger(prev => prev + 1);\n    } catch (error) {\n      console.error(\"Error deleting item:\", error);\n      alert(`Failed to delete item: ${error.message}`);\n      setShowConfirm(false);\n      setTaskToDelete(null);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setShowConfirm(false);\n    setTaskToDelete(null);\n  };\n\n  return (\n    <div className=\"modern-task-view\">\n      <div className=\"task-view-header\">\n        <h2>Task Management</h2>\n        <div className=\"header-controls\">\n          <div className=\"view-toggle\">\n            <button \n              className={`toggle-btn ${viewMode === 'hierarchical' ? 'active' : ''}`}\n              onClick={() => setViewMode('hierarchical')}\n            >\n              📊 Hierarchical\n            </button>\n            <button \n              className={`toggle-btn ${viewMode === 'flat' ? 'active' : ''}`}\n              onClick={() => setViewMode('flat')}\n            >\n              📋 Flat List\n            </button>\n          </div>\n          <button className=\"modern-create-btn\" onClick={viewMode === 'hierarchical' ? handleAddEpic : handleAddTask}>\n            <span className=\"plus-icon\">+</span> {viewMode === 'hierarchical' ? 'Create Epic' : 'Create Task'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"modern-filter-section\">\n        <Filter onFilterApply={handleFilterApply} onFilterClear={handleFilterClear} activeFilters={activeFilters} />\n      </div>\n\n      <div className=\"modern-table-container\">\n        {viewMode === 'hierarchical' ? (\n          <HierarchicalTaskTable \n            tasks={tasks} \n            onDeleteTask={handleDeleteClick}\n            onEditTask={(task) => navigate(\"/edit-task\", { state: { task } })}\n            refreshTrigger={refreshTrigger}\n          />\n        ) : (\n          <div className=\"table-scroll-container\">\n            <table className=\"modern-task-table\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Description</th>\n                  <th>Assignee</th>\n                  <th>Type</th>\n                  <th>Status</th>\n                  <th>Priority</th>\n                  <th>Estimation (Days)</th>\n                  <th className=\"date-column\">Start Date</th>\n                  <th className=\"date-column\">Due Date</th>\n                  <th>Labels</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {tasks\n                  .map((task, idx) => (\n                    <TaskCard\n                      key={task.task_id || idx}\n                      task={task}\n                      onDelete={() => handleDeleteClick(task)}\n                    />\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      {showConfirm && (\n        <div className=\"modern-confirm-overlay\">\n          <div className=\"modern-confirm-box\">\n            <h3>Confirm Deletion</h3>\n            <p>Are you sure you want to delete this task?</p>\n            <div className=\"confirm-buttons\">\n              <button className=\"confirm-btn delete\" onClick={handleConfirmDelete}>Delete</button>\n              <button className=\"confirm-btn cancel\" onClick={handleCancelDelete}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,qBAAqB,MAAM,qCAAqC;AACvE,OAAO,gBAAgB;AACvB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACzD,MAAMqB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACduB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,UAAU,GAAG,MAAAA,CAAOC,YAAY,GAAG,IAAI,KAAK;IAChD,IAAI;MACF,IAAIC,GAAG,GAAG,QAAQ;;MAElB;MACA,IAAID,YAAY,EAAE;QAChB,MAAME,WAAW,GAAG,IAAIC,eAAe,CAAC,CAAC;QAEzC,IAAIH,YAAY,CAACI,SAAS,EAAEF,WAAW,CAACG,MAAM,CAAC,WAAW,EAAEL,YAAY,CAACI,SAAS,CAAC;QACnF,IAAIJ,YAAY,CAACM,OAAO,EAAEJ,WAAW,CAACG,MAAM,CAAC,SAAS,EAAEL,YAAY,CAACM,OAAO,CAAC;QAC7E,IAAIN,YAAY,CAACO,KAAK,IAAIP,YAAY,CAACO,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;UACvDN,WAAW,CAACG,MAAM,CAAC,OAAO,EAAEL,YAAY,CAACO,KAAK,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3D;QACA,IAAIT,YAAY,CAACU,QAAQ,EAAER,WAAW,CAACG,MAAM,CAAC,UAAU,EAAEL,YAAY,CAACU,QAAQ,CAAC;QAChF,IAAIV,YAAY,CAACW,MAAM,EAAET,WAAW,CAACG,MAAM,CAAC,QAAQ,EAAEL,YAAY,CAACW,MAAM,CAAC;QAC1E,IAAIX,YAAY,CAACY,QAAQ,EAAEV,WAAW,CAACG,MAAM,CAAC,UAAU,EAAEL,YAAY,CAACY,QAAQ,CAAC;QAEhFX,GAAG,GAAG,iBAAiBC,WAAW,CAACW,QAAQ,CAAC,CAAC,EAAE;MACjD;MAEAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEd,GAAG,CAAC;MACvC,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAChB,GAAG,CAAC;MACjC,IAAI,CAACe,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1D,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,IAAI,CAAC;MACnCjC,QAAQ,CAACiC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CnC,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;;EAED;EACA,MAAMoC,iBAAiB,GAAIC,UAAU,IAAK;IACxCV,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAES,UAAU,CAAC;;IAE5C;IACA,MAAMC,gBAAgB,GAAG;MACvBrB,SAAS,EAAEoB,UAAU,CAACpB,SAAS,IAAI,IAAI;MACvCE,OAAO,EAAEkB,UAAU,CAAClB,OAAO,IAAI,IAAI;MACnCC,KAAK,EAAE,EAAE;MACTG,QAAQ,EAAEc,UAAU,CAACd,QAAQ,IAAI,IAAI;MACrCC,MAAM,EAAEa,UAAU,CAACb,MAAM,IAAI,IAAI;MACjCC,QAAQ,EAAEY,UAAU,CAACZ,QAAQ,IAAI;IACnC,CAAC;;IAED;IACA,IAAIY,UAAU,CAACE,IAAI,EAAED,gBAAgB,CAAClB,KAAK,CAACoB,IAAI,CAAC,MAAM,CAAC;IACxD,IAAIH,UAAU,CAACI,KAAK,EAAEH,gBAAgB,CAAClB,KAAK,CAACoB,IAAI,CAAC,OAAO,CAAC;IAC1D,IAAIH,UAAU,CAACK,OAAO,EAAEJ,gBAAgB,CAAClB,KAAK,CAACoB,IAAI,CAAC,UAAU,CAAC;IAC/D,IAAIH,UAAU,CAACM,IAAI,EAAEL,gBAAgB,CAAClB,KAAK,CAACoB,IAAI,CAAC,MAAM,CAAC;IAExDlC,gBAAgB,CAACgC,gBAAgB,CAAC;IAClC1B,UAAU,CAAC0B,gBAAgB,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9BjB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BtB,gBAAgB,CAAC,IAAI,CAAC;IACtBM,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,MAAMiC,aAAa,GAAGA,CAAA,KAAM;IAC1BlC,QAAQ,CAAC,WAAW,CAAC;EACvB,CAAC;EAED,MAAMmC,aAAa,GAAGA,CAAA,KAAM;IAC1BnC,QAAQ,CAAC,WAAW,CAAC;EACvB,CAAC;EAED,MAAMoC,iBAAiB,GAAIJ,IAAI,IAAK;IAClCvC,eAAe,CAACuC,IAAI,CAAC;IACrBzC,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM8C,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACFrB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEzB,YAAY,CAAC;;MAE3C;MACA,MAAM8C,MAAM,GAAG9C,YAAY,CAAC+C,MAAM,IAAK/C,YAAY,CAACgD,IAAI,KAAK,MAAO,IACrD,CAAChD,YAAY,CAACiD,MAAM,IAAIjD,YAAY,CAACkD,IAAK,CAAC,CAAC;;MAE3D,MAAMC,MAAM,GAAGnD,YAAY,CAAC+C,MAAM,IAAI/C,YAAY,CAACiD,MAAM,IAAIjD,YAAY,CAACoD,EAAE;MAC5E,MAAMC,QAAQ,GAAGP,MAAM,GAAG,UAAUK,MAAM,EAAE,GAAG,UAAUA,MAAM,EAAE;MACjE,MAAMG,QAAQ,GAAGR,MAAM,GAAG,MAAM,GAAG,MAAM;MAEzCtB,OAAO,CAACC,GAAG,CAAC,YAAY6B,QAAQ,WAAW,EAAEH,MAAM,CAAC;MAEpD,MAAMzB,QAAQ,GAAG,MAAMC,KAAK,CAAC0B,QAAQ,EAAE;QACrCE,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAAC7B,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM4B,SAAS,GAAG,MAAM9B,QAAQ,CAAC+B,IAAI,CAAC,CAAC;QACvC,MAAM,IAAI5B,KAAK,CAAC,oBAAoByB,QAAQ,KAAKE,SAAS,EAAE,CAAC;MAC/D;MAEAhC,OAAO,CAACC,GAAG,CAAC,GAAG6B,QAAQ,uBAAuB,CAAC;;MAE/C;MACA,IAAIR,MAAM,EAAE;QACV;QACAtB,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAClD,CAAC,MAAM;QACL5B,QAAQ,CAACD,KAAK,CAAC8D,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACV,MAAM,IAAIU,CAAC,CAACP,EAAE,MAAMD,MAAM,CAAC,CAAC;MAC5D;MAEApD,cAAc,CAAC,KAAK,CAAC;MACrBE,eAAe,CAAC,IAAI,CAAC;;MAErB;MACAQ,UAAU,CAACP,aAAa,CAAC;;MAEzB;MACAK,iBAAiB,CAACqD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC,OAAO5B,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C6B,KAAK,CAAC,0BAA0B7B,KAAK,CAAC8B,OAAO,EAAE,CAAC;MAChD/D,cAAc,CAAC,KAAK,CAAC;MACrBE,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAED,MAAM8D,kBAAkB,GAAGA,CAAA,KAAM;IAC/BhE,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACER,OAAA;IAAKuE,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BxE,OAAA;MAAKuE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BxE,OAAA;QAAAwE,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB5E,OAAA;QAAKuE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BxE,OAAA;UAAKuE,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BxE,OAAA;YACEuE,SAAS,EAAE,cAAc5D,QAAQ,KAAK,cAAc,GAAG,QAAQ,GAAG,EAAE,EAAG;YACvEkE,OAAO,EAAEA,CAAA,KAAMjE,WAAW,CAAC,cAAc,CAAE;YAAA4D,QAAA,EAC5C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT5E,OAAA;YACEuE,SAAS,EAAE,cAAc5D,QAAQ,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;YAC/DkE,OAAO,EAAEA,CAAA,KAAMjE,WAAW,CAAC,MAAM,CAAE;YAAA4D,QAAA,EACpC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN5E,OAAA;UAAQuE,SAAS,EAAC,mBAAmB;UAACM,OAAO,EAAElE,QAAQ,KAAK,cAAc,GAAGuC,aAAa,GAAGD,aAAc;UAAAuB,QAAA,gBACzGxE,OAAA;YAAMuE,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KAAC,EAACjE,QAAQ,KAAK,cAAc,GAAG,aAAa,GAAG,aAAa;QAAA;UAAA8D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3F,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5E,OAAA;MAAKuE,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eACpCxE,OAAA,CAACF,MAAM;QAACgF,aAAa,EAAEtC,iBAAkB;QAACuC,aAAa,EAAE/B,iBAAkB;QAACvC,aAAa,EAAEA;MAAc;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzG,CAAC,eAEN5E,OAAA;MAAKuE,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpC7D,QAAQ,KAAK,cAAc,gBAC1BX,OAAA,CAACH,qBAAqB;QACpBM,KAAK,EAAEA,KAAM;QACb6E,YAAY,EAAE7B,iBAAkB;QAChC8B,UAAU,EAAGlC,IAAI,IAAKhC,QAAQ,CAAC,YAAY,EAAE;UAAEmE,KAAK,EAAE;YAAEnC;UAAK;QAAE,CAAC,CAAE;QAClElC,cAAc,EAAEA;MAAe;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,gBAEF5E,OAAA;QAAKuE,SAAS,EAAC,wBAAwB;QAAAC,QAAA,eACrCxE,OAAA;UAAOuE,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAClCxE,OAAA;YAAAwE,QAAA,eACExE,OAAA;cAAAwE,QAAA,gBACExE,OAAA;gBAAAwE,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACd5E,OAAA;gBAAAwE,QAAA,EAAI;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpB5E,OAAA;gBAAAwE,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjB5E,OAAA;gBAAAwE,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACb5E,OAAA;gBAAAwE,QAAA,EAAI;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACf5E,OAAA;gBAAAwE,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjB5E,OAAA;gBAAAwE,QAAA,EAAI;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1B5E,OAAA;gBAAIuE,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3C5E,OAAA;gBAAIuE,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzC5E,OAAA;gBAAAwE,QAAA,EAAI;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACf5E,OAAA;gBAAAwE,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACR5E,OAAA;YAAAwE,QAAA,EACGrE,KAAK,CACHgF,GAAG,CAAC,CAACpC,IAAI,EAAEqC,GAAG,kBACbpF,OAAA,CAACJ,QAAQ;cAEPmD,IAAI,EAAEA,IAAK;cACXsC,QAAQ,EAAEA,CAAA,KAAMlC,iBAAiB,CAACJ,IAAI;YAAE,GAFnCA,IAAI,CAACuC,OAAO,IAAIF,GAAG;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGzB,CACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAELvE,WAAW,iBACVL,OAAA;MAAKuE,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACrCxE,OAAA;QAAKuE,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCxE,OAAA;UAAAwE,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB5E,OAAA;UAAAwE,QAAA,EAAG;QAA0C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjD5E,OAAA;UAAKuE,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BxE,OAAA;YAAQuE,SAAS,EAAC,oBAAoB;YAACM,OAAO,EAAEzB,mBAAoB;YAAAoB,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpF5E,OAAA;YAAQuE,SAAS,EAAC,oBAAoB;YAACM,OAAO,EAAEP,kBAAmB;YAAAE,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1E,EAAA,CApOID,QAAQ;EAAA,QAOKN,WAAW;AAAA;AAAA4F,EAAA,GAPxBtF,QAAQ;AAsOd,eAAeA,QAAQ;AAAC,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}