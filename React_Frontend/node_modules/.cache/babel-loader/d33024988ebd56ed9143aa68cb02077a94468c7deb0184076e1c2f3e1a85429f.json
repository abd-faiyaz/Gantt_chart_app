{"ast":null,"code":"var _jsxFileName = \"/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/modules/TaskForm.js\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nimport useDateCalculation from \"../hooks/useDateCalculation\";\nimport HolidayCalendar from \"../components/HolidayCalendar\";\nimport \"./TaskForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const task = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.task; // get task if passed\n\n  const [allTasks, setAllTasks] = useState([]);\n  const [potentialParents, setPotentialParents] = useState([]);\n  const [selectedTaskType, setSelectedTaskType] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [estimateDays, setEstimateDays] = useState('');\n  const [endDateValue, setEndDateValue] = useState('');\n\n  // Use the date calculation hook\n  const {\n    holidays,\n    calculatedEndDate,\n    isCalculating,\n    validationMessage,\n    calculateEndDate,\n    validateEndDate,\n    getHolidayInfo,\n    shouldDisableDate,\n    getDateClassName\n  } = useDateCalculation();\n\n  // Fetch all tasks for parent task dropdown (API integration spot)\n  useEffect(() => {\n    // Fetch all tasks for parent task dropdown from backend\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(\"/tasks\");\n        if (!response.ok) throw new Error(\"Failed to fetch tasks\");\n        const tasks = await response.json();\n        setAllTasks(tasks);\n      } catch (error) {\n        setAllTasks([]);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  // Fetch potential parent tasks when task type changes\n  const fetchPotentialParents = async taskType => {\n    if (!taskType || taskType === 'epic') {\n      setPotentialParents([]);\n      return;\n    }\n    try {\n      const response = await fetch(`/tasks/potential-parents/${taskType}`);\n      if (!response.ok) throw new Error(\"Failed to fetch potential parents\");\n      const parents = await response.json();\n      setPotentialParents(parents);\n    } catch (error) {\n      console.error(\"Error fetching potential parents:\", error);\n      setPotentialParents([]);\n    }\n  };\n\n  // Handle task type change\n  const handleTaskTypeChange = e => {\n    const newType = e.target.value;\n    setSelectedTaskType(newType);\n    setValue(\"type\", newType);\n\n    // Reset parent task selection when type changes\n    setValue(\"parentTask\", \"\");\n\n    // Fetch new potential parents\n    fetchPotentialParents(newType);\n  };\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  // Helper function to extract days from originalEstimate\n  const extractDaysFromEstimate = originalEstimate => {\n    if (!originalEstimate) return \"\";\n\n    // If it's a string, check for different formats\n    if (typeof originalEstimate === 'string') {\n      // Handle P{days}D format\n      if (originalEstimate.startsWith('P') && originalEstimate.endsWith('D')) {\n        return originalEstimate.substring(1, originalEstimate.length - 1);\n      }\n      // Handle PT{hours}H format (convert to days)\n      if (originalEstimate.startsWith('PT') && originalEstimate.endsWith('H')) {\n        const hours = parseFloat(originalEstimate.substring(2, originalEstimate.length - 1));\n        return (hours / 8).toString(); // Convert hours to days (8 hours per day)\n      }\n    }\n\n    // If it's an object with duration properties, try to extract days\n    if (typeof originalEstimate === 'object') {\n      // Handle Java Duration object structure\n      if (originalEstimate.seconds !== undefined) {\n        const hours = originalEstimate.seconds / 3600; // Convert seconds to hours\n        return (hours / 8).toString(); // Convert hours to days\n      }\n    }\n    return originalEstimate.toString();\n  };\n\n  // Prefill form if editing\n  useEffect(() => {\n    if (task) {\n      const startDateVal = task.start_date || task.startDate || \"\";\n      const endDateVal = task.due_date || task.dueDate || \"\";\n      const estimateVal = extractDaysFromEstimate(task.originalEstimate);\n      setStartDate(startDateVal);\n      setEndDateValue(endDateVal);\n      setEstimateDays(estimateVal);\n      reset({\n        type: task.type ? task.type.toLowerCase() : \"\",\n        title: task.title || \"\",\n        description: task.task_description || \"\",\n        epicName: task.epicName || \"\",\n        startDate: startDateVal,\n        endDate: endDateVal,\n        status: task.status || \"\",\n        priority: task.priority || \"\",\n        estimate: estimateVal,\n        assignee: task.assignee || \"\",\n        labels: task.labels || \"\",\n        sprint: task.sprint || \"\",\n        parentTask: task.parentTask || \"\"\n      });\n\n      // Also update setValue for the calendar components\n      setValue(\"startDate\", startDateVal);\n      setValue(\"endDate\", endDateVal);\n    }\n  }, [task, reset, setValue]);\n\n  // Auto-calculate end date when start date or estimate changes\n  useEffect(() => {\n    if (startDate && estimateDays && estimateDays > 0) {\n      calculateEndDate(startDate, parseInt(estimateDays));\n    }\n  }, [startDate, estimateDays, calculateEndDate]);\n\n  // Sync state changes with form values\n  useEffect(() => {\n    if (startDate) {\n      setValue(\"startDate\", startDate, {\n        shouldValidate: true\n      });\n    }\n  }, [startDate, setValue]);\n  useEffect(() => {\n    if (endDateValue) {\n      setValue(\"endDate\", endDateValue, {\n        shouldValidate: true\n      });\n    }\n  }, [endDateValue, setValue]);\n  useEffect(() => {\n    if (estimateDays) {\n      setValue(\"estimate\", estimateDays, {\n        shouldValidate: true\n      });\n    }\n  }, [estimateDays, setValue]);\n\n  // Handle start date change\n  const handleStartDateChange = e => {\n    const newStartDate = e.target.value;\n    setStartDate(newStartDate);\n    setValue(\"startDate\", newStartDate, {\n      shouldValidate: true\n    });\n  };\n\n  // Handle estimate days change\n  const handleEstimateChange = e => {\n    const newEstimate = e.target.value;\n    setEstimateDays(newEstimate);\n    setValue(\"estimate\", newEstimate, {\n      shouldValidate: true\n    });\n  };\n\n  // Handle end date change and validation\n  const handleEndDateChange = async e => {\n    const newEndDate = e.target.value;\n    setEndDateValue(newEndDate);\n    setValue(\"endDate\", newEndDate, {\n      shouldValidate: true\n    });\n\n    // Validate the selected end date\n    if (startDate && estimateDays && newEndDate) {\n      await validateEndDate(startDate, parseInt(estimateDays), newEndDate);\n    }\n  };\n\n  // Handles form submission\n  const onSubmit = async data => {\n    // Log the submitted form data for debugging\n    console.log(\"Form submitted with data:\", data);\n    console.log(\"Current state - startDate:\", startDate, \"estimateDays:\", estimateDays, \"endDateValue:\", endDateValue);\n\n    // Check if start date is provided, alert if missing\n    if (!data.startDate) {\n      console.error(\"Start date validation failed - data.startDate:\", data.startDate);\n      alert(\"Start date is required\");\n      return;\n    }\n\n    // Find the selected parent task from allTasks to get its UUID\n    let parentTaskId = null;\n    let epicId = null;\n    if (data.parentTask) {\n      const selectedParent = allTasks.find(t => t.title === data.parentTask);\n      if (selectedParent) {\n        parentTaskId = selectedParent.taskId || selectedParent.id;\n        // If the parent is an epic, set epicId; otherwise, keep the epic relationship\n        if (selectedParent.type === 'epic') {\n          epicId = parentTaskId;\n          parentTaskId = null; // Epics use epicId, not parentTaskId\n        } else {\n          // For non-epic parents, inherit the epic from the parent\n          epicId = selectedParent.epicId;\n        }\n      }\n    }\n\n    // Prepare the payload object to match backend API expectations\n    const payload = {\n      type: data.type,\n      // Task type (task, epic, etc.)\n      title: data.title,\n      // Task title\n      description: data.description || null,\n      // Task description or null\n      startDate: data.startDate,\n      // Start date\n      dueDate: data.endDate || null,\n      // End date or null\n      status: data.status,\n      // Task status\n      priority: data.priority,\n      // Task priority\n      // Convert estimate to PostgreSQL INTERVAL format if provided (days instead of hours)\n      originalEstimate: data.estimate ? `P${data.estimate}D` : null,\n      // These fields are set to null for now (require UUIDs)\n      assigneeId: null,\n      epicId: epicId,\n      sprintId: null,\n      parentTaskId: parentTaskId,\n      // Split labels by comma, trim whitespace, filter out empty strings\n      labels: data.labels ? data.labels.split(',').map(l => l.trim()).filter(l => l.length > 0) : null\n    };\n\n    // Log the payload for debugging\n    console.log(\"Sending payload:\", payload);\n    try {\n      if (task) {\n        // If editing, update the existing task\n        console.log(\"Updating task:\", task.taskId || task.id);\n        const response = await fetch(`/tasks/${task.taskId || task.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        // If response is not OK, throw error with response text\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to update task: ${errorText}`);\n        }\n        // Log success\n        console.log(\"Task updated successfully\");\n      } else {\n        // If creating, send POST request to create new task\n        console.log(\"Creating new task\");\n        const response = await fetch(\"/tasks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        // If response is not OK, throw error with response text\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to create task: ${errorText}`);\n        }\n        // Parse and log the created task result\n        const result = await response.json();\n        console.log(\"Task created successfully:\", result);\n      }\n      // Navigate to the view-tasks page after success\n      navigate(\"/view-tasks\");\n    } catch (error) {\n      // Log and alert any errors that occur during save\n      console.error(\"Error saving task:\", error);\n      alert(`Failed to save task: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: task ? \"Edit Task\" : \"+Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"type\", {\n                required: true\n              }),\n              className: \"box\",\n              onChange: handleTaskTypeChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"epic\",\n                children: \"Epic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"story\",\n                children: \"Story\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"task\",\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sub_task\",\n                children: \"Sub Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), errors.type && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Task Name/Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"title\", {\n                required: true\n              }),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ...register(\"description\"),\n              rows: 3,\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"epic-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Linked Epic Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"epicName\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(HolidayCalendar, {\n              value: startDate,\n              onChange: date => {\n                setStartDate(date);\n                // Update the form field using setValue\n                setValue(\"startDate\", date, {\n                  shouldValidate: true\n                });\n              },\n              holidays: holidays,\n              shouldDisableDate: shouldDisableDate,\n              getDateClassName: getDateClassName,\n              getHolidayInfo: getHolidayInfo,\n              placeholder: \"Select start date\",\n              required: true,\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              ...register(\"startDate\", {\n                required: \"Start date is required\"\n              }),\n              value: startDate || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 33\n            }, this), errors.startDate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.startDate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"End Date/Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(HolidayCalendar, {\n              value: endDateValue,\n              onChange: date => {\n                setEndDateValue(date);\n                // Update the form field using setValue\n                setValue(\"endDate\", date, {\n                  shouldValidate: true\n                });\n                // Validate the selected end date\n                if (startDate && estimateDays && date) {\n                  validateEndDate(startDate, parseInt(estimateDays), date);\n                }\n              },\n              holidays: holidays,\n              minDate: calculatedEndDate // Restrict to calculated date or later\n              ,\n              shouldDisableDate: date => {\n                // Disable if before calculated end date\n                if (calculatedEndDate && new Date(date) < new Date(calculatedEndDate)) {\n                  return true;\n                }\n                return shouldDisableDate ? shouldDisableDate(date) : false;\n              },\n              getDateClassName: getDateClassName,\n              getHolidayInfo: getHolidayInfo,\n              placeholder: calculatedEndDate ? `Suggested: ${calculatedEndDate}` : \"Select end date\",\n              className: \"box\",\n              style: {\n                backgroundColor: calculatedEndDate && !endDateValue ? '#f3f4f6' : 'white',\n                color: calculatedEndDate && !endDateValue ? '#6b7280' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              ...register(\"endDate\"),\n              value: endDateValue || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 33\n            }, this), calculatedEndDate && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mt-1\",\n              children: isCalculating ? 'Calculating...' : `Suggested end date: ${calculatedEndDate}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 37\n            }, this), validationMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-red-500 mt-1\",\n              children: validationMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-priority\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"status\", {\n                required: true\n              }),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"To Do\",\n                children: \"To Do\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"In Progress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Done\",\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, this), errors.status && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-priority\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"priority\"),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-assignee\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Original Estimate (days)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.5\",\n              min: \"0\",\n              ...register(\"estimate\", {\n                onChange: handleEstimateChange,\n                min: {\n                  value: 0,\n                  message: \"Estimate must be positive\"\n                }\n              }),\n              className: \"box\",\n              placeholder: \"Enter days (e.g., 1.5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 29\n            }, this), errors.estimate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.estimate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-assignee\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"assignee\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Labels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"labels\"),\n              className: \"box\",\n              placeholder: \"tag1, tag2, tag3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Sprint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"sprint\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Parent Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"parentTask\"),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select parent task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 33\n              }, this), allTasks.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: t.title,\n                children: t.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            children: task ? \"Update Task\" : \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"b+Va9MBncFAp0t7wkNErz57Pmfw=\", false, function () {\n  return [useNavigate, useLocation, useDateCalculation, useForm];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useLocation","useNavigate","useForm","useEffect","useState","useDateCalculation","HolidayCalendar","jsxDEV","_jsxDEV","TaskForm","_s","_location$state","navigate","location","task","state","allTasks","setAllTasks","potentialParents","setPotentialParents","selectedTaskType","setSelectedTaskType","startDate","setStartDate","estimateDays","setEstimateDays","endDateValue","setEndDateValue","holidays","calculatedEndDate","isCalculating","validationMessage","calculateEndDate","validateEndDate","getHolidayInfo","shouldDisableDate","getDateClassName","fetchTasks","response","fetch","ok","Error","tasks","json","error","fetchPotentialParents","taskType","parents","console","handleTaskTypeChange","e","newType","target","value","setValue","register","handleSubmit","reset","formState","errors","extractDaysFromEstimate","originalEstimate","startsWith","endsWith","substring","length","hours","parseFloat","toString","seconds","undefined","startDateVal","start_date","endDateVal","due_date","dueDate","estimateVal","type","toLowerCase","title","description","task_description","epicName","endDate","status","priority","estimate","assignee","labels","sprint","parentTask","parseInt","shouldValidate","handleStartDateChange","newStartDate","handleEstimateChange","newEstimate","handleEndDateChange","newEndDate","onSubmit","data","log","alert","parentTaskId","epicId","selectedParent","find","t","taskId","id","payload","assigneeId","sprintId","split","map","l","trim","filter","method","headers","body","JSON","stringify","errorText","text","result","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","required","onChange","rows","date","placeholder","minDate","Date","style","backgroundColor","color","step","min","_c","$RefreshReg$"],"sources":["/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/modules/TaskForm.js"],"sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nimport useDateCalculation from \"../hooks/useDateCalculation\";\nimport HolidayCalendar from \"../components/HolidayCalendar\";\nimport \"./TaskForm.css\"\n\nconst TaskForm = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const task = location.state?.task; // get task if passed\n\n    const [allTasks, setAllTasks] = useState([]);\n    const [potentialParents, setPotentialParents] = useState([]);\n    const [selectedTaskType, setSelectedTaskType] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [estimateDays, setEstimateDays] = useState('');\n    const [endDateValue, setEndDateValue] = useState('');\n\n    // Use the date calculation hook\n    const {\n        holidays,\n        calculatedEndDate,\n        isCalculating,\n        validationMessage,\n        calculateEndDate,\n        validateEndDate,\n        getHolidayInfo,\n        shouldDisableDate,\n        getDateClassName\n    } = useDateCalculation();\n\n    // Fetch all tasks for parent task dropdown (API integration spot)\n    useEffect(() => {\n        // Fetch all tasks for parent task dropdown from backend\n        const fetchTasks = async () => {\n            try {\n                const response = await fetch(\"/tasks\");\n                if (!response.ok) throw new Error(\"Failed to fetch tasks\");\n                const tasks = await response.json();\n                setAllTasks(tasks);\n            } catch (error) {\n                setAllTasks([]);\n            }\n        };\n        fetchTasks();\n    }, []);\n\n    // Fetch potential parent tasks when task type changes\n    const fetchPotentialParents = async (taskType) => {\n        if (!taskType || taskType === 'epic') {\n            setPotentialParents([]);\n            return;\n        }\n        \n        try {\n            const response = await fetch(`/tasks/potential-parents/${taskType}`);\n            if (!response.ok) throw new Error(\"Failed to fetch potential parents\");\n            const parents = await response.json();\n            setPotentialParents(parents);\n        } catch (error) {\n            console.error(\"Error fetching potential parents:\", error);\n            setPotentialParents([]);\n        }\n    };\n\n    // Handle task type change\n    const handleTaskTypeChange = (e) => {\n        const newType = e.target.value;\n        setSelectedTaskType(newType);\n        setValue(\"type\", newType);\n        \n        // Reset parent task selection when type changes\n        setValue(\"parentTask\", \"\");\n        \n        // Fetch new potential parents\n        fetchPotentialParents(newType);\n    };\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        setValue,\n        formState: { errors },\n    } = useForm();\n\n    // Helper function to extract days from originalEstimate\n    const extractDaysFromEstimate = (originalEstimate) => {\n        if (!originalEstimate) return \"\";\n        \n        // If it's a string, check for different formats\n        if (typeof originalEstimate === 'string') {\n            // Handle P{days}D format\n            if (originalEstimate.startsWith('P') && originalEstimate.endsWith('D')) {\n                return originalEstimate.substring(1, originalEstimate.length - 1);\n            }\n            // Handle PT{hours}H format (convert to days)\n            if (originalEstimate.startsWith('PT') && originalEstimate.endsWith('H')) {\n                const hours = parseFloat(originalEstimate.substring(2, originalEstimate.length - 1));\n                return (hours / 8).toString(); // Convert hours to days (8 hours per day)\n            }\n        }\n        \n        // If it's an object with duration properties, try to extract days\n        if (typeof originalEstimate === 'object') {\n            // Handle Java Duration object structure\n            if (originalEstimate.seconds !== undefined) {\n                const hours = originalEstimate.seconds / 3600; // Convert seconds to hours\n                return (hours / 8).toString(); // Convert hours to days\n            }\n        }\n        \n        return originalEstimate.toString();\n    };\n\n    // Prefill form if editing\n    useEffect(() => {\n        if (task) {\n            const startDateVal = task.start_date || task.startDate || \"\";\n            const endDateVal = task.due_date || task.dueDate || \"\";\n            const estimateVal = extractDaysFromEstimate(task.originalEstimate);\n            \n            setStartDate(startDateVal);\n            setEndDateValue(endDateVal);\n            setEstimateDays(estimateVal);\n            \n            reset({\n                type: task.type ? task.type.toLowerCase() : \"\",\n                title: task.title || \"\",\n                description: task.task_description || \"\",\n                epicName: task.epicName || \"\",\n                startDate: startDateVal,\n                endDate: endDateVal,\n                status: task.status || \"\",\n                priority: task.priority || \"\",\n                estimate: estimateVal,\n                assignee: task.assignee || \"\",\n                labels: task.labels || \"\",\n                sprint: task.sprint || \"\",\n                parentTask: task.parentTask || \"\",\n            });\n            \n            // Also update setValue for the calendar components\n            setValue(\"startDate\", startDateVal);\n            setValue(\"endDate\", endDateVal);\n        }\n    }, [task, reset, setValue]);\n\n    // Auto-calculate end date when start date or estimate changes\n    useEffect(() => {\n        if (startDate && estimateDays && estimateDays > 0) {\n            calculateEndDate(startDate, parseInt(estimateDays));\n        }\n    }, [startDate, estimateDays, calculateEndDate]);\n\n    // Sync state changes with form values\n    useEffect(() => {\n        if (startDate) {\n            setValue(\"startDate\", startDate, { shouldValidate: true });\n        }\n    }, [startDate, setValue]);\n\n    useEffect(() => {\n        if (endDateValue) {\n            setValue(\"endDate\", endDateValue, { shouldValidate: true });\n        }\n    }, [endDateValue, setValue]);\n\n    useEffect(() => {\n        if (estimateDays) {\n            setValue(\"estimate\", estimateDays, { shouldValidate: true });\n        }\n    }, [estimateDays, setValue]);\n\n    // Handle start date change\n    const handleStartDateChange = (e) => {\n        const newStartDate = e.target.value;\n        setStartDate(newStartDate);\n        setValue(\"startDate\", newStartDate, { shouldValidate: true });\n    };\n\n    // Handle estimate days change\n    const handleEstimateChange = (e) => {\n        const newEstimate = e.target.value;\n        setEstimateDays(newEstimate);\n        setValue(\"estimate\", newEstimate, { shouldValidate: true });\n    };\n\n    // Handle end date change and validation\n    const handleEndDateChange = async (e) => {\n        const newEndDate = e.target.value;\n        setEndDateValue(newEndDate);\n        setValue(\"endDate\", newEndDate, { shouldValidate: true });\n\n        // Validate the selected end date\n        if (startDate && estimateDays && newEndDate) {\n            await validateEndDate(startDate, parseInt(estimateDays), newEndDate);\n        }\n    };\n\n    // Handles form submission\n    const onSubmit = async (data) => {\n        // Log the submitted form data for debugging\n        console.log(\"Form submitted with data:\", data);\n        console.log(\"Current state - startDate:\", startDate, \"estimateDays:\", estimateDays, \"endDateValue:\", endDateValue);\n        \n        // Check if start date is provided, alert if missing\n        if (!data.startDate) {\n            console.error(\"Start date validation failed - data.startDate:\", data.startDate);\n            alert(\"Start date is required\");\n            return;\n        }\n\n        // Find the selected parent task from allTasks to get its UUID\n        let parentTaskId = null;\n        let epicId = null;\n        \n        if (data.parentTask) {\n            const selectedParent = allTasks.find(t => t.title === data.parentTask);\n            if (selectedParent) {\n                parentTaskId = selectedParent.taskId || selectedParent.id;\n                // If the parent is an epic, set epicId; otherwise, keep the epic relationship\n                if (selectedParent.type === 'epic') {\n                    epicId = parentTaskId;\n                    parentTaskId = null; // Epics use epicId, not parentTaskId\n                } else {\n                    // For non-epic parents, inherit the epic from the parent\n                    epicId = selectedParent.epicId;\n                }\n            }\n        }\n\n        // Prepare the payload object to match backend API expectations\n        const payload = {\n            type: data.type, // Task type (task, epic, etc.)\n            title: data.title, // Task title\n            description: data.description || null, // Task description or null\n            startDate: data.startDate, // Start date\n            dueDate: data.endDate || null, // End date or null\n            status: data.status, // Task status\n            priority: data.priority, // Task priority\n            // Convert estimate to PostgreSQL INTERVAL format if provided (days instead of hours)\n            originalEstimate: data.estimate ? `P${data.estimate}D` : null,\n            // These fields are set to null for now (require UUIDs)\n            assigneeId: null,\n            epicId: epicId,\n            sprintId: null,\n            parentTaskId: parentTaskId,\n            // Split labels by comma, trim whitespace, filter out empty strings\n            labels: data.labels ? data.labels.split(',').map(l => l.trim()).filter(l => l.length > 0) : null\n        };\n\n        // Log the payload for debugging\n        console.log(\"Sending payload:\", payload);\n\n        try {\n            if (task) {\n                // If editing, update the existing task\n                console.log(\"Updating task:\", task.taskId || task.id);\n                const response = await fetch(`/tasks/${task.taskId || task.id}`, {\n                    method: \"PUT\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(payload)\n                });\n                // If response is not OK, throw error with response text\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Failed to update task: ${errorText}`);\n                }\n                // Log success\n                console.log(\"Task updated successfully\");\n            } else {\n                // If creating, send POST request to create new task\n                console.log(\"Creating new task\");\n                const response = await fetch(\"/tasks\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(payload)\n                });\n                // If response is not OK, throw error with response text\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Failed to create task: ${errorText}`);\n                }\n                // Parse and log the created task result\n                const result = await response.json();\n                console.log(\"Task created successfully:\", result);\n            }\n            // Navigate to the view-tasks page after success\n            navigate(\"/view-tasks\");\n        } catch (error) {\n            // Log and alert any errors that occur during save\n            console.error(\"Error saving task:\", error);\n            alert(`Failed to save task: ${error.message}`);\n        }\n    };\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-header\">\n                <h1>{task ? \"Edit Task\" : \"+Create Task\"}</h1>\n            </div>\n            <div className=\"form-container\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-subcontainer\">\n                        <div className=\"type-name\">\n\n                            {/*type*/}\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Type</label>\n\n                            </div>\n                            <select\n                                {...register(\"type\", { required: true })}\n                                className=\"box\"\n                                onChange={handleTaskTypeChange}\n                            >\n                                <option value=\"\">Select type</option>\n                                <option value=\"epic\">Epic</option>\n                                <option value=\"story\">Story</option>\n                                <option value=\"task\">Task</option>\n                                <option value=\"sub_task\">Sub Task</option>\n                            </select>\n                            {errors.type && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n\n\n\n                        <div className=\"type-name\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Task Name/Title</label>\n\n                            </div>\n                            <input\n                                {...register(\"title\", { required: true })}\n                                className=\"box\"\n                            />\n                            {errors.title && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n\n                        {/* Task Description */}\n                        <div className=\"description\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n\n                            </div>\n                            <textarea\n                                {...register(\"description\")}\n                                rows={3}\n                                className=\"box\"\n                            />\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Linked Epic Name */}\n                        <div className=\"epic-name\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Linked Epic Name</label>\n\n                            </div>\n                            <input\n                                {...register(\"epicName\")}\n                                className=\"box\"\n                            />\n                        </div>\n\n\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        \n                            <div className=\"date\">\n                                <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Start Date</label>\n                                </div>\n                                <HolidayCalendar\n                                    value={startDate}\n                                    onChange={(date) => {\n                                        setStartDate(date);\n                                        // Update the form field using setValue\n                                        setValue(\"startDate\", date, { shouldValidate: true });\n                                    }}\n                                    holidays={holidays}\n                                    shouldDisableDate={shouldDisableDate}\n                                    getDateClassName={getDateClassName}\n                                    getHolidayInfo={getHolidayInfo}\n                                    placeholder=\"Select start date\"\n                                    required\n                                    className=\"box\"\n                                />\n                                {/* Hidden input for form validation */}\n                                <input\n                                    type=\"hidden\"\n                                    {...register(\"startDate\", { \n                                        required: \"Start date is required\"\n                                    })}\n                                    value={startDate || ''}\n                                />\n                                {errors.startDate && <span className=\"text-red-500 text-sm\">{errors.startDate.message}</span>}\n                            </div>\n\n                            <div className=\"date\">\n                                <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">End Date/Due Date</label>\n                                </div>\n                                <HolidayCalendar\n                                    value={endDateValue}\n                                    onChange={(date) => {\n                                        setEndDateValue(date);\n                                        // Update the form field using setValue\n                                        setValue(\"endDate\", date, { shouldValidate: true });\n                                        // Validate the selected end date\n                                        if (startDate && estimateDays && date) {\n                                            validateEndDate(startDate, parseInt(estimateDays), date);\n                                        }\n                                    }}\n                                    holidays={holidays}\n                                    minDate={calculatedEndDate} // Restrict to calculated date or later\n                                    shouldDisableDate={(date) => {\n                                        // Disable if before calculated end date\n                                        if (calculatedEndDate && new Date(date) < new Date(calculatedEndDate)) {\n                                            return true;\n                                        }\n                                        return shouldDisableDate ? shouldDisableDate(date) : false;\n                                    }}\n                                    getDateClassName={getDateClassName}\n                                    getHolidayInfo={getHolidayInfo}\n                                    placeholder={calculatedEndDate ? `Suggested: ${calculatedEndDate}` : \"Select end date\"}\n                                    className=\"box\"\n                                    style={{\n                                        backgroundColor: calculatedEndDate && !endDateValue ? '#f3f4f6' : 'white',\n                                        color: calculatedEndDate && !endDateValue ? '#6b7280' : 'black'\n                                    }}\n                                />\n                                {/* Hidden input for form validation */}\n                                <input\n                                    type=\"hidden\"\n                                    {...register(\"endDate\")}\n                                    value={endDateValue || ''}\n                                />\n                                {calculatedEndDate && (\n                                    <div className=\"text-sm text-gray-600 mt-1\">\n                                        {isCalculating ? 'Calculating...' : `Suggested end date: ${calculatedEndDate}`}\n                                    </div>\n                                )}\n                                {validationMessage && (\n                                    <div className=\"text-sm text-red-500 mt-1\">{validationMessage}</div>\n                                )}\n                            </div>\n                        \n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Status */}\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n\n                            <label className=\"block text-sm font-medium text-gray-700\">Status</label>\n                            </div>\n                            <select\n                                {...register(\"status\", { required: true })}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select status</option>\n                                <option value=\"To Do\">To Do</option>\n                                <option value=\"In Progress\">In Progress</option>\n                                <option value=\"Done\">Done</option>\n                            </select>\n                            {errors.status && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n                        {/* Priority */}\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Priority</label>\n\n                            </div>\n                            <select\n                                {...register(\"priority\")}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select priority</option>\n                                <option value=\"High\">High</option>\n                                <option value=\"Medium\">Medium</option>\n                                <option value=\"Low\">Low</option>\n                            </select>\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n\n                            <label className=\"block text-sm font-medium text-gray-700\">Original Estimate (days)</label>\n                            </div>\n                            <input\n                                type=\"number\"\n                                step=\"0.5\"\n                                min=\"0\"\n                                {...register(\"estimate\", { \n                                    onChange: handleEstimateChange,\n                                    min: { value: 0, message: \"Estimate must be positive\" }\n                                })}\n                                className=\"box\"\n                                placeholder=\"Enter days (e.g., 1.5)\"\n                            />\n                            {errors.estimate && <span className=\"text-red-500 text-sm\">{errors.estimate.message}</span>}\n                        </div>\n                        {/* Assignee */}\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Assignee</label>\n\n                            </div>\n                            <input\n                                {...register(\"assignee\")}\n                                className=\"box\"\n                            />\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Labels/Tags */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Labels</label>\n\n                            </div>\n                            <input\n                                {...register(\"labels\")}\n                                className=\"box\"\n                                placeholder=\"tag1, tag2, tag3\"\n                            />\n                        </div>\n\n                        {/* Sprint */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Sprint</label>\n\n                            </div>\n                            <input\n                                {...register(\"sprint\")}\n                                className=\"box\"\n                            />\n                        </div>\n\n                        {/* Parent Task */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Parent Task</label>\n\n                            </div>\n                            <select\n                                {...register(\"parentTask\")}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select parent task</option>\n                                {allTasks.map((t) => (\n                                    <option  value={t.title}>\n                                        {t.title}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <button\n                            type=\"submit\"\n                            className=\"button\"\n                        >\n                            {task ? \"Update Task\" : \"Create Task\"}\n                        </button>\n                    </div>\n\n                </form>\n                \n\n            </div>\n        </div>\n    );\n};\n\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}