{"ast":null,"code":"var _jsxFileName = \"/home/abd_faiyaz/ontik_project_1/React_Frontend/src/components/TypeIcon.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeIcon = ({\n  type,\n  showLabel = true,\n  className = ''\n}) => {\n  const getTypeIconAndLabel = type => {\n    switch (type === null || type === void 0 ? void 0 : type.toLowerCase()) {\n      case 'epic':\n        return {\n          icon: '‚ö°',\n          label: 'Epic'\n        };\n      case 'story':\n        return {\n          icon: 'üü©',\n          label: 'Story'\n        };\n      case 'subtask':\n        return {\n          icon: 'üîó',\n          label: 'Subtask'\n        };\n      case 'task':\n        return {\n          icon: '‚òëÔ∏è',\n          label: 'Task'\n        };\n      default:\n        return {\n          icon: '‚ùì',\n          label: type || 'Unknown'\n        };\n    }\n  };\n  const {\n    icon,\n    label\n  } = getTypeIconAndLabel(type);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `type-icon ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"icon\",\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), showLabel && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = TypeIcon;\nexport default TypeIcon;\nvar _c;\n$RefreshReg$(_c, \"TypeIcon\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TypeIcon","type","showLabel","className","getTypeIconAndLabel","toLowerCase","icon","label","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abd_faiyaz/ontik_project_1/React_Frontend/src/components/TypeIcon.js"],"sourcesContent":["import React from 'react';\n\nconst TypeIcon = ({ type, showLabel = true, className = '' }) => {\n  const getTypeIconAndLabel = (type) => {\n    switch (type?.toLowerCase()) {\n      case 'epic':\n        return { icon: '‚ö°', label: 'Epic' };\n      case 'story':\n        return { icon: 'üü©', label: 'Story' };\n      case 'subtask':\n        return { icon: 'üîó', label: 'Subtask' };\n      case 'task':\n        return { icon: '‚òëÔ∏è', label: 'Task' };\n      default:\n        return { icon: '‚ùì', label: type || 'Unknown' };\n    }\n  };\n\n  const { icon, label } = getTypeIconAndLabel(type);\n\n  return (\n    <span className={`type-icon ${className}`}>\n      <span className=\"icon\">{icon}</span>\n      {showLabel && <span className=\"label\">{label}</span>}\n    </span>\n  );\n};\n\nexport default TypeIcon;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,SAAS,GAAG,IAAI;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EAC/D,MAAMC,mBAAmB,GAAIH,IAAI,IAAK;IACpC,QAAQA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,WAAW,CAAC,CAAC;MACzB,KAAK,MAAM;QACT,OAAO;UAAEC,IAAI,EAAE,GAAG;UAAEC,KAAK,EAAE;QAAO,CAAC;MACrC,KAAK,OAAO;QACV,OAAO;UAAED,IAAI,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAQ,CAAC;MACvC,KAAK,SAAS;QACZ,OAAO;UAAED,IAAI,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAU,CAAC;MACzC,KAAK,MAAM;QACT,OAAO;UAAED,IAAI,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAO,CAAC;MACtC;QACE,OAAO;UAAED,IAAI,EAAE,GAAG;UAAEC,KAAK,EAAEN,IAAI,IAAI;QAAU,CAAC;IAClD;EACF,CAAC;EAED,MAAM;IAAEK,IAAI;IAAEC;EAAM,CAAC,GAAGH,mBAAmB,CAACH,IAAI,CAAC;EAEjD,oBACEF,OAAA;IAAMI,SAAS,EAAE,aAAaA,SAAS,EAAG;IAAAK,QAAA,gBACxCT,OAAA;MAAMI,SAAS,EAAC,MAAM;MAAAK,QAAA,EAAEF;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACnCV,SAAS,iBAAIH,OAAA;MAAMI,SAAS,EAAC,OAAO;MAAAK,QAAA,EAAED;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEX,CAAC;AAACC,EAAA,GAxBIb,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}