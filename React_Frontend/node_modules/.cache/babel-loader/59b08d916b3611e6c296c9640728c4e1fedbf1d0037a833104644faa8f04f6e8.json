{"ast":null,"code":"var _jsxFileName = \"/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/modules/TaskForm.js\",\n  _s = $RefreshSig$();\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { useForm } from \"react-hook-form\";\n// import { useEffect, useState } from \"react\";\n// import \"./TaskForm.css\"\n//\n// const TaskForm = () => {\n//     const navigate = useNavigate();\n//     const location = useLocation();\n//     const task = location.state?.task; // get task if passed\n//\n//     const [allTasks, setAllTasks] = useState([]);\n//\n//     // Fetch all tasks for parent task dropdown (API integration spot)\n//     useEffect(() => {\n//         // TODO: Replace this with your API call to fetch all tasks\n//         const fetchTasks = async () => {\n//             // Example placeholder data, replace with API response\n//             const tasks = [\n//                 { id: 1, title: \"Complete project documentation\" },\n//                 { id: 2, title: \"Implement user authentication\" },\n//                 { id: 3, title: \"Database schema optimization\" },\n//                 { id: 4, title: \"Frontend dashboard redesign\" },\n//                 { id: 5, title: \"Automated testing setup\" }\n//             ];\n//             setAllTasks(tasks);\n//         };\n//         fetchTasks();\n//     }, []);\n//\n//     const {\n//         register,\n//         handleSubmit,\n//         reset,\n//         formState: { errors },\n//     } = useForm();\n//\n//     // Prefill form if editing\n//     useEffect(() => {\n//         if (task) {\n//             reset({\n//                 type: task.type ? task.type.toLowerCase() : \"\",\n//                 title: task.title || \"\",\n//                 description: task.task_description || \"\",\n//                 epicName: task.epicName || \"\",\n//                 startDate: task.start_date || \"\",\n//                 endDate: task.due_date || \"\",\n//                 status: task.status || \"\",\n//                 priority: task.priority || \"\",\n//                 estimate: task.estimation || \"\",\n//                 assignee: task.assignee || \"\",\n//                 labels: task.labels || \"\",\n//                 sprint: task.sprint || \"\",\n//                 parentTask: task.parentTask || \"\",\n//             });\n//         }\n//     }, [task, reset]);\n//\n//     const onSubmit = (data) => {\n//         if (task) {\n//             // Update logic here (API call)\n//             console.log(\"Update task:\", { ...task, ...data });\n//         } else {\n//             // Create logic here (API call)\n//             console.log(\"Create task:\", data);\n//         }\n//         navigate(\"/\");\n//     };\n//\n//     return (\n//         <div className=\"form\">\n//             <div className=\"form-header\">\n//                 <h1>{task ? \"Edit Task\" : \"+Create Task\"}</h1>\n//             </div>\n//             <div className=\"form-container\">\n//                 <form onSubmit={handleSubmit(onSubmit)}>\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"type-name\">\n//\n//                             {/*type*/}\n//                             <div className=\"title\">\n//                                 <label className=\"block text-sm font-medium text-gray-700\">Type</label>\n//\n//                             </div>\n//                             <select\n//                                 {...register(\"type\", { required: true })}\n//                                 className=\"box\"\n//                             >\n//                                 <option value=\"\">Select type</option>\n//                                 <option value=\"task\">Task</option>\n//                                 <option value=\"epic\">Epic</option>\n//                                 <option value=\"story\">Story</option>\n//                                 <option value=\"sub_task\">Sub Task</option>\n//                             </select>\n//                             {errors.type && <span className=\"text-red-500 text-sm\">This field is required</span>}\n//                         </div>\n//\n//\n//\n//\n//                         <div className=\"type-name\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Task Name/Title</label>\n//\n//                             </div>\n//                             <input\n//                                 {...register(\"title\", { required: true })}\n//                                 className=\"box\"\n//                             />\n//                             {errors.title && <span className=\"text-red-500 text-sm\">This field is required</span>}\n//                         </div>\n//\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//\n//                         {/* Task Description */}\n//                         <div className=\"description\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n//\n//                             </div>\n//                             <textarea\n//                                 {...register(\"description\")}\n//                                 rows={3}\n//                                 className=\"box\"\n//                             />\n//                         </div>\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//                         {/* Linked Epic Name */}\n//                         <div className=\"epic-name\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Linked Epic Name</label>\n//\n//                             </div>\n//                             <input\n//                                 {...register(\"epicName\")}\n//                                 className=\"box\"\n//                             />\n//                         </div>\n//\n//\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//\n//                             <div className=\"date\">\n//                                 <div className=\"title\">\n//\n//                                 <label className=\"block text-sm font-medium text-gray-700\">Start Date</label>\n//                                 </div>\n//                                 <input\n//                                     type=\"date\"\n//                                     {...register(\"startDate\")}\n//                                     className=\"box\"\n//                                 />\n//                             </div>\n//\n//                             <div className=\"date\">\n//                                 <div className=\"title\">\n//\n//                                 <label className=\"block text-sm font-medium text-gray-700\">End Date/Due Date</label>\n//                                 </div>\n//                                 <input\n//                                     type=\"date\"\n//                                     {...register(\"endDate\")}\n//                                     className=\"box\"\n//                                 />\n//                             </div>\n//\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//                         {/* Status */}\n//                         <div className=\"status-priority\">\n//                             <div className=\"title\">\n//\n//                             <label className=\"block text-sm font-medium text-gray-700\">Status</label>\n//                             </div>\n//                             <select\n//                                 {...register(\"status\", { required: true })}\n//                                 className=\"box\"\n//                             >\n//                                 <option value=\"\">Select status</option>\n//                                 <option value=\"To Do\">To Do</option>\n//                                 <option value=\"In Progress\">In Progress</option>\n//                                 <option value=\"Done\">Done</option>\n//                             </select>\n//                             {errors.status && <span className=\"text-red-500 text-sm\">This field is required</span>}\n//                         </div>\n//\n//                         {/* Priority */}\n//                         <div className=\"status-priority\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Priority</label>\n//\n//                             </div>\n//                             <select\n//                                 {...register(\"priority\")}\n//                                 className=\"box\"\n//                             >\n//                                 <option value=\"\">Select priority</option>\n//                                 <option value=\"High\">High</option>\n//                                 <option value=\"Medium\">Medium</option>\n//                                 <option value=\"Low\">Low</option>\n//                             </select>\n//                         </div>\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"time-assignee\">\n//                             <div className=\"title\">\n//\n//                             <label className=\"block text-sm font-medium text-gray-700\">Original Estimate (hours)</label>\n//                             </div>\n//                             <input\n//                                 type=\"number\"\n//                                 {...register(\"estimate\")}\n//                                 className=\"box\"\n//                             />\n//                         </div>\n//                         {/* Assignee */}\n//                         <div className=\"time-assignee\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Assignee</label>\n//\n//                             </div>\n//                             <input\n//                                 {...register(\"assignee\")}\n//                                 className=\"box\"\n//                             />\n//                         </div>\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//                         {/* Labels/Tags */}\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Labels</label>\n//\n//                             </div>\n//                             <input\n//                                 {...register(\"labels\")}\n//                                 className=\"box\"\n//                                 placeholder=\"tag1, tag2, tag3\"\n//                             />\n//                         </div>\n//\n//                         {/* Sprint */}\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Sprint</label>\n//\n//                             </div>\n//                             <input\n//                                 {...register(\"sprint\")}\n//                                 className=\"box\"\n//                             />\n//                         </div>\n//\n//                         {/* Parent Task */}\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Parent Task</label>\n//\n//                             </div>\n//                             <select\n//                                 {...register(\"parentTask\")}\n//                                 className=\"box\"\n//                             >\n//                                 <option value=\"\">Select parent task</option>\n//                                 {allTasks.map((t) => (\n//                                     <option  value={t.title}>\n//                                         {t.title}\n//                                     </option>\n//                                 ))}\n//                             </select>\n//                         </div>\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//                         <button\n//                             type=\"submit\"\n//                             className=\"button\"\n//                         >\n//                             {task ? \"Update Task\" : \"Create Task\"}\n//                         </button>\n//                     </div>\n//\n//                 </form>\n//\n//\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default TaskForm;\n// Import hooks and form helpers\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\n// Import API helpers for task operations\nimport { getAllTasks, createTask, updateTask } from \"../api/taskApi\";\n// Import CSS for styling\nimport \"./TaskForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  var _location$state;\n  // Get navigation function\n  const navigate = useNavigate();\n  // Get location to check if we are editing a task\n  const location = useLocation();\n  // Extract task from navigation state if present\n  const task = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.task;\n\n  // State to hold all tasks for parent task dropdown\n  const [allTasks, setAllTasks] = useState([]);\n\n  // Set up react-hook-form for handling form data\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  // Fetch all tasks for parent dropdown when component loads\n  useEffect(() => {\n    // Call backend to get all tasks\n    getAllTasks().then(setAllTasks);\n  }, []);\n\n  // If editing, prefill form with existing task data\n  useEffect(() => {\n    if (task) {\n      reset({\n        type: task.type || \"\",\n        title: task.title || \"\",\n        description: task.task_description || \"\",\n        epicName: task.epicName || \"\",\n        startDate: task.start_date || \"\",\n        endDate: task.due_date || \"\",\n        status: task.status || \"\",\n        priority: task.priority || \"\",\n        estimate: task.estimation || \"\",\n        assignee: task.assignee || \"\",\n        labels: task.labels || \"\",\n        sprint: task.sprint || \"\",\n        parentTask: task.parentTask || \"\"\n      });\n    }\n  }, [task, reset]);\n\n  // Handle form submission\n  const onSubmit = async data => {\n    if (task && task.id) {\n      // If editing, call API to update the task\n      await updateTask(task.id, {\n        ...task,\n        ...data\n      });\n    } else {\n      // If creating, call API to create a new task\n      await createTask(data);\n    }\n    // After saving, navigate back to the task list page\n    navigate(\"/view-tasks\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: task ? \"Edit Task\" : \"+Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"type\", {\n                required: true\n              }),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"task\",\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"epic\",\n                children: \"Epic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"story\",\n                children: \"Story\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sub_task\",\n                children: \"Sub Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 29\n            }, this), errors.type && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Task Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"title\", {\n                required: true\n              }),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ...register(\"description\"),\n              rows: 3,\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"epic-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Linked Epic Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"epicName\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              ...register(\"startDate\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"End Date/Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              ...register(\"endDate\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-priority\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"status\", {\n                required: true\n              }),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"To Do\",\n                children: \"To Do\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"In Progress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Done\",\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 29\n            }, this), errors.status && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-priority\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"priority\"),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-assignee\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Original Estimate (hours)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              ...register(\"estimate\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-assignee\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"assignee\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Labels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"labels\"),\n              className: \"box\",\n              placeholder: \"tag1, tag2, tag3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Sprint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"sprint\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Parent Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"parentTask\"),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select parent task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 33\n              }, this), allTasks.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: t.title,\n                children: t.title\n              }, t.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            children: task ? \"Update Task\" : \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"Aey1MSLJviAtiXnJAtTHPWHueV4=\", false, function () {\n  return [useNavigate, useLocation, useForm];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useLocation","useNavigate","useForm","useEffect","useState","getAllTasks","createTask","updateTask","jsxDEV","_jsxDEV","TaskForm","_s","_location$state","navigate","location","task","state","allTasks","setAllTasks","register","handleSubmit","reset","formState","errors","then","type","title","description","task_description","epicName","startDate","start_date","endDate","due_date","status","priority","estimate","estimation","assignee","labels","sprint","parentTask","onSubmit","data","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","required","value","rows","placeholder","map","t","_c","$RefreshReg$"],"sources":["/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/modules/TaskForm.js"],"sourcesContent":["// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { useForm } from \"react-hook-form\";\n// import { useEffect, useState } from \"react\";\n// import \"./TaskForm.css\"\n//\n// const TaskForm = () => {\n//     const navigate = useNavigate();\n//     const location = useLocation();\n//     const task = location.state?.task; // get task if passed\n//\n//     const [allTasks, setAllTasks] = useState([]);\n//\n//     // Fetch all tasks for parent task dropdown (API integration spot)\n//     useEffect(() => {\n//         // TODO: Replace this with your API call to fetch all tasks\n//         const fetchTasks = async () => {\n//             // Example placeholder data, replace with API response\n//             const tasks = [\n//                 { id: 1, title: \"Complete project documentation\" },\n//                 { id: 2, title: \"Implement user authentication\" },\n//                 { id: 3, title: \"Database schema optimization\" },\n//                 { id: 4, title: \"Frontend dashboard redesign\" },\n//                 { id: 5, title: \"Automated testing setup\" }\n//             ];\n//             setAllTasks(tasks);\n//         };\n//         fetchTasks();\n//     }, []);\n//\n//     const {\n//         register,\n//         handleSubmit,\n//         reset,\n//         formState: { errors },\n//     } = useForm();\n//\n//     // Prefill form if editing\n//     useEffect(() => {\n//         if (task) {\n//             reset({\n//                 type: task.type ? task.type.toLowerCase() : \"\",\n//                 title: task.title || \"\",\n//                 description: task.task_description || \"\",\n//                 epicName: task.epicName || \"\",\n//                 startDate: task.start_date || \"\",\n//                 endDate: task.due_date || \"\",\n//                 status: task.status || \"\",\n//                 priority: task.priority || \"\",\n//                 estimate: task.estimation || \"\",\n//                 assignee: task.assignee || \"\",\n//                 labels: task.labels || \"\",\n//                 sprint: task.sprint || \"\",\n//                 parentTask: task.parentTask || \"\",\n//             });\n//         }\n//     }, [task, reset]);\n//\n//     const onSubmit = (data) => {\n//         if (task) {\n//             // Update logic here (API call)\n//             console.log(\"Update task:\", { ...task, ...data });\n//         } else {\n//             // Create logic here (API call)\n//             console.log(\"Create task:\", data);\n//         }\n//         navigate(\"/\");\n//     };\n//\n//     return (\n//         <div className=\"form\">\n//             <div className=\"form-header\">\n//                 <h1>{task ? \"Edit Task\" : \"+Create Task\"}</h1>\n//             </div>\n//             <div className=\"form-container\">\n//                 <form onSubmit={handleSubmit(onSubmit)}>\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"type-name\">\n//\n//                             {/*type*/}\n//                             <div className=\"title\">\n//                                 <label className=\"block text-sm font-medium text-gray-700\">Type</label>\n//\n//                             </div>\n//                             <select\n//                                 {...register(\"type\", { required: true })}\n//                                 className=\"box\"\n//                             >\n//                                 <option value=\"\">Select type</option>\n//                                 <option value=\"task\">Task</option>\n//                                 <option value=\"epic\">Epic</option>\n//                                 <option value=\"story\">Story</option>\n//                                 <option value=\"sub_task\">Sub Task</option>\n//                             </select>\n//                             {errors.type && <span className=\"text-red-500 text-sm\">This field is required</span>}\n//                         </div>\n//\n//\n//\n//\n//                         <div className=\"type-name\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Task Name/Title</label>\n//\n//                             </div>\n//                             <input\n//                                 {...register(\"title\", { required: true })}\n//                                 className=\"box\"\n//                             />\n//                             {errors.title && <span className=\"text-red-500 text-sm\">This field is required</span>}\n//                         </div>\n//\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//\n//                         {/* Task Description */}\n//                         <div className=\"description\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n//\n//                             </div>\n//                             <textarea\n//                                 {...register(\"description\")}\n//                                 rows={3}\n//                                 className=\"box\"\n//                             />\n//                         </div>\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//                         {/* Linked Epic Name */}\n//                         <div className=\"epic-name\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Linked Epic Name</label>\n//\n//                             </div>\n//                             <input\n//                                 {...register(\"epicName\")}\n//                                 className=\"box\"\n//                             />\n//                         </div>\n//\n//\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//\n//                             <div className=\"date\">\n//                                 <div className=\"title\">\n//\n//                                 <label className=\"block text-sm font-medium text-gray-700\">Start Date</label>\n//                                 </div>\n//                                 <input\n//                                     type=\"date\"\n//                                     {...register(\"startDate\")}\n//                                     className=\"box\"\n//                                 />\n//                             </div>\n//\n//                             <div className=\"date\">\n//                                 <div className=\"title\">\n//\n//                                 <label className=\"block text-sm font-medium text-gray-700\">End Date/Due Date</label>\n//                                 </div>\n//                                 <input\n//                                     type=\"date\"\n//                                     {...register(\"endDate\")}\n//                                     className=\"box\"\n//                                 />\n//                             </div>\n//\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//                         {/* Status */}\n//                         <div className=\"status-priority\">\n//                             <div className=\"title\">\n//\n//                             <label className=\"block text-sm font-medium text-gray-700\">Status</label>\n//                             </div>\n//                             <select\n//                                 {...register(\"status\", { required: true })}\n//                                 className=\"box\"\n//                             >\n//                                 <option value=\"\">Select status</option>\n//                                 <option value=\"To Do\">To Do</option>\n//                                 <option value=\"In Progress\">In Progress</option>\n//                                 <option value=\"Done\">Done</option>\n//                             </select>\n//                             {errors.status && <span className=\"text-red-500 text-sm\">This field is required</span>}\n//                         </div>\n//\n//                         {/* Priority */}\n//                         <div className=\"status-priority\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Priority</label>\n//\n//                             </div>\n//                             <select\n//                                 {...register(\"priority\")}\n//                                 className=\"box\"\n//                             >\n//                                 <option value=\"\">Select priority</option>\n//                                 <option value=\"High\">High</option>\n//                                 <option value=\"Medium\">Medium</option>\n//                                 <option value=\"Low\">Low</option>\n//                             </select>\n//                         </div>\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"time-assignee\">\n//                             <div className=\"title\">\n//\n//                             <label className=\"block text-sm font-medium text-gray-700\">Original Estimate (hours)</label>\n//                             </div>\n//                             <input\n//                                 type=\"number\"\n//                                 {...register(\"estimate\")}\n//                                 className=\"box\"\n//                             />\n//                         </div>\n//                         {/* Assignee */}\n//                         <div className=\"time-assignee\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Assignee</label>\n//\n//                             </div>\n//                             <input\n//                                 {...register(\"assignee\")}\n//                                 className=\"box\"\n//                             />\n//                         </div>\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//                         {/* Labels/Tags */}\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Labels</label>\n//\n//                             </div>\n//                             <input\n//                                 {...register(\"labels\")}\n//                                 className=\"box\"\n//                                 placeholder=\"tag1, tag2, tag3\"\n//                             />\n//                         </div>\n//\n//                         {/* Sprint */}\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Sprint</label>\n//\n//                             </div>\n//                             <input\n//                                 {...register(\"sprint\")}\n//                                 className=\"box\"\n//                             />\n//                         </div>\n//\n//                         {/* Parent Task */}\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Parent Task</label>\n//\n//                             </div>\n//                             <select\n//                                 {...register(\"parentTask\")}\n//                                 className=\"box\"\n//                             >\n//                                 <option value=\"\">Select parent task</option>\n//                                 {allTasks.map((t) => (\n//                                     <option  value={t.title}>\n//                                         {t.title}\n//                                     </option>\n//                                 ))}\n//                             </select>\n//                         </div>\n//\n//                     </div>\n//\n//                     <div className=\"form-subcontainer\">\n//                         <button\n//                             type=\"submit\"\n//                             className=\"button\"\n//                         >\n//                             {task ? \"Update Task\" : \"Create Task\"}\n//                         </button>\n//                     </div>\n//\n//                 </form>\n//\n//\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default TaskForm;\n// Import hooks and form helpers\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\n// Import API helpers for task operations\nimport { getAllTasks, createTask, updateTask } from \"../api/taskApi\";\n// Import CSS for styling\nimport \"./TaskForm.css\";\n\nconst TaskForm = () => {\n    // Get navigation function\n    const navigate = useNavigate();\n    // Get location to check if we are editing a task\n    const location = useLocation();\n    // Extract task from navigation state if present\n    const task = location.state?.task;\n\n    // State to hold all tasks for parent task dropdown\n    const [allTasks, setAllTasks] = useState([]);\n\n    // Set up react-hook-form for handling form data\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors },\n    } = useForm();\n\n    // Fetch all tasks for parent dropdown when component loads\n    useEffect(() => {\n        // Call backend to get all tasks\n        getAllTasks().then(setAllTasks);\n    }, []);\n\n    // If editing, prefill form with existing task data\n    useEffect(() => {\n        if (task) {\n            reset({\n                type: task.type || \"\",\n                title: task.title || \"\",\n                description: task.task_description || \"\",\n                epicName: task.epicName || \"\",\n                startDate: task.start_date || \"\",\n                endDate: task.due_date || \"\",\n                status: task.status || \"\",\n                priority: task.priority || \"\",\n                estimate: task.estimation || \"\",\n                assignee: task.assignee || \"\",\n                labels: task.labels || \"\",\n                sprint: task.sprint || \"\",\n                parentTask: task.parentTask || \"\",\n            });\n        }\n    }, [task, reset]);\n\n    // Handle form submission\n    const onSubmit = async (data) => {\n        if (task && task.id) {\n            // If editing, call API to update the task\n            await updateTask(task.id, { ...task, ...data });\n        } else {\n            // If creating, call API to create a new task\n            await createTask(data);\n        }\n        // After saving, navigate back to the task list page\n        navigate(\"/view-tasks\");\n    };\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-header\">\n                {/* Show different title for editing vs creating */}\n                <h1>{task ? \"Edit Task\" : \"+Create Task\"}</h1>\n            </div>\n            <div className=\"form-container\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    {/* Type field */}\n                    <div className=\"form-subcontainer\">\n                        <div className=\"type-name\">\n                            <div className=\"title\">\n                                <label>Type</label>\n                            </div>\n                            <select {...register(\"type\", { required: true })} className=\"box\">\n                                <option value=\"\">Select type</option>\n                                <option value=\"task\">Task</option>\n                                <option value=\"epic\">Epic</option>\n                                <option value=\"story\">Story</option>\n                                <option value=\"sub_task\">Sub Task</option>\n                            </select>\n                            {errors.type && (\n                                <span className=\"text-red-500 text-sm\">This field is required</span>\n                            )}\n                        </div>\n                    </div>\n                    {/* Title field */}\n                    <div className=\"form-subcontainer\">\n                        <div className=\"type-name\">\n                            <div className=\"title\">\n                                <label>Task Title</label>\n                            </div>\n                            <input\n                                {...register(\"title\", { required: true })}\n                                className=\"box\"\n                            />\n                            {errors.title && (\n                                <span className=\"text-red-500 text-sm\">This field is required</span>\n                            )}\n                        </div>\n                    </div>\n                    {/* Description field */}\n                    <div className=\"form-subcontainer\">\n                        <div className=\"description\">\n                            <div className=\"title\">\n                                <label>Description</label>\n                            </div>\n                            <textarea {...register(\"description\")} rows={3} className=\"box\" />\n                        </div>\n                    </div>\n                    {/* Epic Name field */}\n                    <div className=\"form-subcontainer\">\n                        <div className=\"epic-name\">\n                            <div className=\"title\">\n                                <label>Linked Epic Name</label>\n                            </div>\n                            <input {...register(\"epicName\")} className=\"box\" />\n                        </div>\n                    </div>\n                    {/* Start Date and End Date fields */}\n                    <div className=\"form-subcontainer\">\n                        <div className=\"date\">\n                            <div className=\"title\">\n                                <label>Start Date</label>\n                            </div>\n                            <input type=\"date\" {...register(\"startDate\")} className=\"box\" />\n                        </div>\n                        <div className=\"date\">\n                            <div className=\"title\">\n                                <label>End Date/Due Date</label>\n                            </div>\n                            <input type=\"date\" {...register(\"endDate\")} className=\"box\" />\n                        </div>\n                    </div>\n                    {/* Status and Priority fields */}\n                    <div className=\"form-subcontainer\">\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n                                <label>Status</label>\n                            </div>\n                            <select {...register(\"status\", { required: true })} className=\"box\">\n                                <option value=\"\">Select status</option>\n                                <option value=\"To Do\">To Do</option>\n                                <option value=\"In Progress\">In Progress</option>\n                                <option value=\"Done\">Done</option>\n                            </select>\n                            {errors.status && (\n                                <span className=\"text-red-500 text-sm\">This field is required</span>\n                            )}\n                        </div>\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n                                <label>Priority</label>\n                            </div>\n                            <select {...register(\"priority\")} className=\"box\">\n                                <option value=\"\">Select priority</option>\n                                <option value=\"High\">High</option>\n                                <option value=\"Medium\">Medium</option>\n                                <option value=\"Low\">Low</option>\n                            </select>\n                        </div>\n                    </div>\n                    {/* Estimate and Assignee fields */}\n                    <div className=\"form-subcontainer\">\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n                                <label>Original Estimate (hours)</label>\n                            </div>\n                            <input type=\"number\" {...register(\"estimate\")} className=\"box\" />\n                        </div>\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n                                <label>Assignee</label>\n                            </div>\n                            <input {...register(\"assignee\")} className=\"box\" />\n                        </div>\n                    </div>\n                    {/* Labels, Sprint, Parent Task fields */}\n                    <div className=\"form-subcontainer\">\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                                <label>Labels</label>\n                            </div>\n                            <input\n                                {...register(\"labels\")}\n                                className=\"box\"\n                                placeholder=\"tag1, tag2, tag3\"\n                            />\n                        </div>\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                                <label>Sprint</label>\n                            </div>\n                            <input {...register(\"sprint\")} className=\"box\" />\n                        </div>\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                                <label>Parent Task</label>\n                            </div>\n                            <select {...register(\"parentTask\")} className=\"box\">\n                                <option value=\"\">Select parent task</option>\n                                {/* Render all tasks for parent task selection */}\n                                {allTasks.map((t) => (\n                                    <option key={t.id} value={t.title}>\n                                        {t.title}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                    {/* Submit button */}\n                    <div className=\"form-subcontainer\">\n                        <button type=\"submit\" className=\"button\">\n                            {task ? \"Update Task\" : \"Create Task\"}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskForm;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}