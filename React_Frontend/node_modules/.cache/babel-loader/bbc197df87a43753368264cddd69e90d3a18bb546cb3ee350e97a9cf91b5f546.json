{"ast":null,"code":"import _objectSpread from\"/home/abd_faiyaz/ontik_project_1/React_Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useLocation,useNavigate}from\"react-router-dom\";import{useForm}from\"react-hook-form\";import{useEffect,useState}from\"react\";import useDateCalculation from\"../hooks/useDateCalculation\";import HolidayCalendar from\"../components/HolidayCalendar\";import\"./TaskForm.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EpicForm=()=>{var _location$state;const navigate=useNavigate();const location=useLocation();const epic=(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.epic;// get epic if passed for editing\nconst[allEpics,setAllEpics]=useState([]);const[startDate,setStartDate]=useState('');const[estimateDays,setEstimateDays]=useState('');const[endDateValue,setEndDateValue]=useState('');// Use the date calculation hook\nconst{holidays,calculatedEndDate,isCalculating,validationMessage,calculateEndDate,validateEndDate,getHolidayInfo,shouldDisableDate,getDateClassName}=useDateCalculation();// Fetch all epics for linked epic dropdown\nuseEffect(()=>{const fetchEpics=async()=>{try{const response=await fetch(\"/epics\");if(!response.ok)throw new Error(\"Failed to fetch epics\");const epics=await response.json();setAllEpics(epics);}catch(error){console.error(\"Error fetching epics:\",error);setAllEpics([]);}};fetchEpics();},[]);const{register,handleSubmit,reset,setValue,formState:{errors}}=useForm();// Helper function to extract days from originalEstimate\nconst extractDaysFromEstimate=originalEstimate=>{if(!originalEstimate)return\"\";if(typeof originalEstimate==='string'){if(originalEstimate.startsWith('P')&&originalEstimate.endsWith('D')){return originalEstimate.substring(1,originalEstimate.length-1);}if(originalEstimate.startsWith('PT')&&originalEstimate.endsWith('H')){const hours=parseFloat(originalEstimate.substring(2,originalEstimate.length-1));return(hours/8).toString();}}if(typeof originalEstimate==='object'){if(originalEstimate.seconds!==undefined){const hours=originalEstimate.seconds/3600;return(hours/8).toString();}}return originalEstimate.toString();};// Prefill form if editing\nuseEffect(()=>{if(epic){const startDateVal=epic.start_date||epic.startDate||\"\";const endDateVal=epic.due_date||epic.dueDate||\"\";const estimateVal=extractDaysFromEstimate(epic.originalEstimate);setStartDate(startDateVal);setEndDateValue(endDateVal);setEstimateDays(estimateVal);reset({title:epic.title||\"\",description:epic.description||epic.task_description||\"\",linkedEpic:epic.linkedEpicId||\"\",startDate:startDateVal,endDate:endDateVal,status:epic.status||\"\",priority:epic.priority||\"\",estimate:estimateVal,assignee:epic.assignee||epic.assigneeId||\"\",labels:epic.labels?epic.labels.join(', '):\"\"});}},[epic,reset,setValue]);// Auto-calculate end date when start date or estimate changes\nuseEffect(()=>{if(startDate&&estimateDays&&parseFloat(estimateDays)>0){console.log('EpicForm: Triggering end date calculation:',{startDate,estimateDays});calculateEndDate(startDate,parseInt(estimateDays));}},[startDate,estimateDays,calculateEndDate]);// Sync state changes with form values\nuseEffect(()=>{if(startDate){setValue(\"startDate\",startDate,{shouldValidate:true});}},[startDate,setValue]);useEffect(()=>{if(endDateValue){setValue(\"endDate\",endDateValue,{shouldValidate:true});}},[endDateValue,setValue]);useEffect(()=>{if(estimateDays){setValue(\"estimate\",estimateDays,{shouldValidate:true});}},[estimateDays,setValue]);// Handles form submission\nconst onSubmit=async data=>{console.log(\"Epic form submitted with data:\",data);if(!data.startDate){alert(\"Please select a start date\");return;}// Prepare the payload for epic creation\nconst payload={title:data.title,description:data.description||null,startDate:data.startDate,endDate:data.endDate||null,status:data.status,priority:data.priority,originalEstimate:data.estimate?\"P\".concat(data.estimate,\"D\"):null,assigneeId:data.assignee||null,linkedEpicId:data.linkedEpic||null,labels:data.labels?data.labels.split(',').map(l=>l.trim()).filter(l=>l.length>0):null};console.log(\"Sending epic payload:\",payload);try{const url=epic?\"/epics/\".concat(epic.id):\"/epics\";const method=epic?\"PUT\":\"POST\";const response=await fetch(url,{method:method,headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});if(!response.ok){const errorText=await response.text();throw new Error(\"Failed to \".concat(epic?'update':'create',\" epic: \").concat(errorText));}const result=await response.json();console.log(\"Epic \".concat(epic?'updated':'created',\" successfully:\"),result);alert(\"Epic \".concat(epic?'updated':'created',\" successfully!\"));navigate(\"/view-tasks\");}catch(error){console.error(\"Error \".concat(epic?'updating':'creating',\" epic:\"),error);alert(\"Failed to \".concat(epic?'update':'create',\" epic: \").concat(error.message));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:epic?\"Edit Epic\":\"+Create Epic\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-subcontainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"type-name\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Epic Name/Title\"})}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"title\",{required:true})),{},{className:\"box\",placeholder:\"Enter epic title\"})),errors.title&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 text-sm\",children:\"This field is required\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-subcontainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"description\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Description\"})}),/*#__PURE__*/_jsx(\"textarea\",_objectSpread(_objectSpread({},register(\"description\")),{},{rows:3,className:\"box\",placeholder:\"Enter epic description\"}))]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-subcontainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"epic-name\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Linked Epic Name\"})}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({},register(\"linkedEpic\")),{},{className:\"box\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select linked epic (optional)\"}),allEpics.map(e=>/*#__PURE__*/_jsx(\"option\",{value:e.id||e.epicId,children:e.title||e.name},e.id||e.epicId))]}))]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-subcontainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"date\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Start Date\"})}),/*#__PURE__*/_jsx(HolidayCalendar,{value:startDate,onChange:date=>{console.log('EpicForm: Start date changed to:',date);setStartDate(date);setValue(\"startDate\",date,{shouldValidate:true});},holidays:holidays,shouldDisableDate:shouldDisableDate,getDateClassName:getDateClassName,getHolidayInfo:getHolidayInfo,placeholder:\"Select start date\",required:true,className:\"box\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:\"hidden\"},register(\"startDate\",{required:\"Start date is required\"})),{},{value:startDate||''})),errors.startDate&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 text-sm\",children:errors.startDate.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"End Date/Due Date\"})}),/*#__PURE__*/_jsx(HolidayCalendar,{value:endDateValue,onChange:date=>{console.log('EpicForm: End date changed to:',date);setEndDateValue(date);setValue(\"endDate\",date,{shouldValidate:true});if(startDate&&estimateDays&&date){console.log('EpicForm: Validating end date:',{startDate,estimateDays,date});validateEndDate(startDate,parseInt(estimateDays),date);}},holidays:holidays,minDate:calculatedEndDate,shouldDisableDate:date=>{if(calculatedEndDate&&new Date(date)<new Date(calculatedEndDate)){return true;}return shouldDisableDate?shouldDisableDate(date):false;},getDateClassName:getDateClassName,getHolidayInfo:getHolidayInfo,placeholder:calculatedEndDate?\"Suggested: \".concat(calculatedEndDate):\"Select end date\",className:\"box\",style:{backgroundColor:calculatedEndDate&&!endDateValue?'#f3f4f6':'white',color:calculatedEndDate&&!endDateValue?'#6b7280':'black'}}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:\"hidden\"},register(\"endDate\")),{},{value:endDateValue||''})),calculatedEndDate&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 mt-1\",children:isCalculating?'Calculating...':\"Suggested end date: \".concat(calculatedEndDate)}),validationMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-red-500 mt-1\",children:validationMessage})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-subcontainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-priority\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Status\"})}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({},register(\"status\",{required:true})),{},{className:\"box\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"To Do\",children:\"To Do\"}),/*#__PURE__*/_jsx(\"option\",{value:\"In Progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Done\",children:\"Done\"})]})),errors.status&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 text-sm\",children:\"This field is required\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-priority\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Priority\"})}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({},register(\"priority\")),{},{className:\"box\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select priority\"}),/*#__PURE__*/_jsx(\"option\",{value:\"High\",children:\"High\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Low\",children:\"Low\"})]}))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-subcontainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"time-assignee\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Original Estimate (days)\"})}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:\"number\",step:\"0.5\",min:\"0\"},register(\"estimate\",{min:{value:0,message:\"Estimate must be positive\"}})),{},{onChange:e=>{const value=e.target.value;setEstimateDays(value);setValue(\"estimate\",value,{shouldValidate:true});},value:estimateDays,className:\"box\",placeholder:\"Enter days (e.g., 1.5)\"})),errors.estimate&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 text-sm\",children:errors.estimate.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"time-assignee\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Assignee\"})}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"assignee\")),{},{className:\"box\",placeholder:\"Enter assignee name\"}))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-subcontainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"labels-sprint-parent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Labels\"})}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"labels\")),{},{className:\"box\",placeholder:\"tag1, tag2, tag3\"}))]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-subcontainer\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button\",children:epic?\"Update Epic\":\"Create Epic\"})})]})})]});};export default EpicForm;","map":{"version":3,"names":["useLocation","useNavigate","useForm","useEffect","useState","useDateCalculation","HolidayCalendar","jsx","_jsx","jsxs","_jsxs","EpicForm","_location$state","navigate","location","epic","state","allEpics","setAllEpics","startDate","setStartDate","estimateDays","setEstimateDays","endDateValue","setEndDateValue","holidays","calculatedEndDate","isCalculating","validationMessage","calculateEndDate","validateEndDate","getHolidayInfo","shouldDisableDate","getDateClassName","fetchEpics","response","fetch","ok","Error","epics","json","error","console","register","handleSubmit","reset","setValue","formState","errors","extractDaysFromEstimate","originalEstimate","startsWith","endsWith","substring","length","hours","parseFloat","toString","seconds","undefined","startDateVal","start_date","endDateVal","due_date","dueDate","estimateVal","title","description","task_description","linkedEpic","linkedEpicId","endDate","status","priority","estimate","assignee","assigneeId","labels","join","log","parseInt","shouldValidate","onSubmit","data","alert","payload","concat","split","map","l","trim","filter","url","id","method","headers","body","JSON","stringify","errorText","text","result","message","className","children","_objectSpread","required","placeholder","rows","value","e","epicId","name","onChange","date","type","minDate","Date","style","backgroundColor","color","step","min","target"],"sources":["/home/abd_faiyaz/ontik_project_1/React_Frontend/src/modules/EpicForm.js"],"sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nimport useDateCalculation from \"../hooks/useDateCalculation\";\nimport HolidayCalendar from \"../components/HolidayCalendar\";\nimport \"./TaskForm.css\"\n\nconst EpicForm = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const epic = location.state?.epic; // get epic if passed for editing\n\n    const [allEpics, setAllEpics] = useState([]);\n    const [startDate, setStartDate] = useState('');\n    const [estimateDays, setEstimateDays] = useState('');\n    const [endDateValue, setEndDateValue] = useState('');\n\n    // Use the date calculation hook\n    const {\n        holidays,\n        calculatedEndDate,\n        isCalculating,\n        validationMessage,\n        calculateEndDate,\n        validateEndDate,\n        getHolidayInfo,\n        shouldDisableDate,\n        getDateClassName\n    } = useDateCalculation();\n\n    // Fetch all epics for linked epic dropdown\n    useEffect(() => {\n        const fetchEpics = async () => {\n            try {\n                const response = await fetch(\"/epics\");\n                if (!response.ok) throw new Error(\"Failed to fetch epics\");\n                const epics = await response.json();\n                setAllEpics(epics);\n            } catch (error) {\n                console.error(\"Error fetching epics:\", error);\n                setAllEpics([]);\n            }\n        };\n        fetchEpics();\n    }, []);\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        setValue,\n        formState: { errors },\n    } = useForm();\n\n    // Helper function to extract days from originalEstimate\n    const extractDaysFromEstimate = (originalEstimate) => {\n        if (!originalEstimate) return \"\";\n        \n        if (typeof originalEstimate === 'string') {\n            if (originalEstimate.startsWith('P') && originalEstimate.endsWith('D')) {\n                return originalEstimate.substring(1, originalEstimate.length - 1);\n            }\n            if (originalEstimate.startsWith('PT') && originalEstimate.endsWith('H')) {\n                const hours = parseFloat(originalEstimate.substring(2, originalEstimate.length - 1));\n                return (hours / 8).toString();\n            }\n        }\n        \n        if (typeof originalEstimate === 'object') {\n            if (originalEstimate.seconds !== undefined) {\n                const hours = originalEstimate.seconds / 3600;\n                return (hours / 8).toString();\n            }\n        }\n        \n        return originalEstimate.toString();\n    };\n\n    // Prefill form if editing\n    useEffect(() => {\n        if (epic) {\n            const startDateVal = epic.start_date || epic.startDate || \"\";\n            const endDateVal = epic.due_date || epic.dueDate || \"\";\n            const estimateVal = extractDaysFromEstimate(epic.originalEstimate);\n            \n            setStartDate(startDateVal);\n            setEndDateValue(endDateVal);\n            setEstimateDays(estimateVal);\n            \n            reset({\n                title: epic.title || \"\",\n                description: epic.description || epic.task_description || \"\",\n                linkedEpic: epic.linkedEpicId || \"\",\n                startDate: startDateVal,\n                endDate: endDateVal,\n                status: epic.status || \"\",\n                priority: epic.priority || \"\",\n                estimate: estimateVal,\n                assignee: epic.assignee || epic.assigneeId || \"\",\n                labels: epic.labels ? epic.labels.join(', ') : \"\",\n            });\n        }\n    }, [epic, reset, setValue]);\n\n    // Auto-calculate end date when start date or estimate changes\n    useEffect(() => {\n        if (startDate && estimateDays && parseFloat(estimateDays) > 0) {\n            console.log('EpicForm: Triggering end date calculation:', { startDate, estimateDays });\n            calculateEndDate(startDate, parseInt(estimateDays));\n        }\n    }, [startDate, estimateDays, calculateEndDate]);\n\n    // Sync state changes with form values\n    useEffect(() => {\n        if (startDate) {\n            setValue(\"startDate\", startDate, { shouldValidate: true });\n        }\n    }, [startDate, setValue]);\n\n    useEffect(() => {\n        if (endDateValue) {\n            setValue(\"endDate\", endDateValue, { shouldValidate: true });\n        }\n    }, [endDateValue, setValue]);\n\n    useEffect(() => {\n        if (estimateDays) {\n            setValue(\"estimate\", estimateDays, { shouldValidate: true });\n        }\n    }, [estimateDays, setValue]);\n\n    // Handles form submission\n    const onSubmit = async (data) => {\n        console.log(\"Epic form submitted with data:\", data);\n        \n        if (!data.startDate) {\n            alert(\"Please select a start date\");\n            return;\n        }\n\n        // Prepare the payload for epic creation\n        const payload = {\n            title: data.title,\n            description: data.description || null,\n            startDate: data.startDate,\n            endDate: data.endDate || null,\n            status: data.status,\n            priority: data.priority,\n            originalEstimate: data.estimate ? `P${data.estimate}D` : null,\n            assigneeId: data.assignee || null,\n            linkedEpicId: data.linkedEpic || null,\n            labels: data.labels ? data.labels.split(',').map(l => l.trim()).filter(l => l.length > 0) : null\n        };\n\n        console.log(\"Sending epic payload:\", payload);\n\n        try {\n            const url = epic ? `/epics/${epic.id}` : \"/epics\";\n            const method = epic ? \"PUT\" : \"POST\";\n            \n            const response = await fetch(url, {\n                method: method,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(payload),\n            });\n\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(`Failed to ${epic ? 'update' : 'create'} epic: ${errorText}`);\n            }\n\n            const result = await response.json();\n            console.log(`Epic ${epic ? 'updated' : 'created'} successfully:`, result);\n            alert(`Epic ${epic ? 'updated' : 'created'} successfully!`);\n            navigate(\"/view-tasks\");\n        } catch (error) {\n            console.error(`Error ${epic ? 'updating' : 'creating'} epic:`, error);\n            alert(`Failed to ${epic ? 'update' : 'create'} epic: ${error.message}`);\n        }\n    };\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-header\">\n                <h1>{epic ? \"Edit Epic\" : \"+Create Epic\"}</h1>\n            </div>\n            <div className=\"form-container\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-subcontainer\">\n                        <div className=\"type-name\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Epic Name/Title</label>\n                            </div>\n                            <input\n                                {...register(\"title\", { required: true })}\n                                className=\"box\"\n                                placeholder=\"Enter epic title\"\n                            />\n                            {errors.title && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <div className=\"description\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n                            </div>\n                            <textarea\n                                {...register(\"description\")}\n                                rows={3}\n                                className=\"box\"\n                                placeholder=\"Enter epic description\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <div className=\"epic-name\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Linked Epic Name</label>\n                            </div>\n                            <select\n                                {...register(\"linkedEpic\")}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select linked epic (optional)</option>\n                                {allEpics.map((e) => (\n                                    <option key={e.id || e.epicId} value={e.id || e.epicId}>\n                                        {e.title || e.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <div className=\"date\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Start Date</label>\n                            </div>\n                            <HolidayCalendar\n                                value={startDate}\n                                onChange={(date) => {\n                                    console.log('EpicForm: Start date changed to:', date);\n                                    setStartDate(date);\n                                    setValue(\"startDate\", date, { shouldValidate: true });\n                                }}\n                                holidays={holidays}\n                                shouldDisableDate={shouldDisableDate}\n                                getDateClassName={getDateClassName}\n                                getHolidayInfo={getHolidayInfo}\n                                placeholder=\"Select start date\"\n                                required\n                                className=\"box\"\n                            />\n                            <input\n                                type=\"hidden\"\n                                {...register(\"startDate\", { \n                                    required: \"Start date is required\"\n                                })}\n                                value={startDate || ''}\n                            />\n                            {errors.startDate && <span className=\"text-red-500 text-sm\">{errors.startDate.message}</span>}\n                        </div>\n\n                        <div className=\"date\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">End Date/Due Date</label>\n                            </div>\n                            <HolidayCalendar\n                                value={endDateValue}\n                                onChange={(date) => {\n                                    console.log('EpicForm: End date changed to:', date);\n                                    setEndDateValue(date);\n                                    setValue(\"endDate\", date, { shouldValidate: true });\n                                    if (startDate && estimateDays && date) {\n                                        console.log('EpicForm: Validating end date:', { startDate, estimateDays, date });\n                                        validateEndDate(startDate, parseInt(estimateDays), date);\n                                    }\n                                }}\n                                holidays={holidays}\n                                minDate={calculatedEndDate}\n                                shouldDisableDate={(date) => {\n                                    if (calculatedEndDate && new Date(date) < new Date(calculatedEndDate)) {\n                                        return true;\n                                    }\n                                    return shouldDisableDate ? shouldDisableDate(date) : false;\n                                }}\n                                getDateClassName={getDateClassName}\n                                getHolidayInfo={getHolidayInfo}\n                                placeholder={calculatedEndDate ? `Suggested: ${calculatedEndDate}` : \"Select end date\"}\n                                className=\"box\"\n                                style={{\n                                    backgroundColor: calculatedEndDate && !endDateValue ? '#f3f4f6' : 'white',\n                                    color: calculatedEndDate && !endDateValue ? '#6b7280' : 'black'\n                                }}\n                            />\n                            <input\n                                type=\"hidden\"\n                                {...register(\"endDate\")}\n                                value={endDateValue || ''}\n                            />\n                            {calculatedEndDate && (\n                                <div className=\"text-sm text-gray-600 mt-1\">\n                                    {isCalculating ? 'Calculating...' : `Suggested end date: ${calculatedEndDate}`}\n                                </div>\n                            )}\n                            {validationMessage && (\n                                <div className=\"text-sm text-red-500 mt-1\">{validationMessage}</div>\n                            )}\n                        </div>\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Status</label>\n                            </div>\n                            <select\n                                {...register(\"status\", { required: true })}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select status</option>\n                                <option value=\"To Do\">To Do</option>\n                                <option value=\"In Progress\">In Progress</option>\n                                <option value=\"Done\">Done</option>\n                            </select>\n                            {errors.status && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Priority</label>\n                            </div>\n                            <select\n                                {...register(\"priority\")}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select priority</option>\n                                <option value=\"High\">High</option>\n                                <option value=\"Medium\">Medium</option>\n                                <option value=\"Low\">Low</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Original Estimate (days)</label>\n                            </div>\n                            <input\n                                type=\"number\"\n                                step=\"0.5\"\n                                min=\"0\"\n                                {...register(\"estimate\", { \n                                    min: { value: 0, message: \"Estimate must be positive\" }\n                                })}\n                                onChange={(e) => {\n                                    const value = e.target.value;\n                                    setEstimateDays(value);\n                                    setValue(\"estimate\", value, { shouldValidate: true });\n                                }}\n                                value={estimateDays}\n                                className=\"box\"\n                                placeholder=\"Enter days (e.g., 1.5)\"\n                            />\n                            {errors.estimate && <span className=\"text-red-500 text-sm\">{errors.estimate.message}</span>}\n                        </div>\n\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Assignee</label>\n                            </div>\n                            <input\n                                {...register(\"assignee\")}\n                                className=\"box\"\n                                placeholder=\"Enter assignee name\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Labels</label>\n                            </div>\n                            <input\n                                {...register(\"labels\")}\n                                className=\"box\"\n                                placeholder=\"tag1, tag2, tag3\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <button\n                            type=\"submit\"\n                            className=\"button\"\n                        >\n                            {epic ? \"Update Epic\" : \"Create Epic\"}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default EpicForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}