{"ast":null,"code":"import\"./TaskList.css\";import{useNavigate}from\"react-router-dom\";import StatusBadge from'./StatusBadge';import PriorityBadge from'./PriorityBadge';// Helper function to convert originalEstimate to days display\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const formatEstimateAsDays=originalEstimate=>{if(!originalEstimate)return'N/A';// If it's a string, check for different formats\nif(typeof originalEstimate==='string'){// Handle P{days}D format\nif(originalEstimate.startsWith('P')&&originalEstimate.endsWith('D')){const days=originalEstimate.substring(1,originalEstimate.length-1);return\"\".concat(days,\" days\");}// Handle PT{hours}H format (convert to days)\nif(originalEstimate.startsWith('PT')&&originalEstimate.endsWith('H')){const hours=parseFloat(originalEstimate.substring(2,originalEstimate.length-1));const days=(hours/8).toFixed(1);// Convert hours to days (8 hours per day)\nreturn\"\".concat(days,\" days\");}return originalEstimate;}// If it's an object with duration properties, try to extract days\nif(typeof originalEstimate==='object'){// Handle Java Duration object structure\nif(originalEstimate.seconds!==undefined){const hours=originalEstimate.seconds/3600;// Convert seconds to hours\nconst days=(hours/8).toFixed(1);// Convert hours to days\nreturn\"\".concat(days,\" days\");}return JSON.stringify(originalEstimate);}return originalEstimate.toString();};const TaskCard=_ref=>{let{task,onDelete}=_ref;const navigate=useNavigate();const handleEdit=()=>{navigate(\"/edit-task\",{state:{task}});};return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:task.title}),/*#__PURE__*/_jsx(\"td\",{children:task.description}),/*#__PURE__*/_jsx(\"td\",{children:task.assigneeId||'Unassigned'}),/*#__PURE__*/_jsx(\"td\",{children:task.type}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(StatusBadge,{status:task.status})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(PriorityBadge,{priority:task.priority})}),/*#__PURE__*/_jsx(\"td\",{children:formatEstimateAsDays(task.originalEstimate)}),/*#__PURE__*/_jsx(\"td\",{children:task.startDate}),/*#__PURE__*/_jsx(\"td\",{children:task.dueDate||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:Array.isArray(task.labels)?task.labels.join(', '):task.labels||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleEdit,className:\"button-list\",children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onDelete,className:\"button-list\",children:\"Delete\"})]})})]});};export default TaskCard;","map":{"version":3,"names":["useNavigate","StatusBadge","PriorityBadge","jsx","_jsx","jsxs","_jsxs","formatEstimateAsDays","originalEstimate","startsWith","endsWith","days","substring","length","concat","hours","parseFloat","toFixed","seconds","undefined","JSON","stringify","toString","TaskCard","_ref","task","onDelete","navigate","handleEdit","state","children","title","description","assigneeId","type","status","priority","startDate","dueDate","Array","isArray","labels","join","className","onClick"],"sources":["/home/abd_faiyaz/ontik_project_1/React_Frontend/src/components/TaskList.js"],"sourcesContent":["import \"./TaskList.css\"\nimport { useNavigate } from \"react-router-dom\";\nimport StatusBadge from './StatusBadge';\nimport PriorityBadge from './PriorityBadge';\n\n// Helper function to convert originalEstimate to days display\nconst formatEstimateAsDays = (originalEstimate) => {\n    if (!originalEstimate) return 'N/A';\n    \n    // If it's a string, check for different formats\n    if (typeof originalEstimate === 'string') {\n        // Handle P{days}D format\n        if (originalEstimate.startsWith('P') && originalEstimate.endsWith('D')) {\n            const days = originalEstimate.substring(1, originalEstimate.length - 1);\n            return `${days} days`;\n        }\n        // Handle PT{hours}H format (convert to days)\n        if (originalEstimate.startsWith('PT') && originalEstimate.endsWith('H')) {\n            const hours = parseFloat(originalEstimate.substring(2, originalEstimate.length - 1));\n            const days = (hours / 8).toFixed(1); // Convert hours to days (8 hours per day)\n            return `${days} days`;\n        }\n        return originalEstimate;\n    }\n    \n    // If it's an object with duration properties, try to extract days\n    if (typeof originalEstimate === 'object') {\n        // Handle Java Duration object structure\n        if (originalEstimate.seconds !== undefined) {\n            const hours = originalEstimate.seconds / 3600; // Convert seconds to hours\n            const days = (hours / 8).toFixed(1); // Convert hours to days\n            return `${days} days`;\n        }\n        return JSON.stringify(originalEstimate);\n    }\n    \n    return originalEstimate.toString();\n};\n\nconst TaskCard=({task, onDelete })=>{\n    const navigate = useNavigate();\n\n    const handleEdit = () => {\n        navigate(\"/edit-task\", { state: { task } });\n    };\n\n    return(\n        <tr>\n            <td>{task.title}</td>\n            <td>{task.description}</td>\n            <td>{task.assigneeId || 'Unassigned'}</td>\n            <td>{task.type}</td>\n            <td><StatusBadge status={task.status} /></td>\n            <td><PriorityBadge priority={task.priority} /></td>\n            <td>{formatEstimateAsDays(task.originalEstimate)}</td>\n            <td>{task.startDate}</td>\n            <td>{task.dueDate || 'N/A'}</td>\n            <td>{Array.isArray(task.labels) ? task.labels.join(', ') : (task.labels || 'N/A')}</td>\n            <td>\n                <div className=\"button-container\">\n                    <button onClick={handleEdit} className=\"button-list\">Edit</button>\n                    <button onClick={onDelete} className=\"button-list\">Delete</button>\n                </div>\n            </td>\n        </tr>\n    );\n};\n\nexport default TaskCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}