{"ast":null,"code":"var _jsxFileName = \"/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport \"./TaskList.css\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Helper function to convert originalEstimate to days display\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatEstimateAsDays = originalEstimate => {\n  if (!originalEstimate) return 'N/A';\n\n  // If it's a string, check for different formats\n  if (typeof originalEstimate === 'string') {\n    // Handle P{days}D format\n    if (originalEstimate.startsWith('P') && originalEstimate.endsWith('D')) {\n      const days = originalEstimate.substring(1, originalEstimate.length - 1);\n      return `${days} days`;\n    }\n    // Handle PT{hours}H format (convert to days)\n    if (originalEstimate.startsWith('PT') && originalEstimate.endsWith('H')) {\n      const hours = parseFloat(originalEstimate.substring(2, originalEstimate.length - 1));\n      const days = (hours / 8).toFixed(1); // Convert hours to days (8 hours per day)\n      return `${days} days`;\n    }\n    return originalEstimate;\n  }\n\n  // If it's an object with duration properties, try to extract days\n  if (typeof originalEstimate === 'object') {\n    // Handle Java Duration object structure\n    if (originalEstimate.seconds !== undefined) {\n      const hours = originalEstimate.seconds / 3600; // Convert seconds to hours\n      const days = (hours / 8).toFixed(1); // Convert hours to days\n      return `${days} days`;\n    }\n    return JSON.stringify(originalEstimate);\n  }\n  return originalEstimate.toString();\n};\n\n// Helper function to get status badge class\nconst getStatusBadgeClass = status => {\n  const statusLower = (status === null || status === void 0 ? void 0 : status.toLowerCase()) || '';\n  switch (statusLower) {\n    case 'todo':\n    case 'to_do':\n    case 'pending':\n      return 'status-badge status-todo';\n    case 'in_progress':\n    case 'inprogress':\n    case 'in progress':\n      return 'status-badge status-in-progress';\n    case 'done':\n    case 'completed':\n    case 'complete':\n      return 'status-badge status-done';\n    case 'blocked':\n    case 'hold':\n      return 'status-badge status-blocked';\n    default:\n      return 'status-badge status-default';\n  }\n};\n\n// Helper function to get priority badge class\nconst getPriorityBadgeClass = priority => {\n  const priorityLower = (priority === null || priority === void 0 ? void 0 : priority.toLowerCase()) || '';\n  switch (priorityLower) {\n    case 'high':\n    case 'urgent':\n      return 'priority-badge priority-high';\n    case 'medium':\n    case 'normal':\n      return 'priority-badge priority-medium';\n    case 'low':\n      return 'priority-badge priority-low';\n    default:\n      return 'priority-badge priority-default';\n  }\n};\nconst TaskCard = ({\n  task,\n  onDelete\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const handleEdit = () => {\n    navigate(\"/edit-task\", {\n      state: {\n        task\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"description-cell\",\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: task.assigneeId || 'Unassigned'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"type-cell\",\n      children: task.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getStatusBadgeClass(task.status),\n        children: task.status || 'Unknown'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getPriorityBadgeClass(task.priority),\n        children: task.priority || 'N/A'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"estimation-cell\",\n      children: formatEstimateAsDays(task.originalEstimate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"date-cell\",\n      children: task.startDate || 'N/A'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"date-cell\",\n      children: task.dueDate || 'N/A'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"labels-cell\",\n      children: Array.isArray(task.labels) ? task.labels.join(', ') : task.labels || 'N/A'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"actions-cell\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          className: \"button-list edit-btn\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onDelete,\n          className: \"button-list delete-btn\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","formatEstimateAsDays","originalEstimate","startsWith","endsWith","days","substring","length","hours","parseFloat","toFixed","seconds","undefined","JSON","stringify","toString","getStatusBadgeClass","status","statusLower","toLowerCase","getPriorityBadgeClass","priority","priorityLower","TaskCard","task","onDelete","_s","navigate","handleEdit","state","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","description","assigneeId","type","startDate","dueDate","Array","isArray","labels","join","onClick","_c","$RefreshReg$"],"sources":["/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/components/TaskList.js"],"sourcesContent":["import \"./TaskList.css\"\nimport { useNavigate } from \"react-router-dom\";\n\n// Helper function to convert originalEstimate to days display\nconst formatEstimateAsDays = (originalEstimate) => {\n    if (!originalEstimate) return 'N/A';\n    \n    // If it's a string, check for different formats\n    if (typeof originalEstimate === 'string') {\n        // Handle P{days}D format\n        if (originalEstimate.startsWith('P') && originalEstimate.endsWith('D')) {\n            const days = originalEstimate.substring(1, originalEstimate.length - 1);\n            return `${days} days`;\n        }\n        // Handle PT{hours}H format (convert to days)\n        if (originalEstimate.startsWith('PT') && originalEstimate.endsWith('H')) {\n            const hours = parseFloat(originalEstimate.substring(2, originalEstimate.length - 1));\n            const days = (hours / 8).toFixed(1); // Convert hours to days (8 hours per day)\n            return `${days} days`;\n        }\n        return originalEstimate;\n    }\n    \n    // If it's an object with duration properties, try to extract days\n    if (typeof originalEstimate === 'object') {\n        // Handle Java Duration object structure\n        if (originalEstimate.seconds !== undefined) {\n            const hours = originalEstimate.seconds / 3600; // Convert seconds to hours\n            const days = (hours / 8).toFixed(1); // Convert hours to days\n            return `${days} days`;\n        }\n        return JSON.stringify(originalEstimate);\n    }\n    \n    return originalEstimate.toString();\n};\n\n// Helper function to get status badge class\nconst getStatusBadgeClass = (status) => {\n    const statusLower = status?.toLowerCase() || '';\n    switch (statusLower) {\n        case 'todo':\n        case 'to_do':\n        case 'pending':\n            return 'status-badge status-todo';\n        case 'in_progress':\n        case 'inprogress':\n        case 'in progress':\n            return 'status-badge status-in-progress';\n        case 'done':\n        case 'completed':\n        case 'complete':\n            return 'status-badge status-done';\n        case 'blocked':\n        case 'hold':\n            return 'status-badge status-blocked';\n        default:\n            return 'status-badge status-default';\n    }\n};\n\n// Helper function to get priority badge class\nconst getPriorityBadgeClass = (priority) => {\n    const priorityLower = priority?.toLowerCase() || '';\n    switch (priorityLower) {\n        case 'high':\n        case 'urgent':\n            return 'priority-badge priority-high';\n        case 'medium':\n        case 'normal':\n            return 'priority-badge priority-medium';\n        case 'low':\n            return 'priority-badge priority-low';\n        default:\n            return 'priority-badge priority-default';\n    }\n};\n\nconst TaskCard=({task, onDelete })=>{\n    const navigate = useNavigate();\n\n    const handleEdit = () => {\n        navigate(\"/edit-task\", { state: { task } });\n    };\n\n    return(\n        <tr>\n            <td>{task.title}</td>\n            <td className=\"description-cell\">{task.description}</td>\n            <td>{task.assigneeId || 'Unassigned'}</td>\n            <td className=\"type-cell\">{task.type}</td>\n            <td>\n                <span className={getStatusBadgeClass(task.status)}>\n                    {task.status || 'Unknown'}\n                </span>\n            </td>\n            <td>\n                <span className={getPriorityBadgeClass(task.priority)}>\n                    {task.priority || 'N/A'}\n                </span>\n            </td>\n            <td className=\"estimation-cell\">{formatEstimateAsDays(task.originalEstimate)}</td>\n            <td className=\"date-cell\">{task.startDate || 'N/A'}</td>\n            <td className=\"date-cell\">{task.dueDate || 'N/A'}</td>\n            <td className=\"labels-cell\">{Array.isArray(task.labels) ? task.labels.join(', ') : (task.labels || 'N/A')}</td>\n            <td className=\"actions-cell\">\n                <div className=\"button-container\">\n                    <button onClick={handleEdit} className=\"button-list edit-btn\">Edit</button>\n                    <button onClick={onDelete} className=\"button-list delete-btn\">Delete</button>\n                </div>\n            </td>\n        </tr>\n    );\n};\n\nexport default TaskCard;\n"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,oBAAoB,GAAIC,gBAAgB,IAAK;EAC/C,IAAI,CAACA,gBAAgB,EAAE,OAAO,KAAK;;EAEnC;EACA,IAAI,OAAOA,gBAAgB,KAAK,QAAQ,EAAE;IACtC;IACA,IAAIA,gBAAgB,CAACC,UAAU,CAAC,GAAG,CAAC,IAAID,gBAAgB,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;MACpE,MAAMC,IAAI,GAAGH,gBAAgB,CAACI,SAAS,CAAC,CAAC,EAAEJ,gBAAgB,CAACK,MAAM,GAAG,CAAC,CAAC;MACvE,OAAO,GAAGF,IAAI,OAAO;IACzB;IACA;IACA,IAAIH,gBAAgB,CAACC,UAAU,CAAC,IAAI,CAAC,IAAID,gBAAgB,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;MACrE,MAAMI,KAAK,GAAGC,UAAU,CAACP,gBAAgB,CAACI,SAAS,CAAC,CAAC,EAAEJ,gBAAgB,CAACK,MAAM,GAAG,CAAC,CAAC,CAAC;MACpF,MAAMF,IAAI,GAAG,CAACG,KAAK,GAAG,CAAC,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MACrC,OAAO,GAAGL,IAAI,OAAO;IACzB;IACA,OAAOH,gBAAgB;EAC3B;;EAEA;EACA,IAAI,OAAOA,gBAAgB,KAAK,QAAQ,EAAE;IACtC;IACA,IAAIA,gBAAgB,CAACS,OAAO,KAAKC,SAAS,EAAE;MACxC,MAAMJ,KAAK,GAAGN,gBAAgB,CAACS,OAAO,GAAG,IAAI,CAAC,CAAC;MAC/C,MAAMN,IAAI,GAAG,CAACG,KAAK,GAAG,CAAC,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MACrC,OAAO,GAAGL,IAAI,OAAO;IACzB;IACA,OAAOQ,IAAI,CAACC,SAAS,CAACZ,gBAAgB,CAAC;EAC3C;EAEA,OAAOA,gBAAgB,CAACa,QAAQ,CAAC,CAAC;AACtC,CAAC;;AAED;AACA,MAAMC,mBAAmB,GAAIC,MAAM,IAAK;EACpC,MAAMC,WAAW,GAAG,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,WAAW,CAAC,CAAC,KAAI,EAAE;EAC/C,QAAQD,WAAW;IACf,KAAK,MAAM;IACX,KAAK,OAAO;IACZ,KAAK,SAAS;MACV,OAAO,0BAA0B;IACrC,KAAK,aAAa;IAClB,KAAK,YAAY;IACjB,KAAK,aAAa;MACd,OAAO,iCAAiC;IAC5C,KAAK,MAAM;IACX,KAAK,WAAW;IAChB,KAAK,UAAU;MACX,OAAO,0BAA0B;IACrC,KAAK,SAAS;IACd,KAAK,MAAM;MACP,OAAO,6BAA6B;IACxC;MACI,OAAO,6BAA6B;EAC5C;AACJ,CAAC;;AAED;AACA,MAAME,qBAAqB,GAAIC,QAAQ,IAAK;EACxC,MAAMC,aAAa,GAAG,CAAAD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEF,WAAW,CAAC,CAAC,KAAI,EAAE;EACnD,QAAQG,aAAa;IACjB,KAAK,MAAM;IACX,KAAK,QAAQ;MACT,OAAO,8BAA8B;IACzC,KAAK,QAAQ;IACb,KAAK,QAAQ;MACT,OAAO,gCAAgC;IAC3C,KAAK,KAAK;MACN,OAAO,6BAA6B;IACxC;MACI,OAAO,iCAAiC;EAChD;AACJ,CAAC;AAED,MAAMC,QAAQ,GAACA,CAAC;EAACC,IAAI;EAAEC;AAAS,CAAC,KAAG;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAG7B,WAAW,CAAC,CAAC;EAE9B,MAAM8B,UAAU,GAAGA,CAAA,KAAM;IACrBD,QAAQ,CAAC,YAAY,EAAE;MAAEE,KAAK,EAAE;QAAEL;MAAK;IAAE,CAAC,CAAC;EAC/C,CAAC;EAED,oBACIxB,OAAA;IAAA8B,QAAA,gBACI9B,OAAA;MAAA8B,QAAA,EAAKN,IAAI,CAACO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBnC,OAAA;MAAIoC,SAAS,EAAC,kBAAkB;MAAAN,QAAA,EAAEN,IAAI,CAACa;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxDnC,OAAA;MAAA8B,QAAA,EAAKN,IAAI,CAACc,UAAU,IAAI;IAAY;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CnC,OAAA;MAAIoC,SAAS,EAAC,WAAW;MAAAN,QAAA,EAAEN,IAAI,CAACe;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CnC,OAAA;MAAA8B,QAAA,eACI9B,OAAA;QAAMoC,SAAS,EAAEpB,mBAAmB,CAACQ,IAAI,CAACP,MAAM,CAAE;QAAAa,QAAA,EAC7CN,IAAI,CAACP,MAAM,IAAI;MAAS;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACLnC,OAAA;MAAA8B,QAAA,eACI9B,OAAA;QAAMoC,SAAS,EAAEhB,qBAAqB,CAACI,IAAI,CAACH,QAAQ,CAAE;QAAAS,QAAA,EACjDN,IAAI,CAACH,QAAQ,IAAI;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACLnC,OAAA;MAAIoC,SAAS,EAAC,iBAAiB;MAAAN,QAAA,EAAE7B,oBAAoB,CAACuB,IAAI,CAACtB,gBAAgB;IAAC;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClFnC,OAAA;MAAIoC,SAAS,EAAC,WAAW;MAAAN,QAAA,EAAEN,IAAI,CAACgB,SAAS,IAAI;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxDnC,OAAA;MAAIoC,SAAS,EAAC,WAAW;MAAAN,QAAA,EAAEN,IAAI,CAACiB,OAAO,IAAI;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtDnC,OAAA;MAAIoC,SAAS,EAAC,aAAa;MAAAN,QAAA,EAAEY,KAAK,CAACC,OAAO,CAACnB,IAAI,CAACoB,MAAM,CAAC,GAAGpB,IAAI,CAACoB,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,GAAIrB,IAAI,CAACoB,MAAM,IAAI;IAAM;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/GnC,OAAA;MAAIoC,SAAS,EAAC,cAAc;MAAAN,QAAA,eACxB9B,OAAA;QAAKoC,SAAS,EAAC,kBAAkB;QAAAN,QAAA,gBAC7B9B,OAAA;UAAQ8C,OAAO,EAAElB,UAAW;UAACQ,SAAS,EAAC,sBAAsB;UAAAN,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3EnC,OAAA;UAAQ8C,OAAO,EAAErB,QAAS;UAACW,SAAS,EAAC,wBAAwB;UAAAN,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb,CAAC;AAACT,EAAA,CAnCIH,QAAQ;EAAA,QACOzB,WAAW;AAAA;AAAAiD,EAAA,GAD1BxB,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}