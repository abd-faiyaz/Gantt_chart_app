{"ast":null,"code":"var _jsxFileName = \"/home/abd_faiyaz/ontik_project_1/React_Frontend/src/modules/TaskForm.js\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nimport useDateCalculation from \"../hooks/useDateCalculation\";\nimport HolidayCalendar from \"../components/HolidayCalendar\";\nimport \"./TaskForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    epicId\n  } = useParams(); // Get epic ID from URL if creating task under specific epic\n  const task = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.task; // get task if passed\n\n  const [allEpics, setAllEpics] = useState([]);\n  const [selectedEpic, setSelectedEpic] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [estimateDays, setEstimateDays] = useState('');\n  const [endDateValue, setEndDateValue] = useState('');\n\n  // Determine if we're creating a task under a specific epic\n  const isUnderSpecificEpic = Boolean(epicId);\n\n  // Use the date calculation hook\n  const {\n    holidays,\n    calculatedEndDate,\n    isCalculating,\n    validationMessage,\n    calculateEndDate,\n    validateEndDate,\n    getHolidayInfo,\n    shouldDisableDate,\n    getDateClassName\n  } = useDateCalculation();\n\n  // Fetch all epics for linked epic dropdown\n  useEffect(() => {\n    const fetchEpics = async () => {\n      try {\n        const response = await fetch(\"/epics\");\n        if (!response.ok) throw new Error(\"Failed to fetch epics\");\n        const epics = await response.json();\n        setAllEpics(epics);\n\n        // If we're creating under a specific epic, find and set it\n        if (isUnderSpecificEpic && epicId) {\n          const epic = epics.find(e => (e.id || e.epicId) === epicId);\n          if (epic) {\n            setSelectedEpic(epic);\n          } else {\n            // Try to fetch the specific epic\n            try {\n              const epicResponse = await fetch(`/epics/${epicId}`);\n              if (epicResponse.ok) {\n                const specificEpic = await epicResponse.json();\n                setSelectedEpic(specificEpic);\n              }\n            } catch (error) {\n              console.error(\"Error fetching specific epic:\", error);\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching epics:\", error);\n        setAllEpics([]);\n      }\n    };\n    fetchEpics();\n  }, [isUnderSpecificEpic, epicId]);\n\n  // Fetch users for assignee dropdown\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\"/users\");\n        if (!response.ok) throw new Error(\"Failed to fetch users\");\n        const userData = await response.json();\n        setUsers(userData);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n        setUsers([]);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  // Helper function to extract days from originalEstimate\n  const extractDaysFromEstimate = originalEstimate => {\n    if (!originalEstimate) return \"\";\n\n    // If it's a string, check for different formats\n    if (typeof originalEstimate === 'string') {\n      // Handle P{days}D format\n      if (originalEstimate.startsWith('P') && originalEstimate.endsWith('D')) {\n        return originalEstimate.substring(1, originalEstimate.length - 1);\n      }\n      // Handle PT{hours}H format (convert to days)\n      if (originalEstimate.startsWith('PT') && originalEstimate.endsWith('H')) {\n        const hours = parseFloat(originalEstimate.substring(2, originalEstimate.length - 1));\n        return (hours / 8).toString(); // Convert hours to days (8 hours per day)\n      }\n    }\n\n    // If it's an object with duration properties, try to extract days\n    if (typeof originalEstimate === 'object') {\n      // Handle Java Duration object structure\n      if (originalEstimate.seconds !== undefined) {\n        const hours = originalEstimate.seconds / 3600; // Convert seconds to hours\n        return (hours / 8).toString(); // Convert hours to days\n      }\n    }\n    return originalEstimate.toString();\n  };\n\n  // Prefill form if editing\n  useEffect(() => {\n    if (task) {\n      const startDateVal = task.start_date || task.startDate || \"\";\n      const endDateVal = task.due_date || task.dueDate || \"\";\n      const estimateVal = extractDaysFromEstimate(task.originalEstimate);\n      setStartDate(startDateVal);\n      setEndDateValue(endDateVal);\n      setEstimateDays(estimateVal);\n      reset({\n        type: task.type ? task.type.toLowerCase() : \"\",\n        title: task.title || \"\",\n        description: task.task_description || \"\",\n        linkedEpic: task.epicId || \"\",\n        startDate: startDateVal,\n        endDate: endDateVal,\n        status: task.status || \"\",\n        priority: task.priority || \"\",\n        estimate: estimateVal,\n        assignee: task.assignee || \"\",\n        labels: task.labels || \"\"\n      });\n\n      // Also update setValue for the calendar components\n      setValue(\"startDate\", startDateVal);\n      setValue(\"endDate\", endDateVal);\n    } else if (isUnderSpecificEpic && selectedEpic) {\n      // Pre-fill the linked epic when creating under specific epic\n      setValue(\"linkedEpic\", selectedEpic.id || selectedEpic.epicId);\n    }\n  }, [task, selectedEpic, isUnderSpecificEpic, reset, setValue]);\n\n  // Auto-calculate end date when start date or estimate changes\n  useEffect(() => {\n    if (startDate && estimateDays && estimateDays > 0) {\n      calculateEndDate(startDate, parseInt(estimateDays));\n    }\n  }, [startDate, estimateDays, calculateEndDate]);\n\n  // Sync state changes with form values\n  useEffect(() => {\n    if (startDate) {\n      setValue(\"startDate\", startDate, {\n        shouldValidate: true\n      });\n    }\n  }, [startDate, setValue]);\n  useEffect(() => {\n    if (endDateValue) {\n      setValue(\"endDate\", endDateValue, {\n        shouldValidate: true\n      });\n    }\n  }, [endDateValue, setValue]);\n  useEffect(() => {\n    if (estimateDays) {\n      setValue(\"estimate\", estimateDays, {\n        shouldValidate: true\n      });\n    }\n  }, [estimateDays, setValue]);\n\n  // Handle start date change\n  const handleStartDateChange = e => {\n    const newStartDate = e.target.value;\n    setStartDate(newStartDate);\n    setValue(\"startDate\", newStartDate, {\n      shouldValidate: true\n    });\n  };\n\n  // Handle estimate days change\n  const handleEstimateChange = e => {\n    const newEstimate = e.target.value;\n    setEstimateDays(newEstimate);\n    setValue(\"estimate\", newEstimate, {\n      shouldValidate: true\n    });\n  };\n\n  // Handle end date change and validation\n  const handleEndDateChange = async e => {\n    const newEndDate = e.target.value;\n    setEndDateValue(newEndDate);\n    setValue(\"endDate\", newEndDate, {\n      shouldValidate: true\n    });\n\n    // Validate the selected end date\n    if (startDate && estimateDays && newEndDate) {\n      await validateEndDate(startDate, parseInt(estimateDays), newEndDate);\n    }\n  };\n\n  // Handles form submission\n  const onSubmit = async data => {\n    // Log the submitted form data for debugging\n    console.log(\"Form submitted with data:\", data);\n    console.log(\"Current state - startDate:\", startDate, \"estimateDays:\", estimateDays, \"endDateValue:\", endDateValue);\n\n    // Check if start date is provided, alert if missing\n    if (!data.startDate) {\n      console.error(\"Start date validation failed - data.startDate:\", data.startDate);\n      alert(\"Start date is required\");\n      return;\n    }\n\n    // Prepare the payload object to match backend API expectations\n    const payload = {\n      type: data.type,\n      // Task type (task, story, etc.)\n      title: data.title,\n      // Task title\n      description: data.description || null,\n      // Task description or null\n      startDate: data.startDate,\n      // Start date\n      dueDate: data.endDate || null,\n      // End date or null\n      status: data.status,\n      // Task status\n      priority: data.priority,\n      // Task priority\n      // Convert estimate to PostgreSQL INTERVAL format if provided (days instead of hours)\n      originalEstimate: data.estimate ? `P${data.estimate}D` : null,\n      // Set assignee and epic based on form data\n      assigneeId: data.assignee || null,\n      epicId: data.linkedEpic || (isUnderSpecificEpic && selectedEpic ? selectedEpic.id || selectedEpic.epicId : null),\n      sprintId: null,\n      parentTaskId: null,\n      // Split labels by comma, trim whitespace, filter out empty strings\n      labels: data.labels ? data.labels.split(',').map(l => l.trim()).filter(l => l.length > 0) : null\n    };\n\n    // Log the payload for debugging\n    console.log(\"Sending payload:\", payload);\n    try {\n      if (task) {\n        // If editing, update the existing task\n        console.log(\"Updating task:\", task.taskId || task.id);\n        const response = await fetch(`/tasks/${task.taskId || task.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        // If response is not OK, throw error with response text\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to update task: ${errorText}`);\n        }\n        // Log success\n        console.log(\"Task updated successfully\");\n      } else {\n        // If creating, send POST request to create new task\n        console.log(\"Creating new task\");\n        const response = await fetch(\"/tasks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        // If response is not OK, throw error with response text\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to create task: ${errorText}`);\n        }\n        // Parse and log the created task result\n        const result = await response.json();\n        console.log(\"Task created successfully:\", result);\n      }\n      // Navigate to the view-tasks page after success\n      navigate(\"/view-tasks\");\n    } catch (error) {\n      // Log and alert any errors that occur during save\n      console.error(\"Error saving task:\", error);\n      alert(`Failed to save task: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: task ? \"Edit Task\" : \"+Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"type\", {\n                required: true\n              }),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"task\",\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"story\",\n                children: \"Story\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this), errors.type && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Task Name/Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"title\", {\n                required: true\n              }),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ...register(\"description\"),\n              rows: 3,\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"epic-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Linked Epic Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 29\n            }, this), isUnderSpecificEpic && selectedEpic ? /*#__PURE__*/_jsxDEV(\"input\", {\n              value: selectedEpic.title || selectedEpic.name || 'Loading...',\n              className: \"box\",\n              disabled: true,\n              style: {\n                backgroundColor: '#f3f4f6',\n                color: '#6b7280'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"linkedEpic\", {\n                required: true\n              }),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select epic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 37\n              }, this), allEpics.map(epic => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: epic.id || epic.epicId,\n                children: epic.title || epic.name\n              }, epic.id || epic.epicId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 33\n            }, this), errors.linkedEpic && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(HolidayCalendar, {\n              value: startDate,\n              onChange: date => {\n                setStartDate(date);\n                // Update the form field using setValue\n                setValue(\"startDate\", date, {\n                  shouldValidate: true\n                });\n              },\n              holidays: holidays,\n              shouldDisableDate: shouldDisableDate,\n              getDateClassName: getDateClassName,\n              getHolidayInfo: getHolidayInfo,\n              placeholder: \"Select start date\",\n              required: true,\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              ...register(\"startDate\", {\n                required: \"Start date is required\"\n              }),\n              value: startDate || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 33\n            }, this), errors.startDate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.startDate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"End Date/Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(HolidayCalendar, {\n              value: endDateValue,\n              onChange: date => {\n                setEndDateValue(date);\n                // Update the form field using setValue\n                setValue(\"endDate\", date, {\n                  shouldValidate: true\n                });\n                // Validate the selected end date\n                if (startDate && estimateDays && date) {\n                  validateEndDate(startDate, parseInt(estimateDays), date);\n                }\n              },\n              holidays: holidays,\n              minDate: calculatedEndDate // Restrict to calculated date or later\n              ,\n              shouldDisableDate: date => {\n                // Disable if before calculated end date\n                if (calculatedEndDate && new Date(date) < new Date(calculatedEndDate)) {\n                  return true;\n                }\n                return shouldDisableDate ? shouldDisableDate(date) : false;\n              },\n              getDateClassName: getDateClassName,\n              getHolidayInfo: getHolidayInfo,\n              placeholder: calculatedEndDate ? `Suggested: ${calculatedEndDate}` : \"Select end date\",\n              className: \"box\",\n              style: {\n                backgroundColor: calculatedEndDate && !endDateValue ? '#f3f4f6' : 'white',\n                color: calculatedEndDate && !endDateValue ? '#6b7280' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              ...register(\"endDate\"),\n              value: endDateValue || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 33\n            }, this), validationMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-red-500 mt-1\",\n              children: validationMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-priority\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"status\", {\n                required: true\n              }),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"To Do\",\n                children: \"To Do\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"In Progress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Done\",\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 29\n            }, this), errors.status && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-priority\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"priority\"),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-assignee\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Original Estimate (days)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.5\",\n              min: \"0\",\n              ...register(\"estimate\", {\n                onChange: handleEstimateChange,\n                min: {\n                  value: 0,\n                  message: \"Estimate must be positive\"\n                }\n              }),\n              className: \"box\",\n              placeholder: \"Enter days (e.g., 1.5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 29\n            }, this), errors.estimate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.estimate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-assignee\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"assignee\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Labels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"labels\"),\n              className: \"box\",\n              placeholder: \"tag1, tag2, tag3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            children: task ? \"Update Task\" : \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"I+lzVz96+me8ROAvhVYzl50qfFs=\", false, function () {\n  return [useNavigate, useLocation, useParams, useDateCalculation, useForm];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useLocation","useNavigate","useParams","useForm","useEffect","useState","useDateCalculation","HolidayCalendar","jsxDEV","_jsxDEV","TaskForm","_s","_location$state","navigate","location","epicId","task","state","allEpics","setAllEpics","selectedEpic","setSelectedEpic","users","setUsers","startDate","setStartDate","estimateDays","setEstimateDays","endDateValue","setEndDateValue","isUnderSpecificEpic","Boolean","holidays","calculatedEndDate","isCalculating","validationMessage","calculateEndDate","validateEndDate","getHolidayInfo","shouldDisableDate","getDateClassName","fetchEpics","response","fetch","ok","Error","epics","json","epic","find","e","id","epicResponse","specificEpic","error","console","fetchUsers","userData","register","handleSubmit","reset","setValue","formState","errors","extractDaysFromEstimate","originalEstimate","startsWith","endsWith","substring","length","hours","parseFloat","toString","seconds","undefined","startDateVal","start_date","endDateVal","due_date","dueDate","estimateVal","type","toLowerCase","title","description","task_description","linkedEpic","endDate","status","priority","estimate","assignee","labels","parseInt","shouldValidate","handleStartDateChange","newStartDate","target","value","handleEstimateChange","newEstimate","handleEndDateChange","newEndDate","onSubmit","data","log","alert","payload","assigneeId","sprintId","parentTaskId","split","map","l","trim","filter","taskId","method","headers","body","JSON","stringify","errorText","text","result","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","required","rows","name","disabled","style","backgroundColor","color","onChange","date","placeholder","minDate","Date","step","min","_c","$RefreshReg$"],"sources":["/home/abd_faiyaz/ontik_project_1/React_Frontend/src/modules/TaskForm.js"],"sourcesContent":["import { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nimport useDateCalculation from \"../hooks/useDateCalculation\";\nimport HolidayCalendar from \"../components/HolidayCalendar\";\nimport \"./TaskForm.css\"\n\nconst TaskForm = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { epicId } = useParams(); // Get epic ID from URL if creating task under specific epic\n    const task = location.state?.task; // get task if passed\n\n    const [allEpics, setAllEpics] = useState([]);\n    const [selectedEpic, setSelectedEpic] = useState(null);\n    const [users, setUsers] = useState([]);\n    const [startDate, setStartDate] = useState('');\n    const [estimateDays, setEstimateDays] = useState('');\n    const [endDateValue, setEndDateValue] = useState('');\n\n    // Determine if we're creating a task under a specific epic\n    const isUnderSpecificEpic = Boolean(epicId);\n\n    // Use the date calculation hook\n    const {\n        holidays,\n        calculatedEndDate,\n        isCalculating,\n        validationMessage,\n        calculateEndDate,\n        validateEndDate,\n        getHolidayInfo,\n        shouldDisableDate,\n        getDateClassName\n    } = useDateCalculation();\n\n    // Fetch all epics for linked epic dropdown\n    useEffect(() => {\n        const fetchEpics = async () => {\n            try {\n                const response = await fetch(\"/epics\");\n                if (!response.ok) throw new Error(\"Failed to fetch epics\");\n                const epics = await response.json();\n                setAllEpics(epics);\n                \n                // If we're creating under a specific epic, find and set it\n                if (isUnderSpecificEpic && epicId) {\n                    const epic = epics.find(e => (e.id || e.epicId) === epicId);\n                    if (epic) {\n                        setSelectedEpic(epic);\n                    } else {\n                        // Try to fetch the specific epic\n                        try {\n                            const epicResponse = await fetch(`/epics/${epicId}`);\n                            if (epicResponse.ok) {\n                                const specificEpic = await epicResponse.json();\n                                setSelectedEpic(specificEpic);\n                            }\n                        } catch (error) {\n                            console.error(\"Error fetching specific epic:\", error);\n                        }\n                    }\n                }\n            } catch (error) {\n                console.error(\"Error fetching epics:\", error);\n                setAllEpics([]);\n            }\n        };\n        fetchEpics();\n    }, [isUnderSpecificEpic, epicId]);\n\n    // Fetch users for assignee dropdown\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                const response = await fetch(\"/users\");\n                if (!response.ok) throw new Error(\"Failed to fetch users\");\n                const userData = await response.json();\n                setUsers(userData);\n            } catch (error) {\n                console.error(\"Error fetching users:\", error);\n                setUsers([]);\n            }\n        };\n        fetchUsers();\n    }, []);\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        setValue,\n        formState: { errors },\n    } = useForm();\n\n    // Helper function to extract days from originalEstimate\n    const extractDaysFromEstimate = (originalEstimate) => {\n        if (!originalEstimate) return \"\";\n        \n        // If it's a string, check for different formats\n        if (typeof originalEstimate === 'string') {\n            // Handle P{days}D format\n            if (originalEstimate.startsWith('P') && originalEstimate.endsWith('D')) {\n                return originalEstimate.substring(1, originalEstimate.length - 1);\n            }\n            // Handle PT{hours}H format (convert to days)\n            if (originalEstimate.startsWith('PT') && originalEstimate.endsWith('H')) {\n                const hours = parseFloat(originalEstimate.substring(2, originalEstimate.length - 1));\n                return (hours / 8).toString(); // Convert hours to days (8 hours per day)\n            }\n        }\n        \n        // If it's an object with duration properties, try to extract days\n        if (typeof originalEstimate === 'object') {\n            // Handle Java Duration object structure\n            if (originalEstimate.seconds !== undefined) {\n                const hours = originalEstimate.seconds / 3600; // Convert seconds to hours\n                return (hours / 8).toString(); // Convert hours to days\n            }\n        }\n        \n        return originalEstimate.toString();\n    };\n\n    // Prefill form if editing\n    useEffect(() => {\n        if (task) {\n            const startDateVal = task.start_date || task.startDate || \"\";\n            const endDateVal = task.due_date || task.dueDate || \"\";\n            const estimateVal = extractDaysFromEstimate(task.originalEstimate);\n            \n            setStartDate(startDateVal);\n            setEndDateValue(endDateVal);\n            setEstimateDays(estimateVal);\n            \n            reset({\n                type: task.type ? task.type.toLowerCase() : \"\",\n                title: task.title || \"\",\n                description: task.task_description || \"\",\n                linkedEpic: task.epicId || \"\",\n                startDate: startDateVal,\n                endDate: endDateVal,\n                status: task.status || \"\",\n                priority: task.priority || \"\",\n                estimate: estimateVal,\n                assignee: task.assignee || \"\",\n                labels: task.labels || \"\",\n            });\n            \n            // Also update setValue for the calendar components\n            setValue(\"startDate\", startDateVal);\n            setValue(\"endDate\", endDateVal);\n        } else if (isUnderSpecificEpic && selectedEpic) {\n            // Pre-fill the linked epic when creating under specific epic\n            setValue(\"linkedEpic\", selectedEpic.id || selectedEpic.epicId);\n        }\n    }, [task, selectedEpic, isUnderSpecificEpic, reset, setValue]);\n\n    // Auto-calculate end date when start date or estimate changes\n    useEffect(() => {\n        if (startDate && estimateDays && estimateDays > 0) {\n            calculateEndDate(startDate, parseInt(estimateDays));\n        }\n    }, [startDate, estimateDays, calculateEndDate]);\n\n    // Sync state changes with form values\n    useEffect(() => {\n        if (startDate) {\n            setValue(\"startDate\", startDate, { shouldValidate: true });\n        }\n    }, [startDate, setValue]);\n\n    useEffect(() => {\n        if (endDateValue) {\n            setValue(\"endDate\", endDateValue, { shouldValidate: true });\n        }\n    }, [endDateValue, setValue]);\n\n    useEffect(() => {\n        if (estimateDays) {\n            setValue(\"estimate\", estimateDays, { shouldValidate: true });\n        }\n    }, [estimateDays, setValue]);\n\n    // Handle start date change\n    const handleStartDateChange = (e) => {\n        const newStartDate = e.target.value;\n        setStartDate(newStartDate);\n        setValue(\"startDate\", newStartDate, { shouldValidate: true });\n    };\n\n    // Handle estimate days change\n    const handleEstimateChange = (e) => {\n        const newEstimate = e.target.value;\n        setEstimateDays(newEstimate);\n        setValue(\"estimate\", newEstimate, { shouldValidate: true });\n    };\n\n    // Handle end date change and validation\n    const handleEndDateChange = async (e) => {\n        const newEndDate = e.target.value;\n        setEndDateValue(newEndDate);\n        setValue(\"endDate\", newEndDate, { shouldValidate: true });\n\n        // Validate the selected end date\n        if (startDate && estimateDays && newEndDate) {\n            await validateEndDate(startDate, parseInt(estimateDays), newEndDate);\n        }\n    };\n\n    // Handles form submission\n    const onSubmit = async (data) => {\n        // Log the submitted form data for debugging\n        console.log(\"Form submitted with data:\", data);\n        console.log(\"Current state - startDate:\", startDate, \"estimateDays:\", estimateDays, \"endDateValue:\", endDateValue);\n        \n        // Check if start date is provided, alert if missing\n        if (!data.startDate) {\n            console.error(\"Start date validation failed - data.startDate:\", data.startDate);\n            alert(\"Start date is required\");\n            return;\n        }\n\n        // Prepare the payload object to match backend API expectations\n        const payload = {\n            type: data.type, // Task type (task, story, etc.)\n            title: data.title, // Task title\n            description: data.description || null, // Task description or null\n            startDate: data.startDate, // Start date\n            dueDate: data.endDate || null, // End date or null\n            status: data.status, // Task status\n            priority: data.priority, // Task priority\n            // Convert estimate to PostgreSQL INTERVAL format if provided (days instead of hours)\n            originalEstimate: data.estimate ? `P${data.estimate}D` : null,\n            // Set assignee and epic based on form data\n            assigneeId: data.assignee || null,\n            epicId: data.linkedEpic || (isUnderSpecificEpic && selectedEpic ? (selectedEpic.id || selectedEpic.epicId) : null),\n            sprintId: null,\n            parentTaskId: null,\n            // Split labels by comma, trim whitespace, filter out empty strings\n            labels: data.labels ? data.labels.split(',').map(l => l.trim()).filter(l => l.length > 0) : null\n        };\n\n        // Log the payload for debugging\n        console.log(\"Sending payload:\", payload);\n\n        try {\n            if (task) {\n                // If editing, update the existing task\n                console.log(\"Updating task:\", task.taskId || task.id);\n                const response = await fetch(`/tasks/${task.taskId || task.id}`, {\n                    method: \"PUT\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(payload)\n                });\n                // If response is not OK, throw error with response text\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Failed to update task: ${errorText}`);\n                }\n                // Log success\n                console.log(\"Task updated successfully\");\n            } else {\n                // If creating, send POST request to create new task\n                console.log(\"Creating new task\");\n                const response = await fetch(\"/tasks\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(payload)\n                });\n                // If response is not OK, throw error with response text\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Failed to create task: ${errorText}`);\n                }\n                // Parse and log the created task result\n                const result = await response.json();\n                console.log(\"Task created successfully:\", result);\n            }\n            // Navigate to the view-tasks page after success\n            navigate(\"/view-tasks\");\n        } catch (error) {\n            // Log and alert any errors that occur during save\n            console.error(\"Error saving task:\", error);\n            alert(`Failed to save task: ${error.message}`);\n        }\n    };\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-header\">\n                <h1>{task ? \"Edit Task\" : \"+Create Task\"}</h1>\n            </div>\n            <div className=\"form-container\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-subcontainer\">\n                        <div className=\"type-name\">\n\n                            {/*type*/}\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Type</label>\n\n                            </div>\n                            <select\n                                {...register(\"type\", { required: true })}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select type</option>\n                                <option value=\"task\">Task</option>\n                                <option value=\"story\">Story</option>\n                            </select>\n                            {errors.type && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n\n\n\n                        <div className=\"type-name\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Task Name/Title</label>\n\n                            </div>\n                            <input\n                                {...register(\"title\", { required: true })}\n                                className=\"box\"\n                            />\n                            {errors.title && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n\n                        {/* Task Description */}\n                        <div className=\"description\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n\n                            </div>\n                            <textarea\n                                {...register(\"description\")}\n                                rows={3}\n                                className=\"box\"\n                            />\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Linked Epic Name */}\n                        <div className=\"epic-name\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Linked Epic Name</label>\n\n                            </div>\n                            {isUnderSpecificEpic && selectedEpic ? (\n                                <input\n                                    value={selectedEpic.title || selectedEpic.name || 'Loading...'}\n                                    className=\"box\"\n                                    disabled\n                                    style={{ backgroundColor: '#f3f4f6', color: '#6b7280' }}\n                                />\n                            ) : (\n                                <select\n                                    {...register(\"linkedEpic\", { required: true })}\n                                    className=\"box\"\n                                >\n                                    <option value=\"\">Select epic</option>\n                                    {allEpics.map((epic) => (\n                                        <option key={epic.id || epic.epicId} value={epic.id || epic.epicId}>\n                                            {epic.title || epic.name}\n                                        </option>\n                                    ))}\n                                </select>\n                            )}\n                            {errors.linkedEpic && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        \n                            <div className=\"date\">\n                                <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Start Date</label>\n                                </div>\n                                <HolidayCalendar\n                                    value={startDate}\n                                    onChange={(date) => {\n                                        setStartDate(date);\n                                        // Update the form field using setValue\n                                        setValue(\"startDate\", date, { shouldValidate: true });\n                                    }}\n                                    holidays={holidays}\n                                    shouldDisableDate={shouldDisableDate}\n                                    getDateClassName={getDateClassName}\n                                    getHolidayInfo={getHolidayInfo}\n                                    placeholder=\"Select start date\"\n                                    required\n                                    className=\"box\"\n                                />\n                                {/* Hidden input for form validation */}\n                                <input\n                                    type=\"hidden\"\n                                    {...register(\"startDate\", { \n                                        required: \"Start date is required\"\n                                    })}\n                                    value={startDate || ''}\n                                />\n                                {errors.startDate && <span className=\"text-red-500 text-sm\">{errors.startDate.message}</span>}\n                            </div>\n\n                            <div className=\"date\">\n                                <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">End Date/Due Date</label>\n                                </div>\n                                <HolidayCalendar\n                                    value={endDateValue}\n                                    onChange={(date) => {\n                                        setEndDateValue(date);\n                                        // Update the form field using setValue\n                                        setValue(\"endDate\", date, { shouldValidate: true });\n                                        // Validate the selected end date\n                                        if (startDate && estimateDays && date) {\n                                            validateEndDate(startDate, parseInt(estimateDays), date);\n                                        }\n                                    }}\n                                    holidays={holidays}\n                                    minDate={calculatedEndDate} // Restrict to calculated date or later\n                                    shouldDisableDate={(date) => {\n                                        // Disable if before calculated end date\n                                        if (calculatedEndDate && new Date(date) < new Date(calculatedEndDate)) {\n                                            return true;\n                                        }\n                                        return shouldDisableDate ? shouldDisableDate(date) : false;\n                                    }}\n                                    getDateClassName={getDateClassName}\n                                    getHolidayInfo={getHolidayInfo}\n                                    placeholder={calculatedEndDate ? `Suggested: ${calculatedEndDate}` : \"Select end date\"}\n                                    className=\"box\"\n                                    style={{\n                                        backgroundColor: calculatedEndDate && !endDateValue ? '#f3f4f6' : 'white',\n                                        color: calculatedEndDate && !endDateValue ? '#6b7280' : 'black'\n                                    }}\n                                />\n                                {/* Hidden input for form validation */}\n                                <input\n                                    type=\"hidden\"\n                                    {...register(\"endDate\")}\n                                    value={endDateValue || ''}\n                                />\n                                {/* {calculatedEndDate && (\n                                    <div className=\"text-sm text-gray-600 mt-1\">\n                                        {isCalculating ? 'Calculating...' : `Suggested end date: ${calculatedEndDate}`}\n                                    </div>\n                                )} */}\n                                {validationMessage && (\n                                    <div className=\"text-sm text-red-500 mt-1\">{validationMessage}</div>\n                                )}\n                            </div>\n                        \n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Status */}\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n\n                            <label className=\"block text-sm font-medium text-gray-700\">Status</label>\n                            </div>\n                            <select\n                                {...register(\"status\", { required: true })}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select status</option>\n                                <option value=\"To Do\">To Do</option>\n                                <option value=\"In Progress\">In Progress</option>\n                                <option value=\"Done\">Done</option>\n                            </select>\n                            {errors.status && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n                        {/* Priority */}\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Priority</label>\n\n                            </div>\n                            <select\n                                {...register(\"priority\")}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select priority</option>\n                                <option value=\"High\">High</option>\n                                <option value=\"Medium\">Medium</option>\n                                <option value=\"Low\">Low</option>\n                            </select>\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n\n                            <label className=\"block text-sm font-medium text-gray-700\">Original Estimate (days)</label>\n                            </div>\n                            <input\n                                type=\"number\"\n                                step=\"0.5\"\n                                min=\"0\"\n                                {...register(\"estimate\", { \n                                    onChange: handleEstimateChange,\n                                    min: { value: 0, message: \"Estimate must be positive\" }\n                                })}\n                                className=\"box\"\n                                placeholder=\"Enter days (e.g., 1.5)\"\n                            />\n                            {errors.estimate && <span className=\"text-red-500 text-sm\">{errors.estimate.message}</span>}\n                        </div>\n                        {/* Assignee */}\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Assignee</label>\n\n                            </div>\n                            <input\n                                {...register(\"assignee\")}\n                                className=\"box\"\n                            />\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Labels/Tags */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Labels</label>\n\n                            </div>\n                            <input\n                                {...register(\"labels\")}\n                                className=\"box\"\n                                placeholder=\"tag1, tag2, tag3\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <button\n                            type=\"submit\"\n                            className=\"button\"\n                        >\n                            {task ? \"Update Task\" : \"Create Task\"}\n                        </button>\n                    </div>\n\n                </form>\n                \n\n            </div>\n        </div>\n    );\n};\n\nexport default TaskForm;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACtE,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,kBAAkB,MAAM,6BAA6B;AAC5D,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACnB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEe;EAAO,CAAC,GAAGb,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMc,IAAI,IAAAJ,eAAA,GAAGE,QAAQ,CAACG,KAAK,cAAAL,eAAA,uBAAdA,eAAA,CAAgBI,IAAI,CAAC,CAAC;;EAEnC,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMyB,mBAAmB,GAAGC,OAAO,CAAChB,MAAM,CAAC;;EAE3C;EACA,MAAM;IACFiB,QAAQ;IACRC,iBAAiB;IACjBC,aAAa;IACbC,iBAAiB;IACjBC,gBAAgB;IAChBC,eAAe;IACfC,cAAc;IACdC,iBAAiB;IACjBC;EACJ,CAAC,GAAGlC,kBAAkB,CAAC,CAAC;;EAExB;EACAF,SAAS,CAAC,MAAM;IACZ,MAAMqC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC;QACtC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1D,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACnC5B,WAAW,CAAC2B,KAAK,CAAC;;QAElB;QACA,IAAIhB,mBAAmB,IAAIf,MAAM,EAAE;UAC/B,MAAMiC,IAAI,GAAGF,KAAK,CAACG,IAAI,CAACC,CAAC,IAAI,CAACA,CAAC,CAACC,EAAE,IAAID,CAAC,CAACnC,MAAM,MAAMA,MAAM,CAAC;UAC3D,IAAIiC,IAAI,EAAE;YACN3B,eAAe,CAAC2B,IAAI,CAAC;UACzB,CAAC,MAAM;YACH;YACA,IAAI;cACA,MAAMI,YAAY,GAAG,MAAMT,KAAK,CAAC,UAAU5B,MAAM,EAAE,CAAC;cACpD,IAAIqC,YAAY,CAACR,EAAE,EAAE;gBACjB,MAAMS,YAAY,GAAG,MAAMD,YAAY,CAACL,IAAI,CAAC,CAAC;gBAC9C1B,eAAe,CAACgC,YAAY,CAAC;cACjC;YACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;cACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;YACzD;UACJ;QACJ;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CnC,WAAW,CAAC,EAAE,CAAC;MACnB;IACJ,CAAC;IACDsB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACX,mBAAmB,EAAEf,MAAM,CAAC,CAAC;;EAEjC;EACAX,SAAS,CAAC,MAAM;IACZ,MAAMoD,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC;QACtC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1D,MAAMY,QAAQ,GAAG,MAAMf,QAAQ,CAACK,IAAI,CAAC,CAAC;QACtCxB,QAAQ,CAACkC,QAAQ,CAAC;MACtB,CAAC,CAAC,OAAOH,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C/B,QAAQ,CAAC,EAAE,CAAC;MAChB;IACJ,CAAC;IACDiC,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IACFE,QAAQ;IACRC,YAAY;IACZC,KAAK;IACLC,QAAQ;IACRC,SAAS,EAAE;MAAEC;IAAO;EACxB,CAAC,GAAG5D,OAAO,CAAC,CAAC;;EAEb;EACA,MAAM6D,uBAAuB,GAAIC,gBAAgB,IAAK;IAClD,IAAI,CAACA,gBAAgB,EAAE,OAAO,EAAE;;IAEhC;IACA,IAAI,OAAOA,gBAAgB,KAAK,QAAQ,EAAE;MACtC;MACA,IAAIA,gBAAgB,CAACC,UAAU,CAAC,GAAG,CAAC,IAAID,gBAAgB,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;QACpE,OAAOF,gBAAgB,CAACG,SAAS,CAAC,CAAC,EAAEH,gBAAgB,CAACI,MAAM,GAAG,CAAC,CAAC;MACrE;MACA;MACA,IAAIJ,gBAAgB,CAACC,UAAU,CAAC,IAAI,CAAC,IAAID,gBAAgB,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;QACrE,MAAMG,KAAK,GAAGC,UAAU,CAACN,gBAAgB,CAACG,SAAS,CAAC,CAAC,EAAEH,gBAAgB,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC;QACpF,OAAO,CAACC,KAAK,GAAG,CAAC,EAAEE,QAAQ,CAAC,CAAC,CAAC,CAAC;MACnC;IACJ;;IAEA;IACA,IAAI,OAAOP,gBAAgB,KAAK,QAAQ,EAAE;MACtC;MACA,IAAIA,gBAAgB,CAACQ,OAAO,KAAKC,SAAS,EAAE;QACxC,MAAMJ,KAAK,GAAGL,gBAAgB,CAACQ,OAAO,GAAG,IAAI,CAAC,CAAC;QAC/C,OAAO,CAACH,KAAK,GAAG,CAAC,EAAEE,QAAQ,CAAC,CAAC,CAAC,CAAC;MACnC;IACJ;IAEA,OAAOP,gBAAgB,CAACO,QAAQ,CAAC,CAAC;EACtC,CAAC;;EAED;EACApE,SAAS,CAAC,MAAM;IACZ,IAAIY,IAAI,EAAE;MACN,MAAM2D,YAAY,GAAG3D,IAAI,CAAC4D,UAAU,IAAI5D,IAAI,CAACQ,SAAS,IAAI,EAAE;MAC5D,MAAMqD,UAAU,GAAG7D,IAAI,CAAC8D,QAAQ,IAAI9D,IAAI,CAAC+D,OAAO,IAAI,EAAE;MACtD,MAAMC,WAAW,GAAGhB,uBAAuB,CAAChD,IAAI,CAACiD,gBAAgB,CAAC;MAElExC,YAAY,CAACkD,YAAY,CAAC;MAC1B9C,eAAe,CAACgD,UAAU,CAAC;MAC3BlD,eAAe,CAACqD,WAAW,CAAC;MAE5BpB,KAAK,CAAC;QACFqB,IAAI,EAAEjE,IAAI,CAACiE,IAAI,GAAGjE,IAAI,CAACiE,IAAI,CAACC,WAAW,CAAC,CAAC,GAAG,EAAE;QAC9CC,KAAK,EAAEnE,IAAI,CAACmE,KAAK,IAAI,EAAE;QACvBC,WAAW,EAAEpE,IAAI,CAACqE,gBAAgB,IAAI,EAAE;QACxCC,UAAU,EAAEtE,IAAI,CAACD,MAAM,IAAI,EAAE;QAC7BS,SAAS,EAAEmD,YAAY;QACvBY,OAAO,EAAEV,UAAU;QACnBW,MAAM,EAAExE,IAAI,CAACwE,MAAM,IAAI,EAAE;QACzBC,QAAQ,EAAEzE,IAAI,CAACyE,QAAQ,IAAI,EAAE;QAC7BC,QAAQ,EAAEV,WAAW;QACrBW,QAAQ,EAAE3E,IAAI,CAAC2E,QAAQ,IAAI,EAAE;QAC7BC,MAAM,EAAE5E,IAAI,CAAC4E,MAAM,IAAI;MAC3B,CAAC,CAAC;;MAEF;MACA/B,QAAQ,CAAC,WAAW,EAAEc,YAAY,CAAC;MACnCd,QAAQ,CAAC,SAAS,EAAEgB,UAAU,CAAC;IACnC,CAAC,MAAM,IAAI/C,mBAAmB,IAAIV,YAAY,EAAE;MAC5C;MACAyC,QAAQ,CAAC,YAAY,EAAEzC,YAAY,CAAC+B,EAAE,IAAI/B,YAAY,CAACL,MAAM,CAAC;IAClE;EACJ,CAAC,EAAE,CAACC,IAAI,EAAEI,YAAY,EAAEU,mBAAmB,EAAE8B,KAAK,EAAEC,QAAQ,CAAC,CAAC;;EAE9D;EACAzD,SAAS,CAAC,MAAM;IACZ,IAAIoB,SAAS,IAAIE,YAAY,IAAIA,YAAY,GAAG,CAAC,EAAE;MAC/CU,gBAAgB,CAACZ,SAAS,EAAEqE,QAAQ,CAACnE,YAAY,CAAC,CAAC;IACvD;EACJ,CAAC,EAAE,CAACF,SAAS,EAAEE,YAAY,EAAEU,gBAAgB,CAAC,CAAC;;EAE/C;EACAhC,SAAS,CAAC,MAAM;IACZ,IAAIoB,SAAS,EAAE;MACXqC,QAAQ,CAAC,WAAW,EAAErC,SAAS,EAAE;QAAEsE,cAAc,EAAE;MAAK,CAAC,CAAC;IAC9D;EACJ,CAAC,EAAE,CAACtE,SAAS,EAAEqC,QAAQ,CAAC,CAAC;EAEzBzD,SAAS,CAAC,MAAM;IACZ,IAAIwB,YAAY,EAAE;MACdiC,QAAQ,CAAC,SAAS,EAAEjC,YAAY,EAAE;QAAEkE,cAAc,EAAE;MAAK,CAAC,CAAC;IAC/D;EACJ,CAAC,EAAE,CAAClE,YAAY,EAAEiC,QAAQ,CAAC,CAAC;EAE5BzD,SAAS,CAAC,MAAM;IACZ,IAAIsB,YAAY,EAAE;MACdmC,QAAQ,CAAC,UAAU,EAAEnC,YAAY,EAAE;QAAEoE,cAAc,EAAE;MAAK,CAAC,CAAC;IAChE;EACJ,CAAC,EAAE,CAACpE,YAAY,EAAEmC,QAAQ,CAAC,CAAC;;EAE5B;EACA,MAAMkC,qBAAqB,GAAI7C,CAAC,IAAK;IACjC,MAAM8C,YAAY,GAAG9C,CAAC,CAAC+C,MAAM,CAACC,KAAK;IACnCzE,YAAY,CAACuE,YAAY,CAAC;IAC1BnC,QAAQ,CAAC,WAAW,EAAEmC,YAAY,EAAE;MAAEF,cAAc,EAAE;IAAK,CAAC,CAAC;EACjE,CAAC;;EAED;EACA,MAAMK,oBAAoB,GAAIjD,CAAC,IAAK;IAChC,MAAMkD,WAAW,GAAGlD,CAAC,CAAC+C,MAAM,CAACC,KAAK;IAClCvE,eAAe,CAACyE,WAAW,CAAC;IAC5BvC,QAAQ,CAAC,UAAU,EAAEuC,WAAW,EAAE;MAAEN,cAAc,EAAE;IAAK,CAAC,CAAC;EAC/D,CAAC;;EAED;EACA,MAAMO,mBAAmB,GAAG,MAAOnD,CAAC,IAAK;IACrC,MAAMoD,UAAU,GAAGpD,CAAC,CAAC+C,MAAM,CAACC,KAAK;IACjCrE,eAAe,CAACyE,UAAU,CAAC;IAC3BzC,QAAQ,CAAC,SAAS,EAAEyC,UAAU,EAAE;MAAER,cAAc,EAAE;IAAK,CAAC,CAAC;;IAEzD;IACA,IAAItE,SAAS,IAAIE,YAAY,IAAI4E,UAAU,EAAE;MACzC,MAAMjE,eAAe,CAACb,SAAS,EAAEqE,QAAQ,CAACnE,YAAY,CAAC,EAAE4E,UAAU,CAAC;IACxE;EACJ,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC7B;IACAjD,OAAO,CAACkD,GAAG,CAAC,2BAA2B,EAAED,IAAI,CAAC;IAC9CjD,OAAO,CAACkD,GAAG,CAAC,4BAA4B,EAAEjF,SAAS,EAAE,eAAe,EAAEE,YAAY,EAAE,eAAe,EAAEE,YAAY,CAAC;;IAElH;IACA,IAAI,CAAC4E,IAAI,CAAChF,SAAS,EAAE;MACjB+B,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEkD,IAAI,CAAChF,SAAS,CAAC;MAC/EkF,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACJ;;IAEA;IACA,MAAMC,OAAO,GAAG;MACZ1B,IAAI,EAAEuB,IAAI,CAACvB,IAAI;MAAE;MACjBE,KAAK,EAAEqB,IAAI,CAACrB,KAAK;MAAE;MACnBC,WAAW,EAAEoB,IAAI,CAACpB,WAAW,IAAI,IAAI;MAAE;MACvC5D,SAAS,EAAEgF,IAAI,CAAChF,SAAS;MAAE;MAC3BuD,OAAO,EAAEyB,IAAI,CAACjB,OAAO,IAAI,IAAI;MAAE;MAC/BC,MAAM,EAAEgB,IAAI,CAAChB,MAAM;MAAE;MACrBC,QAAQ,EAAEe,IAAI,CAACf,QAAQ;MAAE;MACzB;MACAxB,gBAAgB,EAAEuC,IAAI,CAACd,QAAQ,GAAG,IAAIc,IAAI,CAACd,QAAQ,GAAG,GAAG,IAAI;MAC7D;MACAkB,UAAU,EAAEJ,IAAI,CAACb,QAAQ,IAAI,IAAI;MACjC5E,MAAM,EAAEyF,IAAI,CAAClB,UAAU,KAAKxD,mBAAmB,IAAIV,YAAY,GAAIA,YAAY,CAAC+B,EAAE,IAAI/B,YAAY,CAACL,MAAM,GAAI,IAAI,CAAC;MAClH8F,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE,IAAI;MAClB;MACAlB,MAAM,EAAEY,IAAI,CAACZ,MAAM,GAAGY,IAAI,CAACZ,MAAM,CAACmB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAACF,CAAC,IAAIA,CAAC,CAAC5C,MAAM,GAAG,CAAC,CAAC,GAAG;IAChG,CAAC;;IAED;IACAd,OAAO,CAACkD,GAAG,CAAC,kBAAkB,EAAEE,OAAO,CAAC;IAExC,IAAI;MACA,IAAI3F,IAAI,EAAE;QACN;QACAuC,OAAO,CAACkD,GAAG,CAAC,gBAAgB,EAAEzF,IAAI,CAACoG,MAAM,IAAIpG,IAAI,CAACmC,EAAE,CAAC;QACrD,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU3B,IAAI,CAACoG,MAAM,IAAIpG,IAAI,CAACmC,EAAE,EAAE,EAAE;UAC7DkE,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,OAAO;QAChC,CAAC,CAAC;QACF;QACA,IAAI,CAACjE,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM8E,SAAS,GAAG,MAAMhF,QAAQ,CAACiF,IAAI,CAAC,CAAC;UACvC,MAAM,IAAI9E,KAAK,CAAC,0BAA0B6E,SAAS,EAAE,CAAC;QAC1D;QACA;QACAnE,OAAO,CAACkD,GAAG,CAAC,2BAA2B,CAAC;MAC5C,CAAC,MAAM;QACH;QACAlD,OAAO,CAACkD,GAAG,CAAC,mBAAmB,CAAC;QAChC,MAAM/D,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;UACnC0E,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,OAAO;QAChC,CAAC,CAAC;QACF;QACA,IAAI,CAACjE,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM8E,SAAS,GAAG,MAAMhF,QAAQ,CAACiF,IAAI,CAAC,CAAC;UACvC,MAAM,IAAI9E,KAAK,CAAC,0BAA0B6E,SAAS,EAAE,CAAC;QAC1D;QACA;QACA,MAAME,MAAM,GAAG,MAAMlF,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCQ,OAAO,CAACkD,GAAG,CAAC,4BAA4B,EAAEmB,MAAM,CAAC;MACrD;MACA;MACA/G,QAAQ,CAAC,aAAa,CAAC;IAC3B,CAAC,CAAC,OAAOyC,KAAK,EAAE;MACZ;MACAC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CoD,KAAK,CAAC,wBAAwBpD,KAAK,CAACuE,OAAO,EAAE,CAAC;IAClD;EACJ,CAAC;EAED,oBACIpH,OAAA;IAAKqH,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBtH,OAAA;MAAKqH,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBtH,OAAA;QAAAsH,QAAA,EAAK/G,IAAI,GAAG,WAAW,GAAG;MAAc;QAAAgH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACN1H,OAAA;MAAKqH,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BtH,OAAA;QAAM8F,QAAQ,EAAE5C,YAAY,CAAC4C,QAAQ,CAAE;QAAAwB,QAAA,gBACnCtH,OAAA;UAAKqH,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAC9BtH,OAAA;YAAKqH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBAGtBtH,OAAA;cAAKqH,SAAS,EAAC,OAAO;cAAAC,QAAA,eAClBtH,OAAA;gBAAOqH,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEtE,CAAC,eACN1H,OAAA;cAAA,GACQiD,QAAQ,CAAC,MAAM,EAAE;gBAAE0E,QAAQ,EAAE;cAAK,CAAC,CAAC;cACxCN,SAAS,EAAC,KAAK;cAAAC,QAAA,gBAEftH,OAAA;gBAAQyF,KAAK,EAAC,EAAE;gBAAA6B,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACrC1H,OAAA;gBAAQyF,KAAK,EAAC,MAAM;gBAAA6B,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClC1H,OAAA;gBAAQyF,KAAK,EAAC,OAAO;gBAAA6B,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC,EACRpE,MAAM,CAACkB,IAAI,iBAAIxE,OAAA;cAAMqH,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAC;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnF,CAAC,eAKN1H,OAAA;YAAKqH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACtBtH,OAAA;cAAKqH,SAAS,EAAC,OAAO;cAAAC,QAAA,eACtBtH,OAAA;gBAAOqH,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE7E,CAAC,eACN1H,OAAA;cAAA,GACQiD,QAAQ,CAAC,OAAO,EAAE;gBAAE0E,QAAQ,EAAE;cAAK,CAAC,CAAC;cACzCN,SAAS,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,EACDpE,MAAM,CAACoB,KAAK,iBAAI1E,OAAA;cAAMqH,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAC;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGL,CAAC,eAEN1H,OAAA;UAAKqH,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAG9BtH,OAAA;YAAKqH,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACxBtH,OAAA;cAAKqH,SAAS,EAAC,OAAO;cAAAC,QAAA,eACtBtH,OAAA;gBAAOqH,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEzE,CAAC,eACN1H,OAAA;cAAA,GACQiD,QAAQ,CAAC,aAAa,CAAC;cAC3B2E,IAAI,EAAE,CAAE;cACRP,SAAS,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL,CAAC,eAEN1H,OAAA;UAAKqH,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAE9BtH,OAAA;YAAKqH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACtBtH,OAAA;cAAKqH,SAAS,EAAC,OAAO;cAAAC,QAAA,eACtBtH,OAAA;gBAAOqH,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EAAC;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE9E,CAAC,EACLrG,mBAAmB,IAAIV,YAAY,gBAChCX,OAAA;cACIyF,KAAK,EAAE9E,YAAY,CAAC+D,KAAK,IAAI/D,YAAY,CAACkH,IAAI,IAAI,YAAa;cAC/DR,SAAS,EAAC,KAAK;cACfS,QAAQ;cACRC,KAAK,EAAE;gBAAEC,eAAe,EAAE,SAAS;gBAAEC,KAAK,EAAE;cAAU;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3D,CAAC,gBAEF1H,OAAA;cAAA,GACQiD,QAAQ,CAAC,YAAY,EAAE;gBAAE0E,QAAQ,EAAE;cAAK,CAAC,CAAC;cAC9CN,SAAS,EAAC,KAAK;cAAAC,QAAA,gBAEftH,OAAA;gBAAQyF,KAAK,EAAC,EAAE;gBAAA6B,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACpCjH,QAAQ,CAAC8F,GAAG,CAAEhE,IAAI,iBACfvC,OAAA;gBAAqCyF,KAAK,EAAElD,IAAI,CAACG,EAAE,IAAIH,IAAI,CAACjC,MAAO;gBAAAgH,QAAA,EAC9D/E,IAAI,CAACmC,KAAK,IAAInC,IAAI,CAACsF;cAAI,GADftF,IAAI,CAACG,EAAE,IAAIH,IAAI,CAACjC,MAAM;gBAAAiH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAE3B,CACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CACX,EACApE,MAAM,CAACuB,UAAU,iBAAI7E,OAAA;cAAMqH,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAC;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIL,CAAC,eAEN1H,OAAA;UAAKqH,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAE1BtH,OAAA;YAAKqH,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACjBtH,OAAA;cAAKqH,SAAS,EAAC,OAAO;cAAAC,QAAA,eACtBtH,OAAA;gBAAOqH,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxE,CAAC,eACN1H,OAAA,CAACF,eAAe;cACZ2F,KAAK,EAAE1E,SAAU;cACjBmH,QAAQ,EAAGC,IAAI,IAAK;gBAChBnH,YAAY,CAACmH,IAAI,CAAC;gBAClB;gBACA/E,QAAQ,CAAC,WAAW,EAAE+E,IAAI,EAAE;kBAAE9C,cAAc,EAAE;gBAAK,CAAC,CAAC;cACzD,CAAE;cACF9D,QAAQ,EAAEA,QAAS;cACnBO,iBAAiB,EAAEA,iBAAkB;cACrCC,gBAAgB,EAAEA,gBAAiB;cACnCF,cAAc,EAAEA,cAAe;cAC/BuG,WAAW,EAAC,mBAAmB;cAC/BT,QAAQ;cACRN,SAAS,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eAEF1H,OAAA;cACIwE,IAAI,EAAC,QAAQ;cAAA,GACTvB,QAAQ,CAAC,WAAW,EAAE;gBACtB0E,QAAQ,EAAE;cACd,CAAC,CAAC;cACFlC,KAAK,EAAE1E,SAAS,IAAI;YAAG;cAAAwG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC,EACDpE,MAAM,CAACvC,SAAS,iBAAIf,OAAA;cAAMqH,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAEhE,MAAM,CAACvC,SAAS,CAACqG;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5F,CAAC,eAEN1H,OAAA;YAAKqH,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACjBtH,OAAA;cAAKqH,SAAS,EAAC,OAAO;cAAAC,QAAA,eACtBtH,OAAA;gBAAOqH,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EAAC;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/E,CAAC,eACN1H,OAAA,CAACF,eAAe;cACZ2F,KAAK,EAAEtE,YAAa;cACpB+G,QAAQ,EAAGC,IAAI,IAAK;gBAChB/G,eAAe,CAAC+G,IAAI,CAAC;gBACrB;gBACA/E,QAAQ,CAAC,SAAS,EAAE+E,IAAI,EAAE;kBAAE9C,cAAc,EAAE;gBAAK,CAAC,CAAC;gBACnD;gBACA,IAAItE,SAAS,IAAIE,YAAY,IAAIkH,IAAI,EAAE;kBACnCvG,eAAe,CAACb,SAAS,EAAEqE,QAAQ,CAACnE,YAAY,CAAC,EAAEkH,IAAI,CAAC;gBAC5D;cACJ,CAAE;cACF5G,QAAQ,EAAEA,QAAS;cACnB8G,OAAO,EAAE7G,iBAAkB,CAAC;cAAA;cAC5BM,iBAAiB,EAAGqG,IAAI,IAAK;gBACzB;gBACA,IAAI3G,iBAAiB,IAAI,IAAI8G,IAAI,CAACH,IAAI,CAAC,GAAG,IAAIG,IAAI,CAAC9G,iBAAiB,CAAC,EAAE;kBACnE,OAAO,IAAI;gBACf;gBACA,OAAOM,iBAAiB,GAAGA,iBAAiB,CAACqG,IAAI,CAAC,GAAG,KAAK;cAC9D,CAAE;cACFpG,gBAAgB,EAAEA,gBAAiB;cACnCF,cAAc,EAAEA,cAAe;cAC/BuG,WAAW,EAAE5G,iBAAiB,GAAG,cAAcA,iBAAiB,EAAE,GAAG,iBAAkB;cACvF6F,SAAS,EAAC,KAAK;cACfU,KAAK,EAAE;gBACHC,eAAe,EAAExG,iBAAiB,IAAI,CAACL,YAAY,GAAG,SAAS,GAAG,OAAO;gBACzE8G,KAAK,EAAEzG,iBAAiB,IAAI,CAACL,YAAY,GAAG,SAAS,GAAG;cAC5D;YAAE;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAEF1H,OAAA;cACIwE,IAAI,EAAC,QAAQ;cAAA,GACTvB,QAAQ,CAAC,SAAS,CAAC;cACvBwC,KAAK,EAAEtE,YAAY,IAAI;YAAG;cAAAoG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,EAMDhG,iBAAiB,iBACd1B,OAAA;cAAKqH,SAAS,EAAC,2BAA2B;cAAAC,QAAA,EAAE5F;YAAiB;cAAA6F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACtE;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGT,CAAC,eAEN1H,OAAA;UAAKqH,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAE9BtH,OAAA;YAAKqH,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC5BtH,OAAA;cAAKqH,SAAS,EAAC,OAAO;cAAAC,QAAA,eAEtBtH,OAAA;gBAAOqH,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpE,CAAC,eACN1H,OAAA;cAAA,GACQiD,QAAQ,CAAC,QAAQ,EAAE;gBAAE0E,QAAQ,EAAE;cAAK,CAAC,CAAC;cAC1CN,SAAS,EAAC,KAAK;cAAAC,QAAA,gBAEftH,OAAA;gBAAQyF,KAAK,EAAC,EAAE;gBAAA6B,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACvC1H,OAAA;gBAAQyF,KAAK,EAAC,OAAO;gBAAA6B,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpC1H,OAAA;gBAAQyF,KAAK,EAAC,aAAa;gBAAA6B,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAChD1H,OAAA;gBAAQyF,KAAK,EAAC,MAAM;gBAAA6B,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC,EACRpE,MAAM,CAACyB,MAAM,iBAAI/E,OAAA;cAAMqH,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAC;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrF,CAAC,eAGN1H,OAAA;YAAKqH,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC5BtH,OAAA;cAAKqH,SAAS,EAAC,OAAO;cAAAC,QAAA,eACtBtH,OAAA;gBAAOqH,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEtE,CAAC,eACN1H,OAAA;cAAA,GACQiD,QAAQ,CAAC,UAAU,CAAC;cACxBoE,SAAS,EAAC,KAAK;cAAAC,QAAA,gBAEftH,OAAA;gBAAQyF,KAAK,EAAC,EAAE;gBAAA6B,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACzC1H,OAAA;gBAAQyF,KAAK,EAAC,MAAM;gBAAA6B,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClC1H,OAAA;gBAAQyF,KAAK,EAAC,QAAQ;gBAAA6B,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtC1H,OAAA;gBAAQyF,KAAK,EAAC,KAAK;gBAAA6B,QAAA,EAAC;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL,CAAC,eAEN1H,OAAA;UAAKqH,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAC9BtH,OAAA;YAAKqH,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC1BtH,OAAA;cAAKqH,SAAS,EAAC,OAAO;cAAAC,QAAA,eAEtBtH,OAAA;gBAAOqH,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EAAC;cAAwB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtF,CAAC,eACN1H,OAAA;cACIwE,IAAI,EAAC,QAAQ;cACb+D,IAAI,EAAC,KAAK;cACVC,GAAG,EAAC,GAAG;cAAA,GACHvF,QAAQ,CAAC,UAAU,EAAE;gBACrBiF,QAAQ,EAAExC,oBAAoB;gBAC9B8C,GAAG,EAAE;kBAAE/C,KAAK,EAAE,CAAC;kBAAE2B,OAAO,EAAE;gBAA4B;cAC1D,CAAC,CAAC;cACFC,SAAS,EAAC,KAAK;cACfe,WAAW,EAAC;YAAwB;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC,EACDpE,MAAM,CAAC2B,QAAQ,iBAAIjF,OAAA;cAAMqH,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAEhE,MAAM,CAAC2B,QAAQ,CAACmC;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1F,CAAC,eAEN1H,OAAA;YAAKqH,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC1BtH,OAAA;cAAKqH,SAAS,EAAC,OAAO;cAAAC,QAAA,eACtBtH,OAAA;gBAAOqH,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEtE,CAAC,eACN1H,OAAA;cAAA,GACQiD,QAAQ,CAAC,UAAU,CAAC;cACxBoE,SAAS,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL,CAAC,eAEN1H,OAAA;UAAKqH,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAE9BtH,OAAA;YAAKqH,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACjCtH,OAAA;cAAKqH,SAAS,EAAC,OAAO;cAAAC,QAAA,eACtBtH,OAAA;gBAAOqH,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEpE,CAAC,eACN1H,OAAA;cAAA,GACQiD,QAAQ,CAAC,QAAQ,CAAC;cACtBoE,SAAS,EAAC,KAAK;cACfe,WAAW,EAAC;YAAkB;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN1H,OAAA;UAAKqH,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAC9BtH,OAAA;YACIwE,IAAI,EAAC,QAAQ;YACb6C,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAEjB/G,IAAI,GAAG,aAAa,GAAG;UAAa;YAAAgH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxH,EAAA,CAjjBID,QAAQ;EAAA,QACOT,WAAW,EACXD,WAAW,EACTE,SAAS,EAwBxBI,kBAAkB,EA2DlBH,OAAO;AAAA;AAAA+I,EAAA,GAtFTxI,QAAQ;AAmjBd,eAAeA,QAAQ;AAAC,IAAAwI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}