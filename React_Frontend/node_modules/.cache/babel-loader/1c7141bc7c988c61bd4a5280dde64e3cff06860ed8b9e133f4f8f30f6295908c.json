{"ast":null,"code":"import _objectSpread from\"/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useLocation,useNavigate}from\"react-router-dom\";import{useForm}from\"react-hook-form\";import{useEffect,useState}from\"react\";import useDateCalculation from\"../hooks/useDateCalculation\";import HolidayCalendar from\"../components/HolidayCalendar\";import\"./TaskForm.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskForm=()=>{var _location$state;const navigate=useNavigate();const location=useLocation();const task=(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.task;// get task if passed\nconst[allTasks,setAllTasks]=useState([]);const[startDate,setStartDate]=useState('');const[estimateDays,setEstimateDays]=useState('');const[endDateValue,setEndDateValue]=useState('');// Use the date calculation hook\nconst{holidays,calculatedEndDate,isCalculating,validationMessage,calculateEndDate,validateEndDate,getHolidayInfo,shouldDisableDate,getDateClassName}=useDateCalculation();// Fetch all tasks for parent task dropdown (API integration spot)\nuseEffect(()=>{// Fetch all tasks for parent task dropdown from backend\nconst fetchTasks=async()=>{try{const response=await fetch(\"/tasks\");if(!response.ok)throw new Error(\"Failed to fetch tasks\");const tasks=await response.json();setAllTasks(tasks);}catch(error){setAllTasks([]);}};fetchTasks();},[]);const{register,handleSubmit,reset,formState:{errors}}=useForm();// Helper function to extract days from originalEstimate\nconst extractDaysFromEstimate=originalEstimate=>{if(!originalEstimate)return\"\";// If it's a string, check for different formats\nif(typeof originalEstimate==='string'){// Handle P{days}D format\nif(originalEstimate.startsWith('P')&&originalEstimate.endsWith('D')){return originalEstimate.substring(1,originalEstimate.length-1);}// Handle PT{hours}H format (convert to days)\nif(originalEstimate.startsWith('PT')&&originalEstimate.endsWith('H')){const hours=parseFloat(originalEstimate.substring(2,originalEstimate.length-1));return(hours/8).toString();// Convert hours to days (8 hours per day)\n}}// If it's an object with duration properties, try to extract days\nif(typeof originalEstimate==='object'){// Handle Java Duration object structure\nif(originalEstimate.seconds!==undefined){const hours=originalEstimate.seconds/3600;// Convert seconds to hours\nreturn(hours/8).toString();// Convert hours to days\n}}return originalEstimate.toString();};// Prefill form if editing\nuseEffect(()=>{if(task){const startDateVal=task.start_date||task.startDate||\"\";const endDateVal=task.due_date||task.dueDate||\"\";const estimateVal=extractDaysFromEstimate(task.originalEstimate);setStartDate(startDateVal);setEndDateValue(endDateVal);setEstimateDays(estimateVal);reset({type:task.type?task.type.toLowerCase():\"\",title:task.title||\"\",description:task.task_description||\"\",epicName:task.epicName||\"\",startDate:startDateVal,endDate:endDateVal,status:task.status||\"\",priority:task.priority||\"\",estimate:estimateVal,assignee:task.assignee||\"\",labels:task.labels||\"\",sprint:task.sprint||\"\",parentTask:task.parentTask||\"\"});}},[task,reset]);// Auto-calculate end date when start date or estimate changes\nuseEffect(()=>{if(startDate&&estimateDays&&estimateDays>0){calculateEndDate(startDate,parseInt(estimateDays));}},[startDate,estimateDays,calculateEndDate]);// Handle start date change\nconst handleStartDateChange=e=>{const newStartDate=e.target.value;setStartDate(newStartDate);};// Handle estimate days change\nconst handleEstimateChange=e=>{const newEstimate=e.target.value;setEstimateDays(newEstimate);};// Handle end date change and validation\nconst handleEndDateChange=async e=>{const newEndDate=e.target.value;setEndDateValue(newEndDate);// Validate the selected end date\nif(startDate&&estimateDays&&newEndDate){await validateEndDate(startDate,parseInt(estimateDays),newEndDate);}};// Handles form submission\nconst onSubmit=async data=>{// Log the submitted form data for debugging\nconsole.log(\"Form submitted with data:\",data);// Check if start date is provided, alert if missing\nif(!data.startDate){alert(\"Start date is required\");return;}// Prepare the payload object to match backend API expectations\nconst payload={type:data.type,// Task type (task, epic, etc.)\ntitle:data.title,// Task title\ndescription:data.description||null,// Task description or null\nstartDate:data.startDate,// Start date\ndueDate:data.endDate||null,// End date or null\nstatus:data.status,// Task status\npriority:data.priority,// Task priority\n// Convert estimate to PostgreSQL INTERVAL format if provided (days instead of hours)\noriginalEstimate:data.estimate?\"P\".concat(data.estimate,\"D\"):null,// These fields are set to null for now (require UUIDs)\nassigneeId:null,epicId:null,sprintId:null,parentTaskId:null,// Split labels by comma, trim whitespace, filter out empty strings\nlabels:data.labels?data.labels.split(',').map(l=>l.trim()).filter(l=>l.length>0):null};// Log the payload for debugging\nconsole.log(\"Sending payload:\",payload);try{if(task){// If editing, update the existing task\nconsole.log(\"Updating task:\",task.taskId||task.id);const response=await fetch(\"/tasks/\".concat(task.taskId||task.id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});// If response is not OK, throw error with response text\nif(!response.ok){const errorText=await response.text();throw new Error(\"Failed to update task: \".concat(errorText));}// Log success\nconsole.log(\"Task updated successfully\");}else{// If creating, send POST request to create new task\nconsole.log(\"Creating new task\");const response=await fetch(\"/tasks\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});// If response is not OK, throw error with response text\nif(!response.ok){const errorText=await response.text();throw new Error(\"Failed to create task: \".concat(errorText));}// Parse and log the created task result\nconst result=await response.json();console.log(\"Task created successfully:\",result);}// Navigate to the view-tasks page after success\nnavigate(\"/view-tasks\");}catch(error){// Log and alert any errors that occur during save\nconsole.error(\"Error saving task:\",error);alert(\"Failed to save task: \".concat(error.message));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:task?\"Edit Task\":\"+Create Task\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-subcontainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"type-name\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Type\"})}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({},register(\"type\",{required:true})),{},{className:\"box\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select type\"}),/*#__PURE__*/_jsx(\"option\",{value:\"task\",children:\"Task\"}),/*#__PURE__*/_jsx(\"option\",{value:\"epic\",children:\"Epic\"}),/*#__PURE__*/_jsx(\"option\",{value:\"story\",children:\"Story\"}),/*#__PURE__*/_jsx(\"option\",{value:\"sub_task\",children:\"Sub Task\"})]})),errors.type&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 text-sm\",children:\"This field is required\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"type-name\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Task Name/Title\"})}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"title\",{required:true})),{},{className:\"box\"})),errors.title&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 text-sm\",children:\"This field is required\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-subcontainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"description\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Description\"})}),/*#__PURE__*/_jsx(\"textarea\",_objectSpread(_objectSpread({},register(\"description\")),{},{rows:3,className:\"box\"}))]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-subcontainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"epic-name\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Linked Epic Name\"})}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"epicName\")),{},{className:\"box\"}))]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-subcontainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"date\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Start Date\"})}),/*#__PURE__*/_jsx(HolidayCalendar,{value:startDate,onChange:date=>{setStartDate(date);// Update the form field as well\nconst event={target:{value:date}};register(\"startDate\").onChange(event);},holidays:holidays,shouldDisableDate:shouldDisableDate,getDateClassName:getDateClassName,getHolidayInfo:getHolidayInfo,placeholder:\"Select start date\",required:true,className:\"box\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:\"hidden\"},register(\"startDate\",{required:\"Start date is required\"})),{},{value:startDate||''})),errors.startDate&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 text-sm\",children:errors.startDate.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"End Date/Due Date\"})}),/*#__PURE__*/_jsx(HolidayCalendar,{value:endDateValue,onChange:date=>{setEndDateValue(date);// Update the form field as well\nconst event={target:{value:date}};register(\"endDate\").onChange(event);// Validate the selected end date\nif(startDate&&estimateDays&&date){validateEndDate(startDate,parseInt(estimateDays),date);}},holidays:holidays,minDate:calculatedEndDate// Restrict to calculated date or later\n,shouldDisableDate:date=>{// Disable if before calculated end date\nif(calculatedEndDate&&new Date(date)<new Date(calculatedEndDate)){return true;}return shouldDisableDate?shouldDisableDate(date):false;},getDateClassName:getDateClassName,getHolidayInfo:getHolidayInfo,placeholder:calculatedEndDate?\"Suggested: \".concat(calculatedEndDate):\"Select end date\",className:\"box\",style:{backgroundColor:calculatedEndDate&&!endDateValue?'#f3f4f6':'white',color:calculatedEndDate&&!endDateValue?'#6b7280':'black'}}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:\"hidden\"},register(\"endDate\")),{},{value:endDateValue||''})),calculatedEndDate&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 mt-1\",children:isCalculating?'Calculating...':\"Suggested end date: \".concat(calculatedEndDate)}),validationMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-red-500 mt-1\",children:validationMessage})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-subcontainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-priority\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Status\"})}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({},register(\"status\",{required:true})),{},{className:\"box\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"To Do\",children:\"To Do\"}),/*#__PURE__*/_jsx(\"option\",{value:\"In Progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Done\",children:\"Done\"})]})),errors.status&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 text-sm\",children:\"This field is required\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-priority\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Priority\"})}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({},register(\"priority\")),{},{className:\"box\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select priority\"}),/*#__PURE__*/_jsx(\"option\",{value:\"High\",children:\"High\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Low\",children:\"Low\"})]}))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-subcontainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"time-assignee\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Original Estimate (days)\"})}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:\"number\",step:\"0.5\",min:\"0\"},register(\"estimate\",{onChange:handleEstimateChange,min:{value:0,message:\"Estimate must be positive\"}})),{},{className:\"box\",placeholder:\"Enter days (e.g., 1.5)\"})),errors.estimate&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 text-sm\",children:errors.estimate.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"time-assignee\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Assignee\"})}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"assignee\")),{},{className:\"box\"}))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-subcontainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"labels-sprint-parent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Labels\"})}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"labels\")),{},{className:\"box\",placeholder:\"tag1, tag2, tag3\"}))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"labels-sprint-parent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Sprint\"})}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"sprint\")),{},{className:\"box\"}))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"labels-sprint-parent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Parent Task\"})}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({},register(\"parentTask\")),{},{className:\"box\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select parent task\"}),allTasks.map(t=>/*#__PURE__*/_jsx(\"option\",{value:t.title,children:t.title}))]}))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-subcontainer\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button\",children:task?\"Update Task\":\"Create Task\"})})]})})]});};export default TaskForm;","map":{"version":3,"names":["useLocation","useNavigate","useForm","useEffect","useState","useDateCalculation","HolidayCalendar","jsx","_jsx","jsxs","_jsxs","TaskForm","_location$state","navigate","location","task","state","allTasks","setAllTasks","startDate","setStartDate","estimateDays","setEstimateDays","endDateValue","setEndDateValue","holidays","calculatedEndDate","isCalculating","validationMessage","calculateEndDate","validateEndDate","getHolidayInfo","shouldDisableDate","getDateClassName","fetchTasks","response","fetch","ok","Error","tasks","json","error","register","handleSubmit","reset","formState","errors","extractDaysFromEstimate","originalEstimate","startsWith","endsWith","substring","length","hours","parseFloat","toString","seconds","undefined","startDateVal","start_date","endDateVal","due_date","dueDate","estimateVal","type","toLowerCase","title","description","task_description","epicName","endDate","status","priority","estimate","assignee","labels","sprint","parentTask","parseInt","handleStartDateChange","e","newStartDate","target","value","handleEstimateChange","newEstimate","handleEndDateChange","newEndDate","onSubmit","data","console","log","alert","payload","concat","assigneeId","epicId","sprintId","parentTaskId","split","map","l","trim","filter","taskId","id","method","headers","body","JSON","stringify","errorText","text","result","message","className","children","_objectSpread","required","rows","onChange","date","event","placeholder","minDate","Date","style","backgroundColor","color","step","min","t"],"sources":["/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/modules/TaskForm.js"],"sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nimport useDateCalculation from \"../hooks/useDateCalculation\";\nimport HolidayCalendar from \"../components/HolidayCalendar\";\nimport \"./TaskForm.css\"\n\nconst TaskForm = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const task = location.state?.task; // get task if passed\n\n    const [allTasks, setAllTasks] = useState([]);\n    const [startDate, setStartDate] = useState('');\n    const [estimateDays, setEstimateDays] = useState('');\n    const [endDateValue, setEndDateValue] = useState('');\n\n    // Use the date calculation hook\n    const {\n        holidays,\n        calculatedEndDate,\n        isCalculating,\n        validationMessage,\n        calculateEndDate,\n        validateEndDate,\n        getHolidayInfo,\n        shouldDisableDate,\n        getDateClassName\n    } = useDateCalculation();\n\n    // Fetch all tasks for parent task dropdown (API integration spot)\n    useEffect(() => {\n        // Fetch all tasks for parent task dropdown from backend\n        const fetchTasks = async () => {\n            try {\n                const response = await fetch(\"/tasks\");\n                if (!response.ok) throw new Error(\"Failed to fetch tasks\");\n                const tasks = await response.json();\n                setAllTasks(tasks);\n            } catch (error) {\n                setAllTasks([]);\n            }\n        };\n        fetchTasks();\n    }, []);\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors },\n    } = useForm();\n\n    // Helper function to extract days from originalEstimate\n    const extractDaysFromEstimate = (originalEstimate) => {\n        if (!originalEstimate) return \"\";\n        \n        // If it's a string, check for different formats\n        if (typeof originalEstimate === 'string') {\n            // Handle P{days}D format\n            if (originalEstimate.startsWith('P') && originalEstimate.endsWith('D')) {\n                return originalEstimate.substring(1, originalEstimate.length - 1);\n            }\n            // Handle PT{hours}H format (convert to days)\n            if (originalEstimate.startsWith('PT') && originalEstimate.endsWith('H')) {\n                const hours = parseFloat(originalEstimate.substring(2, originalEstimate.length - 1));\n                return (hours / 8).toString(); // Convert hours to days (8 hours per day)\n            }\n        }\n        \n        // If it's an object with duration properties, try to extract days\n        if (typeof originalEstimate === 'object') {\n            // Handle Java Duration object structure\n            if (originalEstimate.seconds !== undefined) {\n                const hours = originalEstimate.seconds / 3600; // Convert seconds to hours\n                return (hours / 8).toString(); // Convert hours to days\n            }\n        }\n        \n        return originalEstimate.toString();\n    };\n\n    // Prefill form if editing\n    useEffect(() => {\n        if (task) {\n            const startDateVal = task.start_date || task.startDate || \"\";\n            const endDateVal = task.due_date || task.dueDate || \"\";\n            const estimateVal = extractDaysFromEstimate(task.originalEstimate);\n            \n            setStartDate(startDateVal);\n            setEndDateValue(endDateVal);\n            setEstimateDays(estimateVal);\n            \n            reset({\n                type: task.type ? task.type.toLowerCase() : \"\",\n                title: task.title || \"\",\n                description: task.task_description || \"\",\n                epicName: task.epicName || \"\",\n                startDate: startDateVal,\n                endDate: endDateVal,\n                status: task.status || \"\",\n                priority: task.priority || \"\",\n                estimate: estimateVal,\n                assignee: task.assignee || \"\",\n                labels: task.labels || \"\",\n                sprint: task.sprint || \"\",\n                parentTask: task.parentTask || \"\",\n            });\n        }\n    }, [task, reset]);\n\n    // Auto-calculate end date when start date or estimate changes\n    useEffect(() => {\n        if (startDate && estimateDays && estimateDays > 0) {\n            calculateEndDate(startDate, parseInt(estimateDays));\n        }\n    }, [startDate, estimateDays, calculateEndDate]);\n\n    // Handle start date change\n    const handleStartDateChange = (e) => {\n        const newStartDate = e.target.value;\n        setStartDate(newStartDate);\n    };\n\n    // Handle estimate days change\n    const handleEstimateChange = (e) => {\n        const newEstimate = e.target.value;\n        setEstimateDays(newEstimate);\n    };\n\n    // Handle end date change and validation\n    const handleEndDateChange = async (e) => {\n        const newEndDate = e.target.value;\n        setEndDateValue(newEndDate);\n\n        // Validate the selected end date\n        if (startDate && estimateDays && newEndDate) {\n            await validateEndDate(startDate, parseInt(estimateDays), newEndDate);\n        }\n    };\n\n    // Handles form submission\n    const onSubmit = async (data) => {\n        // Log the submitted form data for debugging\n        console.log(\"Form submitted with data:\", data);\n        \n        // Check if start date is provided, alert if missing\n        if (!data.startDate) {\n            alert(\"Start date is required\");\n            return;\n        }\n\n        // Prepare the payload object to match backend API expectations\n        const payload = {\n            type: data.type, // Task type (task, epic, etc.)\n            title: data.title, // Task title\n            description: data.description || null, // Task description or null\n            startDate: data.startDate, // Start date\n            dueDate: data.endDate || null, // End date or null\n            status: data.status, // Task status\n            priority: data.priority, // Task priority\n            // Convert estimate to PostgreSQL INTERVAL format if provided (days instead of hours)\n            originalEstimate: data.estimate ? `P${data.estimate}D` : null,\n            // These fields are set to null for now (require UUIDs)\n            assigneeId: null,\n            epicId: null,\n            sprintId: null,\n            parentTaskId: null,\n            // Split labels by comma, trim whitespace, filter out empty strings\n            labels: data.labels ? data.labels.split(',').map(l => l.trim()).filter(l => l.length > 0) : null\n        };\n\n        // Log the payload for debugging\n        console.log(\"Sending payload:\", payload);\n\n        try {\n            if (task) {\n                // If editing, update the existing task\n                console.log(\"Updating task:\", task.taskId || task.id);\n                const response = await fetch(`/tasks/${task.taskId || task.id}`, {\n                    method: \"PUT\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(payload)\n                });\n                // If response is not OK, throw error with response text\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Failed to update task: ${errorText}`);\n                }\n                // Log success\n                console.log(\"Task updated successfully\");\n            } else {\n                // If creating, send POST request to create new task\n                console.log(\"Creating new task\");\n                const response = await fetch(\"/tasks\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(payload)\n                });\n                // If response is not OK, throw error with response text\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Failed to create task: ${errorText}`);\n                }\n                // Parse and log the created task result\n                const result = await response.json();\n                console.log(\"Task created successfully:\", result);\n            }\n            // Navigate to the view-tasks page after success\n            navigate(\"/view-tasks\");\n        } catch (error) {\n            // Log and alert any errors that occur during save\n            console.error(\"Error saving task:\", error);\n            alert(`Failed to save task: ${error.message}`);\n        }\n    };\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-header\">\n                <h1>{task ? \"Edit Task\" : \"+Create Task\"}</h1>\n            </div>\n            <div className=\"form-container\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-subcontainer\">\n                        <div className=\"type-name\">\n\n                            {/*type*/}\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Type</label>\n\n                            </div>\n                            <select\n                                {...register(\"type\", { required: true })}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select type</option>\n                                <option value=\"task\">Task</option>\n                                <option value=\"epic\">Epic</option>\n                                <option value=\"story\">Story</option>\n                                <option value=\"sub_task\">Sub Task</option>\n                            </select>\n                            {errors.type && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n\n\n\n                        <div className=\"type-name\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Task Name/Title</label>\n\n                            </div>\n                            <input\n                                {...register(\"title\", { required: true })}\n                                className=\"box\"\n                            />\n                            {errors.title && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n\n                        {/* Task Description */}\n                        <div className=\"description\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n\n                            </div>\n                            <textarea\n                                {...register(\"description\")}\n                                rows={3}\n                                className=\"box\"\n                            />\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Linked Epic Name */}\n                        <div className=\"epic-name\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Linked Epic Name</label>\n\n                            </div>\n                            <input\n                                {...register(\"epicName\")}\n                                className=\"box\"\n                            />\n                        </div>\n\n\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        \n                            <div className=\"date\">\n                                <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Start Date</label>\n                                </div>\n                                <HolidayCalendar\n                                    value={startDate}\n                                    onChange={(date) => {\n                                        setStartDate(date);\n                                        // Update the form field as well\n                                        const event = { target: { value: date } };\n                                        register(\"startDate\").onChange(event);\n                                    }}\n                                    holidays={holidays}\n                                    shouldDisableDate={shouldDisableDate}\n                                    getDateClassName={getDateClassName}\n                                    getHolidayInfo={getHolidayInfo}\n                                    placeholder=\"Select start date\"\n                                    required\n                                    className=\"box\"\n                                />\n                                {/* Hidden input for form validation */}\n                                <input\n                                    type=\"hidden\"\n                                    {...register(\"startDate\", { \n                                        required: \"Start date is required\"\n                                    })}\n                                    value={startDate || ''}\n                                />\n                                {errors.startDate && <span className=\"text-red-500 text-sm\">{errors.startDate.message}</span>}\n                            </div>\n\n                            <div className=\"date\">\n                                <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">End Date/Due Date</label>\n                                </div>\n                                <HolidayCalendar\n                                    value={endDateValue}\n                                    onChange={(date) => {\n                                        setEndDateValue(date);\n                                        // Update the form field as well\n                                        const event = { target: { value: date } };\n                                        register(\"endDate\").onChange(event);\n                                        // Validate the selected end date\n                                        if (startDate && estimateDays && date) {\n                                            validateEndDate(startDate, parseInt(estimateDays), date);\n                                        }\n                                    }}\n                                    holidays={holidays}\n                                    minDate={calculatedEndDate} // Restrict to calculated date or later\n                                    shouldDisableDate={(date) => {\n                                        // Disable if before calculated end date\n                                        if (calculatedEndDate && new Date(date) < new Date(calculatedEndDate)) {\n                                            return true;\n                                        }\n                                        return shouldDisableDate ? shouldDisableDate(date) : false;\n                                    }}\n                                    getDateClassName={getDateClassName}\n                                    getHolidayInfo={getHolidayInfo}\n                                    placeholder={calculatedEndDate ? `Suggested: ${calculatedEndDate}` : \"Select end date\"}\n                                    className=\"box\"\n                                    style={{\n                                        backgroundColor: calculatedEndDate && !endDateValue ? '#f3f4f6' : 'white',\n                                        color: calculatedEndDate && !endDateValue ? '#6b7280' : 'black'\n                                    }}\n                                />\n                                {/* Hidden input for form validation */}\n                                <input\n                                    type=\"hidden\"\n                                    {...register(\"endDate\")}\n                                    value={endDateValue || ''}\n                                />\n                                {calculatedEndDate && (\n                                    <div className=\"text-sm text-gray-600 mt-1\">\n                                        {isCalculating ? 'Calculating...' : `Suggested end date: ${calculatedEndDate}`}\n                                    </div>\n                                )}\n                                {validationMessage && (\n                                    <div className=\"text-sm text-red-500 mt-1\">{validationMessage}</div>\n                                )}\n                            </div>\n                        \n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Status */}\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n\n                            <label className=\"block text-sm font-medium text-gray-700\">Status</label>\n                            </div>\n                            <select\n                                {...register(\"status\", { required: true })}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select status</option>\n                                <option value=\"To Do\">To Do</option>\n                                <option value=\"In Progress\">In Progress</option>\n                                <option value=\"Done\">Done</option>\n                            </select>\n                            {errors.status && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n                        {/* Priority */}\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Priority</label>\n\n                            </div>\n                            <select\n                                {...register(\"priority\")}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select priority</option>\n                                <option value=\"High\">High</option>\n                                <option value=\"Medium\">Medium</option>\n                                <option value=\"Low\">Low</option>\n                            </select>\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n\n                            <label className=\"block text-sm font-medium text-gray-700\">Original Estimate (days)</label>\n                            </div>\n                            <input\n                                type=\"number\"\n                                step=\"0.5\"\n                                min=\"0\"\n                                {...register(\"estimate\", { \n                                    onChange: handleEstimateChange,\n                                    min: { value: 0, message: \"Estimate must be positive\" }\n                                })}\n                                className=\"box\"\n                                placeholder=\"Enter days (e.g., 1.5)\"\n                            />\n                            {errors.estimate && <span className=\"text-red-500 text-sm\">{errors.estimate.message}</span>}\n                        </div>\n                        {/* Assignee */}\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Assignee</label>\n\n                            </div>\n                            <input\n                                {...register(\"assignee\")}\n                                className=\"box\"\n                            />\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Labels/Tags */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Labels</label>\n\n                            </div>\n                            <input\n                                {...register(\"labels\")}\n                                className=\"box\"\n                                placeholder=\"tag1, tag2, tag3\"\n                            />\n                        </div>\n\n                        {/* Sprint */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Sprint</label>\n\n                            </div>\n                            <input\n                                {...register(\"sprint\")}\n                                className=\"box\"\n                            />\n                        </div>\n\n                        {/* Parent Task */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Parent Task</label>\n\n                            </div>\n                            <select\n                                {...register(\"parentTask\")}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select parent task</option>\n                                {allTasks.map((t) => (\n                                    <option  value={t.title}>\n                                        {t.title}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <button\n                            type=\"submit\"\n                            className=\"button\"\n                        >\n                            {task ? \"Update Task\" : \"Create Task\"}\n                        </button>\n                    </div>\n\n                </form>\n                \n\n            </div>\n        </div>\n    );\n};\n\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}