{"ast":null,"code":"import React,{useState,useEffect}from'react';import EpicRow from'./EpicRow';import'./HierarchicalTaskTable.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HierarchicalTaskTable=_ref=>{let{tasks,onDeleteTask,refreshTrigger}=_ref;const[epics,setEpics]=useState([]);const[expandedEpics,setExpandedEpics]=useState(new Set());const[loading,setLoading]=useState(true);useEffect(()=>{fetchEpics();},[refreshTrigger]);// Add refreshTrigger as dependency\nconst fetchEpics=async()=>{try{setLoading(true);console.log(\"Fetching epics for hierarchical view...\");// Fetch both epic tasks (from tasks table) and real epics\nconst[epicTasksResponse,epicsResponse]=await Promise.all([fetch('/tasks/epics'),fetch('/epics/top-level')]);if(!epicTasksResponse.ok||!epicsResponse.ok){throw new Error('Failed to fetch epics');}const epicTasks=await epicTasksResponse.json();const realEpics=await epicsResponse.json();console.log(\"Epic tasks:\",epicTasks);console.log(\"Real epics:\",realEpics);// Combine both types and use epic tasks if they exist, otherwise use real epics\nconst allEpics=epicTasks.length>0?epicTasks:realEpics;setEpics(allEpics);}catch(error){console.error('Error fetching epics:',error);setEpics([]);}finally{setLoading(false);}};const handleTaskDelete=taskOrEpic=>{// Just call the parent's delete handler - the parent will handle the actual deletion\n// and trigger a refresh via the refreshTrigger prop\nonDeleteTask(taskOrEpic);};const toggleEpicExpansion=epicId=>{const newExpanded=new Set(expandedEpics);if(newExpanded.has(epicId)){newExpanded.delete(epicId);}else{newExpanded.add(epicId);}setExpandedEpics(newExpanded);};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"hierarchical-loading\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading hierarchical view...\"})});}if(epics.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"hierarchical-empty\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No epics found. Create an epic to organize your tasks hierarchically.\"})});}return/*#__PURE__*/_jsx(\"div\",{className:\"hierarchical-task-table\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"modern-task-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"expand-column\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Priority\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Assignee\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Start Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Due Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:epics.map(epic=>/*#__PURE__*/_jsx(EpicRow,{epic:epic,isExpanded:expandedEpics.has(epic.id||epic.epicId||epic.taskId),onToggleExpand:toggleEpicExpansion,onDeleteTask:handleTaskDelete,refreshTrigger:refreshTrigger},epic.id||epic.epicId||epic.taskId))})]})});};export default HierarchicalTaskTable;","map":{"version":3,"names":["React","useState","useEffect","EpicRow","jsx","_jsx","jsxs","_jsxs","HierarchicalTaskTable","_ref","tasks","onDeleteTask","refreshTrigger","epics","setEpics","expandedEpics","setExpandedEpics","Set","loading","setLoading","fetchEpics","console","log","epicTasksResponse","epicsResponse","Promise","all","fetch","ok","Error","epicTasks","json","realEpics","allEpics","length","error","handleTaskDelete","taskOrEpic","toggleEpicExpansion","epicId","newExpanded","has","delete","add","className","children","map","epic","isExpanded","id","taskId","onToggleExpand"],"sources":["/home/abd_faiyaz/ontik_project_1/React_Frontend/src/components/HierarchicalTaskTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EpicRow from './EpicRow';\nimport './HierarchicalTaskTable.css';\n\nconst HierarchicalTaskTable = ({ tasks, onDeleteTask, refreshTrigger }) => {\n  const [epics, setEpics] = useState([]);\n  const [expandedEpics, setExpandedEpics] = useState(new Set());\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchEpics();\n  }, [refreshTrigger]); // Add refreshTrigger as dependency\n\n  const fetchEpics = async () => {\n    try {\n      setLoading(true);\n      console.log(\"Fetching epics for hierarchical view...\");\n      \n      // Fetch both epic tasks (from tasks table) and real epics\n      const [epicTasksResponse, epicsResponse] = await Promise.all([\n        fetch('/tasks/epics'),\n        fetch('/epics/top-level')\n      ]);\n\n      if (!epicTasksResponse.ok || !epicsResponse.ok) {\n        throw new Error('Failed to fetch epics');\n      }\n\n      const epicTasks = await epicTasksResponse.json();\n      const realEpics = await epicsResponse.json();\n\n      console.log(\"Epic tasks:\", epicTasks);\n      console.log(\"Real epics:\", realEpics);\n\n      // Combine both types and use epic tasks if they exist, otherwise use real epics\n      const allEpics = epicTasks.length > 0 ? epicTasks : realEpics;\n      setEpics(allEpics);\n    } catch (error) {\n      console.error('Error fetching epics:', error);\n      setEpics([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTaskDelete = (taskOrEpic) => {\n    // Just call the parent's delete handler - the parent will handle the actual deletion\n    // and trigger a refresh via the refreshTrigger prop\n    onDeleteTask(taskOrEpic);\n  };\n\n  const toggleEpicExpansion = (epicId) => {\n    const newExpanded = new Set(expandedEpics);\n    if (newExpanded.has(epicId)) {\n      newExpanded.delete(epicId);\n    } else {\n      newExpanded.add(epicId);\n    }\n    setExpandedEpics(newExpanded);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"hierarchical-loading\">\n        <p>Loading hierarchical view...</p>\n      </div>\n    );\n  }\n\n  if (epics.length === 0) {\n    return (\n      <div className=\"hierarchical-empty\">\n        <p>No epics found. Create an epic to organize your tasks hierarchically.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"hierarchical-task-table\">\n      <table className=\"modern-task-table\">\n        <thead>\n          <tr>\n            <th className=\"expand-column\"></th>\n            <th>Title</th>\n            <th>Type</th>\n            <th>Status</th>\n            <th>Priority</th>\n            <th>Assignee</th>\n            <th>Start Date</th>\n            <th>Due Date</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {epics.map((epic) => (\n            <EpicRow\n              key={epic.id || epic.epicId || epic.taskId}\n              epic={epic}\n              isExpanded={expandedEpics.has(epic.id || epic.epicId || epic.taskId)}\n              onToggleExpand={toggleEpicExpansion}\n              onDeleteTask={handleTaskDelete}\n              refreshTrigger={refreshTrigger}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default HierarchicalTaskTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}