{"ast":null,"code":"var _jsxFileName = \"/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/modules/TaskForm.js\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nimport useDateCalculation from \"../hooks/useDateCalculation\";\nimport HolidayCalendar from \"../components/HolidayCalendar\";\nimport \"./TaskForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const task = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.task; // get task if passed\n  const parentId = searchParams.get('parentId'); // Get parent ID from URL\n\n  const [allTasks, setAllTasks] = useState([]);\n  const [validParentTasks, setValidParentTasks] = useState([]);\n  const [selectedTaskType, setSelectedTaskType] = useState('task');\n  const [parentTask, setParentTask] = useState(null);\n  const [startDate, setStartDate] = useState('');\n  const [estimateDays, setEstimateDays] = useState('');\n  const [endDateValue, setEndDateValue] = useState('');\n\n  // Use the date calculation hook\n  const {\n    holidays,\n    calculatedEndDate,\n    isCalculating,\n    validationMessage,\n    calculateEndDate,\n    validateEndDate,\n    getHolidayInfo,\n    shouldDisableDate,\n    getDateClassName\n  } = useDateCalculation();\n\n  // Initialize useForm hook first\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  // Helper function to determine child task type based on parent type\n  const getChildTaskType = parentType => {\n    switch (parentType === null || parentType === void 0 ? void 0 : parentType.toLowerCase()) {\n      case 'epic':\n        return 'story';\n      // Default to story for epic children\n      case 'story':\n      case 'task':\n        return 'sub_task';\n      default:\n        return 'task';\n    }\n  };\n\n  // Validate hierarchy relationship\n  const isValidHierarchy = (taskType, parentType) => {\n    if (!parentType) return taskType === 'epic'; // Only epics can have no parent\n\n    switch (taskType === null || taskType === void 0 ? void 0 : taskType.toLowerCase()) {\n      case 'epic':\n        return false;\n      // Epics cannot have parents\n      case 'story':\n      case 'task':\n        return (parentType === null || parentType === void 0 ? void 0 : parentType.toLowerCase()) === 'epic';\n      case 'sub_task':\n        return ['story', 'task'].includes(parentType === null || parentType === void 0 ? void 0 : parentType.toLowerCase());\n      default:\n        return false;\n    }\n  };\n\n  // Handle task type change\n  const handleTaskTypeChange = e => {\n    const newType = e.target.value;\n    setSelectedTaskType(newType);\n    setValue('type', newType);\n\n    // Clear parent task if not compatible\n    if (parentTask && !isValidHierarchy(newType, parentTask.type)) {\n      setParentTask(null);\n      setValue('parentTask', '');\n    }\n  };\n\n  // Fetch all tasks for parent task dropdown and handle parent ID from URL\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(\"/tasks\");\n        if (!response.ok) throw new Error(\"Failed to fetch tasks\");\n        const tasks = await response.json();\n        setAllTasks(tasks);\n\n        // If parentId is in URL, find and set the parent task\n        if (parentId) {\n          const parent = tasks.find(t => (t.id || t.taskId) === parentId);\n          if (parent) {\n            setParentTask(parent);\n            // Determine appropriate task type based on parent\n            const taskType = getChildTaskType(parent.type);\n            setSelectedTaskType(taskType);\n            setValue('type', taskType);\n            setValue('parentTask', parent.taskId || parent.id);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n        setAllTasks([]);\n      }\n    };\n    fetchTasks();\n  }, [parentId, setValue]);\n\n  // Fetch valid parent tasks when task type changes\n  useEffect(() => {\n    const fetchValidParents = async () => {\n      if (!selectedTaskType) return;\n      try {\n        const response = await fetch(`/tasks/valid-parents/${selectedTaskType}`);\n        if (!response.ok) throw new Error(\"Failed to fetch valid parent tasks\");\n        const validParents = await response.json();\n        setValidParentTasks(validParents);\n      } catch (error) {\n        console.error('Error fetching valid parent tasks:', error);\n        setValidParentTasks([]);\n      }\n    };\n    fetchValidParents();\n  }, [selectedTaskType]);\n\n  // Helper function to extract days from originalEstimate\n  const extractDaysFromEstimate = originalEstimate => {\n    if (!originalEstimate) return \"\";\n\n    // If it's a string, check for different formats\n    if (typeof originalEstimate === 'string') {\n      // Handle P{days}D format\n      if (originalEstimate.startsWith('P') && originalEstimate.endsWith('D')) {\n        return originalEstimate.substring(1, originalEstimate.length - 1);\n      }\n      // Handle PT{hours}H format (convert to days)\n      if (originalEstimate.startsWith('PT') && originalEstimate.endsWith('H')) {\n        const hours = parseFloat(originalEstimate.substring(2, originalEstimate.length - 1));\n        return (hours / 8).toString(); // Convert hours to days (8 hours per day)\n      }\n    }\n\n    // If it's an object with duration properties, try to extract days\n    if (typeof originalEstimate === 'object') {\n      // Handle Java Duration object structure\n      if (originalEstimate.seconds !== undefined) {\n        const hours = originalEstimate.seconds / 3600; // Convert seconds to hours\n        return (hours / 8).toString(); // Convert hours to days\n      }\n    }\n    return originalEstimate.toString();\n  };\n\n  // Prefill form if editing\n  useEffect(() => {\n    if (task) {\n      const startDateVal = task.start_date || task.startDate || \"\";\n      const endDateVal = task.due_date || task.dueDate || \"\";\n      const estimateVal = extractDaysFromEstimate(task.originalEstimate);\n      setStartDate(startDateVal);\n      setEndDateValue(endDateVal);\n      setEstimateDays(estimateVal);\n      setSelectedTaskType(task.type || 'task');\n      reset({\n        type: task.type || \"\",\n        title: task.title || \"\",\n        description: task.task_description || task.description || \"\",\n        epicName: task.epicName || \"\",\n        startDate: startDateVal,\n        endDate: endDateVal,\n        status: task.status || \"\",\n        priority: task.priority || \"\",\n        estimate: estimateVal,\n        assignee: task.assignee || \"\",\n        labels: Array.isArray(task.labels) ? task.labels.join(', ') : task.labels || \"\",\n        sprint: task.sprint || \"\",\n        parentTask: task.parentTaskId || \"\"\n      });\n\n      // Also update setValue for the calendar components\n      setValue(\"startDate\", startDateVal);\n      setValue(\"endDate\", endDateVal);\n      setValue(\"type\", task.type || \"\");\n      setValue(\"parentTask\", task.parentTaskId || \"\");\n    }\n  }, [task, reset, setValue]);\n\n  // Auto-calculate end date when start date or estimate changes\n  useEffect(() => {\n    if (startDate && estimateDays && estimateDays > 0) {\n      calculateEndDate(startDate, parseInt(estimateDays));\n    }\n  }, [startDate, estimateDays, calculateEndDate]);\n\n  // Sync state changes with form values\n  useEffect(() => {\n    if (startDate) {\n      setValue(\"startDate\", startDate, {\n        shouldValidate: true\n      });\n    }\n  }, [startDate, setValue]);\n  useEffect(() => {\n    if (endDateValue) {\n      setValue(\"endDate\", endDateValue, {\n        shouldValidate: true\n      });\n    }\n  }, [endDateValue, setValue]);\n  useEffect(() => {\n    if (estimateDays) {\n      setValue(\"estimate\", estimateDays, {\n        shouldValidate: true\n      });\n    }\n  }, [estimateDays, setValue]);\n\n  // Handle start date change\n  const handleStartDateChange = e => {\n    const newStartDate = e.target.value;\n    setStartDate(newStartDate);\n    setValue(\"startDate\", newStartDate, {\n      shouldValidate: true\n    });\n  };\n\n  // Handle estimate days change\n  const handleEstimateChange = e => {\n    const newEstimate = e.target.value;\n    setEstimateDays(newEstimate);\n    setValue(\"estimate\", newEstimate, {\n      shouldValidate: true\n    });\n  };\n\n  // Handle end date change and validation\n  const handleEndDateChange = async e => {\n    const newEndDate = e.target.value;\n    setEndDateValue(newEndDate);\n    setValue(\"endDate\", newEndDate, {\n      shouldValidate: true\n    });\n\n    // Validate the selected end date\n    if (startDate && estimateDays && newEndDate) {\n      await validateEndDate(startDate, parseInt(estimateDays), newEndDate);\n    }\n  };\n\n  // Handles form submission\n  const onSubmit = async data => {\n    // Log the submitted form data for debugging\n    console.log(\"Form submitted with data:\", data);\n    console.log(\"Current state - startDate:\", startDate, \"estimateDays:\", estimateDays, \"endDateValue:\", endDateValue);\n\n    // Check if start date is provided, alert if missing\n    if (!data.startDate) {\n      console.error(\"Start date validation failed - data.startDate:\", data.startDate);\n      alert(\"Start date is required\");\n      return;\n    }\n\n    // Prepare the payload object to match backend API expectations\n    const payload = {\n      type: data.type,\n      // Task type (task, epic, etc.)\n      title: data.title,\n      // Task title\n      description: data.description || null,\n      // Task description or null\n      startDate: data.startDate,\n      // Start date\n      dueDate: data.endDate || null,\n      // End date or null\n      status: data.status,\n      // Task status\n      priority: data.priority,\n      // Task priority\n      // Convert estimate to PostgreSQL INTERVAL format if provided (days instead of hours)\n      originalEstimate: data.estimate ? `P${data.estimate}D` : null,\n      // These fields are set to null for now (require UUIDs)\n      assigneeId: null,\n      epicId: null,\n      sprintId: null,\n      // Set parent task ID if provided\n      parentTaskId: data.parentTask || parentId || null,\n      // Split labels by comma, trim whitespace, filter out empty strings\n      labels: data.labels ? data.labels.split(',').map(l => l.trim()).filter(l => l.length > 0) : null\n    };\n\n    // Log the payload for debugging\n    console.log(\"Sending payload:\", payload);\n    try {\n      if (task) {\n        // If editing, update the existing task\n        console.log(\"Updating task:\", task.taskId || task.id);\n        const response = await fetch(`/tasks/${task.taskId || task.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        // If response is not OK, throw error with response text\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to update task: ${errorText}`);\n        }\n        // Log success\n        console.log(\"Task updated successfully\");\n      } else {\n        // If creating, send POST request to create new task\n        console.log(\"Creating new task\");\n        const response = await fetch(\"/tasks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        // If response is not OK, throw error with response text\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to create task: ${errorText}`);\n        }\n        // Parse and log the created task result\n        const result = await response.json();\n        console.log(\"Task created successfully:\", result);\n      }\n      // Navigate to the view-tasks page after success\n      navigate(\"/view-tasks\");\n    } catch (error) {\n      // Log and alert any errors that occur during save\n      console.error(\"Error saving task:\", error);\n      alert(`Failed to save task: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: task ? \"Edit Task\" : \"+Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"type\", {\n                required: true\n              }),\n              className: \"box\",\n              value: selectedTaskType,\n              onChange: handleTaskTypeChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"epic\",\n                children: \"Epic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"story\",\n                children: \"Story\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"task\",\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sub_task\",\n                children: \"Sub Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this), errors.type && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Task Name/Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"title\", {\n                required: true\n              }),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ...register(\"description\"),\n              rows: 3,\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"epic-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Linked Epic Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"epicName\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(HolidayCalendar, {\n              value: startDate,\n              onChange: date => {\n                setStartDate(date);\n                // Update the form field using setValue - this ensures form validation works\n                setValue(\"startDate\", date, {\n                  shouldValidate: true,\n                  shouldDirty: true\n                });\n              },\n              holidays: holidays,\n              shouldDisableDate: shouldDisableDate,\n              getDateClassName: getDateClassName,\n              getHolidayInfo: getHolidayInfo,\n              placeholder: \"Select start date\",\n              required: true,\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              ...register(\"startDate\", {\n                required: \"Start date is required\"\n              }),\n              value: startDate || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }, this), errors.startDate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.startDate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"End Date/Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(HolidayCalendar, {\n              value: endDateValue,\n              onChange: date => {\n                setEndDateValue(date);\n                // Update the form field using setValue with shouldDirty\n                setValue(\"endDate\", date, {\n                  shouldValidate: true,\n                  shouldDirty: true\n                });\n                // Validate the selected end date\n                if (startDate && estimateDays && date) {\n                  validateEndDate(startDate, parseInt(estimateDays), date);\n                }\n              },\n              holidays: holidays,\n              minDate: calculatedEndDate // Restrict to calculated date or later\n              ,\n              shouldDisableDate: date => {\n                // Disable if before calculated end date\n                if (calculatedEndDate && new Date(date) < new Date(calculatedEndDate)) {\n                  return true;\n                }\n                return shouldDisableDate ? shouldDisableDate(date) : false;\n              },\n              getDateClassName: getDateClassName,\n              getHolidayInfo: getHolidayInfo,\n              placeholder: calculatedEndDate ? `Suggested: ${calculatedEndDate}` : \"Select end date\",\n              className: \"box\",\n              style: {\n                backgroundColor: calculatedEndDate && !endDateValue ? '#f3f4f6' : 'white',\n                color: calculatedEndDate && !endDateValue ? '#6b7280' : 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              ...register(\"endDate\"),\n              value: endDateValue || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 33\n            }, this), calculatedEndDate && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mt-1\",\n              children: isCalculating ? 'Calculating...' : `Suggested end date: ${calculatedEndDate}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 37\n            }, this), validationMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-red-500 mt-1\",\n              children: validationMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-priority\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"status\", {\n                required: true\n              }),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"To Do\",\n                children: \"To Do\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"In Progress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Done\",\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 29\n            }, this), errors.status && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-priority\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"priority\"),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-assignee\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Original Estimate (days)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.5\",\n              min: \"0\",\n              ...register(\"estimate\", {\n                onChange: handleEstimateChange,\n                min: {\n                  value: 0,\n                  message: \"Estimate must be positive\"\n                }\n              }),\n              className: \"box\",\n              placeholder: \"Enter days (e.g., 1.5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 29\n            }, this), errors.estimate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.estimate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-assignee\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"assignee\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Labels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"labels\"),\n              className: \"box\",\n              placeholder: \"tag1, tag2, tag3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Sprint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"sprint\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Parent Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 29\n            }, this), parentTask && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"parent-task-info\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Creating subtask under: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: parentTask.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 68\n                }, this), \" (\", parentTask.type, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"parentTask\"),\n              className: \"box\",\n              disabled: selectedTaskType === 'epic' || parentId && parentTask,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: selectedTaskType === 'epic' ? 'Epics cannot have parents' : 'Select parent task'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 33\n              }, this), selectedTaskType !== 'epic' && validParentTasks.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: t.taskId || t.id,\n                children: [t.title, \" (\", t.type, \")\"]\n              }, t.taskId || t.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 29\n            }, this), selectedTaskType !== 'epic' && validParentTasks.length === 0 && selectedTaskType && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-gray-500\",\n              children: [\"No valid parent tasks available for \", selectedTaskType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            children: task ? \"Update Task\" : \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"slppKiE6FrC1CYHQqBsAONawqdo=\", false, function () {\n  return [useNavigate, useLocation, useSearchParams, useDateCalculation, useForm];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useLocation","useNavigate","useSearchParams","useForm","useEffect","useState","useDateCalculation","HolidayCalendar","jsxDEV","_jsxDEV","TaskForm","_s","_location$state","navigate","location","searchParams","task","state","parentId","get","allTasks","setAllTasks","validParentTasks","setValidParentTasks","selectedTaskType","setSelectedTaskType","parentTask","setParentTask","startDate","setStartDate","estimateDays","setEstimateDays","endDateValue","setEndDateValue","holidays","calculatedEndDate","isCalculating","validationMessage","calculateEndDate","validateEndDate","getHolidayInfo","shouldDisableDate","getDateClassName","register","handleSubmit","reset","setValue","formState","errors","getChildTaskType","parentType","toLowerCase","isValidHierarchy","taskType","includes","handleTaskTypeChange","e","newType","target","value","type","fetchTasks","response","fetch","ok","Error","tasks","json","parent","find","t","id","taskId","error","console","fetchValidParents","validParents","extractDaysFromEstimate","originalEstimate","startsWith","endsWith","substring","length","hours","parseFloat","toString","seconds","undefined","startDateVal","start_date","endDateVal","due_date","dueDate","estimateVal","title","description","task_description","epicName","endDate","status","priority","estimate","assignee","labels","Array","isArray","join","sprint","parentTaskId","parseInt","shouldValidate","handleStartDateChange","newStartDate","handleEstimateChange","newEstimate","handleEndDateChange","newEndDate","onSubmit","data","log","alert","payload","assigneeId","epicId","sprintId","split","map","l","trim","filter","method","headers","body","JSON","stringify","errorText","text","result","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","required","onChange","rows","date","shouldDirty","placeholder","minDate","Date","style","backgroundColor","color","step","min","disabled","_c","$RefreshReg$"],"sources":["/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/modules/TaskForm.js"],"sourcesContent":["import { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect, useState } from \"react\";\nimport useDateCalculation from \"../hooks/useDateCalculation\";\nimport HolidayCalendar from \"../components/HolidayCalendar\";\nimport \"./TaskForm.css\"\n\nconst TaskForm = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [searchParams] = useSearchParams();\n    const task = location.state?.task; // get task if passed\n    const parentId = searchParams.get('parentId'); // Get parent ID from URL\n\n    const [allTasks, setAllTasks] = useState([]);\n    const [validParentTasks, setValidParentTasks] = useState([]);\n    const [selectedTaskType, setSelectedTaskType] = useState('task');\n    const [parentTask, setParentTask] = useState(null);\n    const [startDate, setStartDate] = useState('');\n    const [estimateDays, setEstimateDays] = useState('');\n    const [endDateValue, setEndDateValue] = useState('');\n\n    // Use the date calculation hook\n    const {\n        holidays,\n        calculatedEndDate,\n        isCalculating,\n        validationMessage,\n        calculateEndDate,\n        validateEndDate,\n        getHolidayInfo,\n        shouldDisableDate,\n        getDateClassName\n    } = useDateCalculation();\n\n    // Initialize useForm hook first\n    const {\n        register,\n        handleSubmit,\n        reset,\n        setValue,\n        formState: { errors },\n    } = useForm();\n\n    // Helper function to determine child task type based on parent type\n    const getChildTaskType = (parentType) => {\n        switch (parentType?.toLowerCase()) {\n            case 'epic':\n                return 'story'; // Default to story for epic children\n            case 'story':\n            case 'task':\n                return 'sub_task';\n            default:\n                return 'task';\n        }\n    };\n\n    // Validate hierarchy relationship\n    const isValidHierarchy = (taskType, parentType) => {\n        if (!parentType) return taskType === 'epic'; // Only epics can have no parent\n        \n        switch (taskType?.toLowerCase()) {\n            case 'epic':\n                return false; // Epics cannot have parents\n            case 'story':\n            case 'task':\n                return parentType?.toLowerCase() === 'epic';\n            case 'sub_task':\n                return ['story', 'task'].includes(parentType?.toLowerCase());\n            default:\n                return false;\n        }\n    };\n\n    // Handle task type change\n    const handleTaskTypeChange = (e) => {\n        const newType = e.target.value;\n        setSelectedTaskType(newType);\n        setValue('type', newType);\n        \n        // Clear parent task if not compatible\n        if (parentTask && !isValidHierarchy(newType, parentTask.type)) {\n            setParentTask(null);\n            setValue('parentTask', '');\n        }\n    };\n\n    // Fetch all tasks for parent task dropdown and handle parent ID from URL\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const response = await fetch(\"/tasks\");\n                if (!response.ok) throw new Error(\"Failed to fetch tasks\");\n                const tasks = await response.json();\n                setAllTasks(tasks);\n\n                // If parentId is in URL, find and set the parent task\n                if (parentId) {\n                    const parent = tasks.find(t => (t.id || t.taskId) === parentId);\n                    if (parent) {\n                        setParentTask(parent);\n                        // Determine appropriate task type based on parent\n                        const taskType = getChildTaskType(parent.type);\n                        setSelectedTaskType(taskType);\n                        setValue('type', taskType);\n                        setValue('parentTask', parent.taskId || parent.id);\n                    }\n                }\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n                setAllTasks([]);\n            }\n        };\n        fetchTasks();\n    }, [parentId, setValue]);\n\n    // Fetch valid parent tasks when task type changes\n    useEffect(() => {\n        const fetchValidParents = async () => {\n            if (!selectedTaskType) return;\n            \n            try {\n                const response = await fetch(`/tasks/valid-parents/${selectedTaskType}`);\n                if (!response.ok) throw new Error(\"Failed to fetch valid parent tasks\");\n                const validParents = await response.json();\n                setValidParentTasks(validParents);\n            } catch (error) {\n                console.error('Error fetching valid parent tasks:', error);\n                setValidParentTasks([]);\n            }\n        };\n        fetchValidParents();\n    }, [selectedTaskType]);\n\n    // Helper function to extract days from originalEstimate\n    const extractDaysFromEstimate = (originalEstimate) => {\n        if (!originalEstimate) return \"\";\n        \n        // If it's a string, check for different formats\n        if (typeof originalEstimate === 'string') {\n            // Handle P{days}D format\n            if (originalEstimate.startsWith('P') && originalEstimate.endsWith('D')) {\n                return originalEstimate.substring(1, originalEstimate.length - 1);\n            }\n            // Handle PT{hours}H format (convert to days)\n            if (originalEstimate.startsWith('PT') && originalEstimate.endsWith('H')) {\n                const hours = parseFloat(originalEstimate.substring(2, originalEstimate.length - 1));\n                return (hours / 8).toString(); // Convert hours to days (8 hours per day)\n            }\n        }\n        \n        // If it's an object with duration properties, try to extract days\n        if (typeof originalEstimate === 'object') {\n            // Handle Java Duration object structure\n            if (originalEstimate.seconds !== undefined) {\n                const hours = originalEstimate.seconds / 3600; // Convert seconds to hours\n                return (hours / 8).toString(); // Convert hours to days\n            }\n        }\n        \n        return originalEstimate.toString();\n    };\n\n    // Prefill form if editing\n    useEffect(() => {\n        if (task) {\n            const startDateVal = task.start_date || task.startDate || \"\";\n            const endDateVal = task.due_date || task.dueDate || \"\";\n            const estimateVal = extractDaysFromEstimate(task.originalEstimate);\n            \n            setStartDate(startDateVal);\n            setEndDateValue(endDateVal);\n            setEstimateDays(estimateVal);\n            setSelectedTaskType(task.type || 'task');\n            \n            reset({\n                type: task.type || \"\",\n                title: task.title || \"\",\n                description: task.task_description || task.description || \"\",\n                epicName: task.epicName || \"\",\n                startDate: startDateVal,\n                endDate: endDateVal,\n                status: task.status || \"\",\n                priority: task.priority || \"\",\n                estimate: estimateVal,\n                assignee: task.assignee || \"\",\n                labels: Array.isArray(task.labels) ? task.labels.join(', ') : (task.labels || \"\"),\n                sprint: task.sprint || \"\",\n                parentTask: task.parentTaskId || \"\",\n            });\n            \n            // Also update setValue for the calendar components\n            setValue(\"startDate\", startDateVal);\n            setValue(\"endDate\", endDateVal);\n            setValue(\"type\", task.type || \"\");\n            setValue(\"parentTask\", task.parentTaskId || \"\");\n        }\n    }, [task, reset, setValue]);\n\n    // Auto-calculate end date when start date or estimate changes\n    useEffect(() => {\n        if (startDate && estimateDays && estimateDays > 0) {\n            calculateEndDate(startDate, parseInt(estimateDays));\n        }\n    }, [startDate, estimateDays, calculateEndDate]);\n\n    // Sync state changes with form values\n    useEffect(() => {\n        if (startDate) {\n            setValue(\"startDate\", startDate, { shouldValidate: true });\n        }\n    }, [startDate, setValue]);\n\n    useEffect(() => {\n        if (endDateValue) {\n            setValue(\"endDate\", endDateValue, { shouldValidate: true });\n        }\n    }, [endDateValue, setValue]);\n\n    useEffect(() => {\n        if (estimateDays) {\n            setValue(\"estimate\", estimateDays, { shouldValidate: true });\n        }\n    }, [estimateDays, setValue]);\n\n    // Handle start date change\n    const handleStartDateChange = (e) => {\n        const newStartDate = e.target.value;\n        setStartDate(newStartDate);\n        setValue(\"startDate\", newStartDate, { shouldValidate: true });\n    };\n\n    // Handle estimate days change\n    const handleEstimateChange = (e) => {\n        const newEstimate = e.target.value;\n        setEstimateDays(newEstimate);\n        setValue(\"estimate\", newEstimate, { shouldValidate: true });\n    };\n\n    // Handle end date change and validation\n    const handleEndDateChange = async (e) => {\n        const newEndDate = e.target.value;\n        setEndDateValue(newEndDate);\n        setValue(\"endDate\", newEndDate, { shouldValidate: true });\n\n        // Validate the selected end date\n        if (startDate && estimateDays && newEndDate) {\n            await validateEndDate(startDate, parseInt(estimateDays), newEndDate);\n        }\n    };\n\n    // Handles form submission\n    const onSubmit = async (data) => {\n        // Log the submitted form data for debugging\n        console.log(\"Form submitted with data:\", data);\n        console.log(\"Current state - startDate:\", startDate, \"estimateDays:\", estimateDays, \"endDateValue:\", endDateValue);\n        \n        // Check if start date is provided, alert if missing\n        if (!data.startDate) {\n            console.error(\"Start date validation failed - data.startDate:\", data.startDate);\n            alert(\"Start date is required\");\n            return;\n        }\n\n        // Prepare the payload object to match backend API expectations\n        const payload = {\n            type: data.type, // Task type (task, epic, etc.)\n            title: data.title, // Task title\n            description: data.description || null, // Task description or null\n            startDate: data.startDate, // Start date\n            dueDate: data.endDate || null, // End date or null\n            status: data.status, // Task status\n            priority: data.priority, // Task priority\n            // Convert estimate to PostgreSQL INTERVAL format if provided (days instead of hours)\n            originalEstimate: data.estimate ? `P${data.estimate}D` : null,\n            // These fields are set to null for now (require UUIDs)\n            assigneeId: null,\n            epicId: null,\n            sprintId: null,\n            // Set parent task ID if provided\n            parentTaskId: data.parentTask || parentId || null,\n            // Split labels by comma, trim whitespace, filter out empty strings\n            labels: data.labels ? data.labels.split(',').map(l => l.trim()).filter(l => l.length > 0) : null\n        };\n\n        // Log the payload for debugging\n        console.log(\"Sending payload:\", payload);\n\n        try {\n            if (task) {\n                // If editing, update the existing task\n                console.log(\"Updating task:\", task.taskId || task.id);\n                const response = await fetch(`/tasks/${task.taskId || task.id}`, {\n                    method: \"PUT\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(payload)\n                });\n                // If response is not OK, throw error with response text\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Failed to update task: ${errorText}`);\n                }\n                // Log success\n                console.log(\"Task updated successfully\");\n            } else {\n                // If creating, send POST request to create new task\n                console.log(\"Creating new task\");\n                const response = await fetch(\"/tasks\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(payload)\n                });\n                // If response is not OK, throw error with response text\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Failed to create task: ${errorText}`);\n                }\n                // Parse and log the created task result\n                const result = await response.json();\n                console.log(\"Task created successfully:\", result);\n            }\n            // Navigate to the view-tasks page after success\n            navigate(\"/view-tasks\");\n        } catch (error) {\n            // Log and alert any errors that occur during save\n            console.error(\"Error saving task:\", error);\n            alert(`Failed to save task: ${error.message}`);\n        }\n    };\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-header\">\n                <h1>{task ? \"Edit Task\" : \"+Create Task\"}</h1>\n            </div>\n            <div className=\"form-container\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-subcontainer\">\n                        <div className=\"type-name\">\n\n                            {/*type*/}\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Type</label>\n\n                            </div>\n                            <select\n                                {...register(\"type\", { required: true })}\n                                className=\"box\"\n                                value={selectedTaskType}\n                                onChange={handleTaskTypeChange}\n                            >\n                                <option value=\"\">Select type</option>\n                                <option value=\"epic\">Epic</option>\n                                <option value=\"story\">Story</option>\n                                <option value=\"task\">Task</option>\n                                <option value=\"sub_task\">Sub Task</option>\n                            </select>\n                            {errors.type && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n\n\n\n                        <div className=\"type-name\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Task Name/Title</label>\n\n                            </div>\n                            <input\n                                {...register(\"title\", { required: true })}\n                                className=\"box\"\n                            />\n                            {errors.title && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n\n                        {/* Task Description */}\n                        <div className=\"description\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n\n                            </div>\n                            <textarea\n                                {...register(\"description\")}\n                                rows={3}\n                                className=\"box\"\n                            />\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Linked Epic Name */}\n                        <div className=\"epic-name\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Linked Epic Name</label>\n\n                            </div>\n                            <input\n                                {...register(\"epicName\")}\n                                className=\"box\"\n                            />\n                        </div>\n\n\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        \n                            <div className=\"date\">\n                                <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Start Date</label>\n                                </div>\n                                <HolidayCalendar\n                                    value={startDate}\n                                    onChange={(date) => {\n                                        setStartDate(date);\n                                        // Update the form field using setValue - this ensures form validation works\n                                        setValue(\"startDate\", date, { shouldValidate: true, shouldDirty: true });\n                                    }}\n                                    holidays={holidays}\n                                    shouldDisableDate={shouldDisableDate}\n                                    getDateClassName={getDateClassName}\n                                    getHolidayInfo={getHolidayInfo}\n                                    placeholder=\"Select start date\"\n                                    required\n                                    className=\"box\"\n                                />\n                                {/* Hidden input for form validation */}\n                                <input\n                                    type=\"hidden\"\n                                    {...register(\"startDate\", { \n                                        required: \"Start date is required\"\n                                    })}\n                                    value={startDate || ''}\n                                />\n                                {errors.startDate && <span className=\"text-red-500 text-sm\">{errors.startDate.message}</span>}\n                            </div>\n\n                            <div className=\"date\">\n                                <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">End Date/Due Date</label>\n                                </div>\n                                <HolidayCalendar\n                                    value={endDateValue}\n                                    onChange={(date) => {\n                                        setEndDateValue(date);\n                                        // Update the form field using setValue with shouldDirty\n                                        setValue(\"endDate\", date, { shouldValidate: true, shouldDirty: true });\n                                        // Validate the selected end date\n                                        if (startDate && estimateDays && date) {\n                                            validateEndDate(startDate, parseInt(estimateDays), date);\n                                        }\n                                    }}\n                                    holidays={holidays}\n                                    minDate={calculatedEndDate} // Restrict to calculated date or later\n                                    shouldDisableDate={(date) => {\n                                        // Disable if before calculated end date\n                                        if (calculatedEndDate && new Date(date) < new Date(calculatedEndDate)) {\n                                            return true;\n                                        }\n                                        return shouldDisableDate ? shouldDisableDate(date) : false;\n                                    }}\n                                    getDateClassName={getDateClassName}\n                                    getHolidayInfo={getHolidayInfo}\n                                    placeholder={calculatedEndDate ? `Suggested: ${calculatedEndDate}` : \"Select end date\"}\n                                    className=\"box\"\n                                    style={{\n                                        backgroundColor: calculatedEndDate && !endDateValue ? '#f3f4f6' : 'white',\n                                        color: calculatedEndDate && !endDateValue ? '#6b7280' : 'black'\n                                    }}\n                                />\n                                {/* Hidden input for form validation */}\n                                <input\n                                    type=\"hidden\"\n                                    {...register(\"endDate\")}\n                                    value={endDateValue || ''}\n                                />\n                                {calculatedEndDate && (\n                                    <div className=\"text-sm text-gray-600 mt-1\">\n                                        {isCalculating ? 'Calculating...' : `Suggested end date: ${calculatedEndDate}`}\n                                    </div>\n                                )}\n                                {validationMessage && (\n                                    <div className=\"text-sm text-red-500 mt-1\">{validationMessage}</div>\n                                )}\n                            </div>\n                        \n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Status */}\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n\n                            <label className=\"block text-sm font-medium text-gray-700\">Status</label>\n                            </div>\n                            <select\n                                {...register(\"status\", { required: true })}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select status</option>\n                                <option value=\"To Do\">To Do</option>\n                                <option value=\"In Progress\">In Progress</option>\n                                <option value=\"Done\">Done</option>\n                            </select>\n                            {errors.status && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n\n                        {/* Priority */}\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Priority</label>\n\n                            </div>\n                            <select\n                                {...register(\"priority\")}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select priority</option>\n                                <option value=\"High\">High</option>\n                                <option value=\"Medium\">Medium</option>\n                                <option value=\"Low\">Low</option>\n                            </select>\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n\n                            <label className=\"block text-sm font-medium text-gray-700\">Original Estimate (days)</label>\n                            </div>\n                            <input\n                                type=\"number\"\n                                step=\"0.5\"\n                                min=\"0\"\n                                {...register(\"estimate\", { \n                                    onChange: handleEstimateChange,\n                                    min: { value: 0, message: \"Estimate must be positive\" }\n                                })}\n                                className=\"box\"\n                                placeholder=\"Enter days (e.g., 1.5)\"\n                            />\n                            {errors.estimate && <span className=\"text-red-500 text-sm\">{errors.estimate.message}</span>}\n                        </div>\n                        {/* Assignee */}\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Assignee</label>\n\n                            </div>\n                            <input\n                                {...register(\"assignee\")}\n                                className=\"box\"\n                            />\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        {/* Labels/Tags */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Labels</label>\n\n                            </div>\n                            <input\n                                {...register(\"labels\")}\n                                className=\"box\"\n                                placeholder=\"tag1, tag2, tag3\"\n                            />\n                        </div>\n\n                        {/* Sprint */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Sprint</label>\n\n                            </div>\n                            <input\n                                {...register(\"sprint\")}\n                                className=\"box\"\n                            />\n                        </div>\n\n                        {/* Parent Task */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                            <label className=\"block text-sm font-medium text-gray-700\">Parent Task</label>\n                            </div>\n                            \n                            {/* Show info about parent if set from URL */}\n                            {parentTask && (\n                                <div className=\"parent-task-info\">\n                                    <small>Creating subtask under: <strong>{parentTask.title}</strong> ({parentTask.type})</small>\n                                </div>\n                            )}\n                            \n                            <select\n                                {...register(\"parentTask\")}\n                                className=\"box\"\n                                disabled={selectedTaskType === 'epic' || (parentId && parentTask)}\n                            >\n                                <option value=\"\">\n                                    {selectedTaskType === 'epic' ? 'Epics cannot have parents' : 'Select parent task'}\n                                </option>\n                                {selectedTaskType !== 'epic' && validParentTasks.map((t) => (\n                                    <option key={t.taskId || t.id} value={t.taskId || t.id}>\n                                        {t.title} ({t.type})\n                                    </option>\n                                ))}\n                            </select>\n                            \n                            {selectedTaskType !== 'epic' && validParentTasks.length === 0 && selectedTaskType && (\n                                <small className=\"text-gray-500\">\n                                    No valid parent tasks available for {selectedTaskType}\n                                </small>\n                            )}\n                        </div>\n\n                    </div>\n\n                    <div className=\"form-subcontainer\">\n                        <button\n                            type=\"submit\"\n                            className=\"button\"\n                        >\n                            {task ? \"Update Task\" : \"Create Task\"}\n                        </button>\n                    </div>\n\n                </form>\n                \n\n            </div>\n        </div>\n    );\n};\n\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}