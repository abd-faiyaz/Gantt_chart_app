{"ast":null,"code":"var _jsxFileName = \"/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/modules/TaskForm.js\",\n  _s = $RefreshSig$();\n//\n// // Import hooks and form helpers\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { useForm } from \"react-hook-form\";\n// import { useEffect, useState } from \"react\";\n// // Import API helpers for task operations\n// import { getAllTasks, createTask, updateTask } from \"../api/taskApi\";\n// // Import CSS for styling\n// import \"./TaskForm.css\";\n//\n// const TaskForm = () => {\n//     // Get navigation function\n//     const navigate = useNavigate();\n//     // Get location to check if we are editing a task\n//     const location = useLocation();\n//     // Extract task from navigation state if present\n//     const task = location.state?.task;\n//\n//     // State to hold all tasks for parent task dropdown\n//     const [allTasks, setAllTasks] = useState([]);\n//\n//     // Set up react-hook-form for handling form data\n//     const {\n//         register,\n//         handleSubmit,\n//         reset,\n//         formState: { errors },\n//     } = useForm();\n//\n//     // Fetch all tasks for parent dropdown when component loads\n//     useEffect(() => {\n//         // Call backend to get all tasks\n//         getAllTasks().then(setAllTasks);\n//     }, []);\n//\n//     // If editing, prefill form with existing task data\n//     useEffect(() => {\n//         if (task) {\n//             reset({\n//                 type: task.type || \"\",\n//                 title: task.title || \"\",\n//                 description: task.task_description || \"\",\n//                 epicName: task.epicName || \"\",\n//                 startDate: task.start_date || \"\",\n//                 endDate: task.due_date || \"\",\n//                 status: task.status || \"\",\n//                 priority: task.priority || \"\",\n//                 estimate: task.estimation || \"\",\n//                 assignee: task.assignee || \"\",\n//                 labels: task.labels || \"\",\n//                 sprint: task.sprint || \"\",\n//                 parentTask: task.parentTask || \"\",\n//             });\n//         }\n//     }, [task, reset]);\n//\n//     // Handle form submission\n//     const onSubmit = async (data) => {\n//         if (task && task.id) {\n//             // If editing, call API to update the task\n//             await updateTask(task.id, { ...task, ...data });\n//         } else {\n//             // If creating, call API to create a new task\n//             await createTask(data);\n//         }\n//         // After saving, navigate back to the task list page\n//         navigate(\"/view-tasks\");\n//     };\n//\n//     return (\n//         <div className=\"form\">\n//             <div className=\"form-header\">\n//                 {/* Show different title for editing vs creating */}\n//                 <h1>{task ? \"Edit Task\" : \"+Create Task\"}</h1>\n//             </div>\n//             <div className=\"form-container\">\n//                 <form onSubmit={handleSubmit(onSubmit)}>\n//                     {/* Type field */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"type-name\">\n//                             <div className=\"title\">\n//                                 <label>Type</label>\n//                             </div>\n//                             <select {...register(\"type\", { required: true })} className=\"box\">\n//                                 <option value=\"\">Select type</option>\n//                                 <option value=\"task\">Task</option>\n//                                 <option value=\"epic\">Epic</option>\n//                                 <option value=\"story\">Story</option>\n//                                 <option value=\"sub_task\">Sub Task</option>\n//                             </select>\n//                             {errors.type && (\n//                                 <span className=\"text-red-500 text-sm\">This field is required</span>\n//                             )}\n//                         </div>\n//                     </div>\n//                     {/* Title field */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"type-name\">\n//                             <div className=\"title\">\n//                                 <label>Task Title</label>\n//                             </div>\n//                             <input\n//                                 {...register(\"title\", { required: true })}\n//                                 className=\"box\"\n//                             />\n//                             {errors.title && (\n//                                 <span className=\"text-red-500 text-sm\">This field is required</span>\n//                             )}\n//                         </div>\n//                     </div>\n//                     {/* Description field */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"description\">\n//                             <div className=\"title\">\n//                                 <label>Description</label>\n//                             </div>\n//                             <textarea {...register(\"description\")} rows={3} className=\"box\" />\n//                         </div>\n//                     </div>\n//                     {/* Epic Name field */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"epic-name\">\n//                             <div className=\"title\">\n//                                 <label>Linked Epic Name</label>\n//                             </div>\n//                             <input {...register(\"epicName\")} className=\"box\" />\n//                         </div>\n//                     </div>\n//                     {/* Start Date and End Date fields */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"date\">\n//                             <div className=\"title\">\n//                                 <label>Start Date</label>\n//                             </div>\n//                             <input type=\"date\" {...register(\"startDate\")} className=\"box\" />\n//                         </div>\n//                         <div className=\"date\">\n//                             <div className=\"title\">\n//                                 <label>End Date/Due Date</label>\n//                             </div>\n//                             <input type=\"date\" {...register(\"endDate\")} className=\"box\" />\n//                         </div>\n//                     </div>\n//                     {/* Status and Priority fields */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"status-priority\">\n//                             <div className=\"title\">\n//                                 <label>Status</label>\n//                             </div>\n//                             <select {...register(\"status\", { required: true })} className=\"box\">\n//                                 <option value=\"\">Select status</option>\n//                                 <option value=\"To Do\">To Do</option>\n//                                 <option value=\"In Progress\">In Progress</option>\n//                                 <option value=\"Done\">Done</option>\n//                             </select>\n//                             {errors.status && (\n//                                 <span className=\"text-red-500 text-sm\">This field is required</span>\n//                             )}\n//                         </div>\n//                         <div className=\"status-priority\">\n//                             <div className=\"title\">\n//                                 <label>Priority</label>\n//                             </div>\n//                             <select {...register(\"priority\")} className=\"box\">\n//                                 <option value=\"\">Select priority</option>\n//                                 <option value=\"High\">High</option>\n//                                 <option value=\"Medium\">Medium</option>\n//                                 <option value=\"Low\">Low</option>\n//                             </select>\n//                         </div>\n//                     </div>\n//                     {/* Estimate and Assignee fields */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"time-assignee\">\n//                             <div className=\"title\">\n//                                 <label>Original Estimate (hours)</label>\n//                             </div>\n//                             <input type=\"number\" {...register(\"estimate\")} className=\"box\" />\n//                         </div>\n//                         <div className=\"time-assignee\">\n//                             <div className=\"title\">\n//                                 <label>Assignee</label>\n//                             </div>\n//                             <input {...register(\"assignee\")} className=\"box\" />\n//                         </div>\n//                     </div>\n//                     {/* Labels, Sprint, Parent Task fields */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                                 <label>Labels</label>\n//                             </div>\n//                             <input\n//                                 {...register(\"labels\")}\n//                                 className=\"box\"\n//                                 placeholder=\"tag1, tag2, tag3\"\n//                             />\n//                         </div>\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                                 <label>Sprint</label>\n//                             </div>\n//                             <input {...register(\"sprint\")} className=\"box\" />\n//                         </div>\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                                 <label>Parent Task</label>\n//                             </div>\n//                             <select {...register(\"parentTask\")} className=\"box\">\n//                                 <option value=\"\">Select parent task</option>\n//                                 {/* Render all tasks for parent task selection */}\n//                                 {allTasks.map((t) => (\n//                                     <option key={t.id} value={t.title}>\n//                                         {t.title}\n//                                     </option>\n//                                 ))}\n//                             </select>\n//                         </div>\n//                     </div>\n//                     {/* Submit button */}\n//                     <div className=\"form-subcontainer\">\n//                         <button type=\"submit\" className=\"button\">\n//                             {task ? \"Update Task\" : \"Create Task\"}\n//                         </button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default TaskForm;\n\nimport { useLocation, useNavigate } from \"react-router-dom\"; // Import hooks for route navigation and location\nimport { useForm } from \"react-hook-form\"; // Import the react-hook-form library for form handling\nimport { useEffect, useState } from \"react\"; // Import React hooks for managing component state and effects\nimport { createTaskApi, updateTaskApi } from \"../api/TaskApi\"; // Import API functions for creating and updating tasks\nimport \"./TaskForm.css\"; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate(); // Hook to programmatically navigate between routes\n  const location = useLocation(); // Hook to get the current route/location\n  const task = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.task; // Get the task to edit if passed through navigation state (for edit mode)\n\n  const [allTasks, setAllTasks] = useState([]); // State to hold all tasks for the parent task dropdown\n\n  // Fetch all tasks for the parent task dropdown when the component mounts\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        // Call your backend API to get all tasks (replace with your API endpoint as needed)\n        const response = await fetch(\"/api/tasks\"); // Fetch tasks from backend\n        if (response.ok) {\n          const tasks = await response.json(); // Parse JSON response\n          setAllTasks(tasks); // Set tasks in component state\n        }\n      } catch (error) {\n        // Handle fetch error\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    fetchTasks(); // Call the function on component mount\n  }, []);\n\n  // Set up react-hook-form\n  const {\n    register,\n    // Register form fields for validation and value tracking\n    handleSubmit,\n    // Handle form submission event\n    reset,\n    // Function to reset form fields\n    formState: {\n      errors\n    } // Form validation errors\n  } = useForm();\n\n  // Prefill the form fields if editing an existing task\n  useEffect(() => {\n    if (task) {\n      reset({\n        type: task.type ? task.type.toLowerCase() : \"\",\n        // Set type, default to lowercase if exists\n        title: task.title || \"\",\n        // Set title if exists\n        description: task.description || \"\",\n        // Set description if exists\n        epicName: task.epicName || \"\",\n        // Set epic name if exists\n        startDate: task.start_date || \"\",\n        // Set start date if exists\n        endDate: task.due_date || \"\",\n        // Set due date if exists\n        status: task.status || \"\",\n        // Set status if exists\n        priority: task.priority || \"\",\n        // Set priority if exists\n        estimate: task.original_estimate || \"\",\n        // Set original estimate if exists\n        assignee: task.assignee_id || \"\",\n        // Set assignee if exists\n        // Convert labels array to comma-separated string for input field\n        labels: Array.isArray(task.labels) ? task.labels.join(\", \") : task.labels || \"\",\n        sprint: task.sprint_id || \"\",\n        // Set sprint ID if exists\n        parentTask: task.parent_task_id || \"\" // Set parent task ID if exists\n      });\n    }\n  }, [task, reset]); // Runs whenever the task or reset function changes\n\n  // Handle form submission\n  const onSubmit = async data => {\n    // Convert the comma-separated labels string to an array of trimmed, non-empty strings\n    const labelsArray = data.labels ? data.labels.split(',').map(l => l.trim()).filter(l => l.length > 0) : [];\n\n    // Build the payload for API with labels as an array\n    const taskPayload = {\n      ...data,\n      // Spread the rest of the form data as-is\n      labels: labelsArray // Overwrite labels with the properly formatted array\n    };\n    try {\n      if (task) {\n        // If editing, call the update API\n        await updateTaskApi(task.taskId, taskPayload); // Pass the task ID and payload\n      } else {\n        // If creating, call the create API\n        await createTaskApi(taskPayload); // Pass the payload directly\n      }\n      navigate(\"/\"); // After successful submission, navigate to the home page\n    } catch (error) {\n      // Handle errors during API call\n      console.error(\"Error saving task:\", error);\n      // Optionally, display an error message to the user here\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: task ? \"Edit Task\" : \"+Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"type\", {\n                required: true\n              }),\n              // Register for validation\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"task\",\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"epic\",\n                children: \"Epic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"story\",\n                children: \"Story\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sub_task\",\n                children: \"Sub Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), errors.type && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Task Name/Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"title\", {\n                required: true\n              }),\n              // Register for validation\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ...register(\"description\"),\n              rows: 3,\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"epic-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Linked Epic Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"epicName\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              ...register(\"startDate\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"End Date/Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              ...register(\"endDate\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-priority\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"status\", {\n                required: true\n              }),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"To Do\",\n                children: \"To Do\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"In Progress\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Done\",\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this), errors.status && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 text-sm\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-priority\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"priority\"),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-assignee\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Original Estimate (hours)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              ...register(\"estimate\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-assignee\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"assignee\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Labels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"labels\"),\n              className: \"box\",\n              placeholder: \"tag1, tag2, tag3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Sprint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"sprint\"),\n              className: \"box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-sprint-parent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Parent Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              ...register(\"parentTask\"),\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select parent task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 33\n              }, this), allTasks.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: t.taskId,\n                children: t.title\n              }, t.taskId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-subcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            children: task ? \"Update Task\" : \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"Y7xfVPYGmg8N1rSi4qMa08ssQx0=\", false, function () {\n  return [useNavigate, useLocation, useForm];\n});\n_c = TaskForm;\nexport default TaskForm; // Export the form component so it can be used elsewhere\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useLocation","useNavigate","useForm","useEffect","useState","createTaskApi","updateTaskApi","jsxDEV","_jsxDEV","TaskForm","_s","_location$state","navigate","location","task","state","allTasks","setAllTasks","fetchTasks","response","fetch","ok","tasks","json","error","console","register","handleSubmit","reset","formState","errors","type","toLowerCase","title","description","epicName","startDate","start_date","endDate","due_date","status","priority","estimate","original_estimate","assignee","assignee_id","labels","Array","isArray","join","sprint","sprint_id","parentTask","parent_task_id","onSubmit","data","labelsArray","split","map","l","trim","filter","length","taskPayload","taskId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","required","value","rows","placeholder","t","_c","$RefreshReg$"],"sources":["/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/modules/TaskForm.js"],"sourcesContent":["//\n// // Import hooks and form helpers\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { useForm } from \"react-hook-form\";\n// import { useEffect, useState } from \"react\";\n// // Import API helpers for task operations\n// import { getAllTasks, createTask, updateTask } from \"../api/taskApi\";\n// // Import CSS for styling\n// import \"./TaskForm.css\";\n//\n// const TaskForm = () => {\n//     // Get navigation function\n//     const navigate = useNavigate();\n//     // Get location to check if we are editing a task\n//     const location = useLocation();\n//     // Extract task from navigation state if present\n//     const task = location.state?.task;\n//\n//     // State to hold all tasks for parent task dropdown\n//     const [allTasks, setAllTasks] = useState([]);\n//\n//     // Set up react-hook-form for handling form data\n//     const {\n//         register,\n//         handleSubmit,\n//         reset,\n//         formState: { errors },\n//     } = useForm();\n//\n//     // Fetch all tasks for parent dropdown when component loads\n//     useEffect(() => {\n//         // Call backend to get all tasks\n//         getAllTasks().then(setAllTasks);\n//     }, []);\n//\n//     // If editing, prefill form with existing task data\n//     useEffect(() => {\n//         if (task) {\n//             reset({\n//                 type: task.type || \"\",\n//                 title: task.title || \"\",\n//                 description: task.task_description || \"\",\n//                 epicName: task.epicName || \"\",\n//                 startDate: task.start_date || \"\",\n//                 endDate: task.due_date || \"\",\n//                 status: task.status || \"\",\n//                 priority: task.priority || \"\",\n//                 estimate: task.estimation || \"\",\n//                 assignee: task.assignee || \"\",\n//                 labels: task.labels || \"\",\n//                 sprint: task.sprint || \"\",\n//                 parentTask: task.parentTask || \"\",\n//             });\n//         }\n//     }, [task, reset]);\n//\n//     // Handle form submission\n//     const onSubmit = async (data) => {\n//         if (task && task.id) {\n//             // If editing, call API to update the task\n//             await updateTask(task.id, { ...task, ...data });\n//         } else {\n//             // If creating, call API to create a new task\n//             await createTask(data);\n//         }\n//         // After saving, navigate back to the task list page\n//         navigate(\"/view-tasks\");\n//     };\n//\n//     return (\n//         <div className=\"form\">\n//             <div className=\"form-header\">\n//                 {/* Show different title for editing vs creating */}\n//                 <h1>{task ? \"Edit Task\" : \"+Create Task\"}</h1>\n//             </div>\n//             <div className=\"form-container\">\n//                 <form onSubmit={handleSubmit(onSubmit)}>\n//                     {/* Type field */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"type-name\">\n//                             <div className=\"title\">\n//                                 <label>Type</label>\n//                             </div>\n//                             <select {...register(\"type\", { required: true })} className=\"box\">\n//                                 <option value=\"\">Select type</option>\n//                                 <option value=\"task\">Task</option>\n//                                 <option value=\"epic\">Epic</option>\n//                                 <option value=\"story\">Story</option>\n//                                 <option value=\"sub_task\">Sub Task</option>\n//                             </select>\n//                             {errors.type && (\n//                                 <span className=\"text-red-500 text-sm\">This field is required</span>\n//                             )}\n//                         </div>\n//                     </div>\n//                     {/* Title field */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"type-name\">\n//                             <div className=\"title\">\n//                                 <label>Task Title</label>\n//                             </div>\n//                             <input\n//                                 {...register(\"title\", { required: true })}\n//                                 className=\"box\"\n//                             />\n//                             {errors.title && (\n//                                 <span className=\"text-red-500 text-sm\">This field is required</span>\n//                             )}\n//                         </div>\n//                     </div>\n//                     {/* Description field */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"description\">\n//                             <div className=\"title\">\n//                                 <label>Description</label>\n//                             </div>\n//                             <textarea {...register(\"description\")} rows={3} className=\"box\" />\n//                         </div>\n//                     </div>\n//                     {/* Epic Name field */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"epic-name\">\n//                             <div className=\"title\">\n//                                 <label>Linked Epic Name</label>\n//                             </div>\n//                             <input {...register(\"epicName\")} className=\"box\" />\n//                         </div>\n//                     </div>\n//                     {/* Start Date and End Date fields */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"date\">\n//                             <div className=\"title\">\n//                                 <label>Start Date</label>\n//                             </div>\n//                             <input type=\"date\" {...register(\"startDate\")} className=\"box\" />\n//                         </div>\n//                         <div className=\"date\">\n//                             <div className=\"title\">\n//                                 <label>End Date/Due Date</label>\n//                             </div>\n//                             <input type=\"date\" {...register(\"endDate\")} className=\"box\" />\n//                         </div>\n//                     </div>\n//                     {/* Status and Priority fields */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"status-priority\">\n//                             <div className=\"title\">\n//                                 <label>Status</label>\n//                             </div>\n//                             <select {...register(\"status\", { required: true })} className=\"box\">\n//                                 <option value=\"\">Select status</option>\n//                                 <option value=\"To Do\">To Do</option>\n//                                 <option value=\"In Progress\">In Progress</option>\n//                                 <option value=\"Done\">Done</option>\n//                             </select>\n//                             {errors.status && (\n//                                 <span className=\"text-red-500 text-sm\">This field is required</span>\n//                             )}\n//                         </div>\n//                         <div className=\"status-priority\">\n//                             <div className=\"title\">\n//                                 <label>Priority</label>\n//                             </div>\n//                             <select {...register(\"priority\")} className=\"box\">\n//                                 <option value=\"\">Select priority</option>\n//                                 <option value=\"High\">High</option>\n//                                 <option value=\"Medium\">Medium</option>\n//                                 <option value=\"Low\">Low</option>\n//                             </select>\n//                         </div>\n//                     </div>\n//                     {/* Estimate and Assignee fields */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"time-assignee\">\n//                             <div className=\"title\">\n//                                 <label>Original Estimate (hours)</label>\n//                             </div>\n//                             <input type=\"number\" {...register(\"estimate\")} className=\"box\" />\n//                         </div>\n//                         <div className=\"time-assignee\">\n//                             <div className=\"title\">\n//                                 <label>Assignee</label>\n//                             </div>\n//                             <input {...register(\"assignee\")} className=\"box\" />\n//                         </div>\n//                     </div>\n//                     {/* Labels, Sprint, Parent Task fields */}\n//                     <div className=\"form-subcontainer\">\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                                 <label>Labels</label>\n//                             </div>\n//                             <input\n//                                 {...register(\"labels\")}\n//                                 className=\"box\"\n//                                 placeholder=\"tag1, tag2, tag3\"\n//                             />\n//                         </div>\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                                 <label>Sprint</label>\n//                             </div>\n//                             <input {...register(\"sprint\")} className=\"box\" />\n//                         </div>\n//                         <div className=\"labels-sprint-parent\">\n//                             <div className=\"title\">\n//                                 <label>Parent Task</label>\n//                             </div>\n//                             <select {...register(\"parentTask\")} className=\"box\">\n//                                 <option value=\"\">Select parent task</option>\n//                                 {/* Render all tasks for parent task selection */}\n//                                 {allTasks.map((t) => (\n//                                     <option key={t.id} value={t.title}>\n//                                         {t.title}\n//                                     </option>\n//                                 ))}\n//                             </select>\n//                         </div>\n//                     </div>\n//                     {/* Submit button */}\n//                     <div className=\"form-subcontainer\">\n//                         <button type=\"submit\" className=\"button\">\n//                             {task ? \"Update Task\" : \"Create Task\"}\n//                         </button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default TaskForm;\n\nimport { useLocation, useNavigate } from \"react-router-dom\"; // Import hooks for route navigation and location\nimport { useForm } from \"react-hook-form\"; // Import the react-hook-form library for form handling\nimport { useEffect, useState } from \"react\"; // Import React hooks for managing component state and effects\nimport { createTaskApi, updateTaskApi } from \"../api/TaskApi\"; // Import API functions for creating and updating tasks\nimport \"./TaskForm.css\"; // Import the CSS file for styling\n\nconst TaskForm = () => {\n    const navigate = useNavigate(); // Hook to programmatically navigate between routes\n    const location = useLocation(); // Hook to get the current route/location\n    const task = location.state?.task; // Get the task to edit if passed through navigation state (for edit mode)\n\n    const [allTasks, setAllTasks] = useState([]); // State to hold all tasks for the parent task dropdown\n\n    // Fetch all tasks for the parent task dropdown when the component mounts\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                // Call your backend API to get all tasks (replace with your API endpoint as needed)\n                const response = await fetch(\"/api/tasks\"); // Fetch tasks from backend\n                if (response.ok) {\n                    const tasks = await response.json(); // Parse JSON response\n                    setAllTasks(tasks); // Set tasks in component state\n                }\n            } catch (error) {\n                // Handle fetch error\n                console.error(\"Error fetching tasks:\", error);\n            }\n        };\n        fetchTasks(); // Call the function on component mount\n    }, []);\n\n    // Set up react-hook-form\n    const {\n        register, // Register form fields for validation and value tracking\n        handleSubmit, // Handle form submission event\n        reset, // Function to reset form fields\n        formState: { errors }, // Form validation errors\n    } = useForm();\n\n    // Prefill the form fields if editing an existing task\n    useEffect(() => {\n        if (task) {\n            reset({\n                type: task.type ? task.type.toLowerCase() : \"\", // Set type, default to lowercase if exists\n                title: task.title || \"\", // Set title if exists\n                description: task.description || \"\", // Set description if exists\n                epicName: task.epicName || \"\", // Set epic name if exists\n                startDate: task.start_date || \"\", // Set start date if exists\n                endDate: task.due_date || \"\", // Set due date if exists\n                status: task.status || \"\", // Set status if exists\n                priority: task.priority || \"\", // Set priority if exists\n                estimate: task.original_estimate || \"\", // Set original estimate if exists\n                assignee: task.assignee_id || \"\", // Set assignee if exists\n                // Convert labels array to comma-separated string for input field\n                labels: Array.isArray(task.labels) ? task.labels.join(\", \") : (task.labels || \"\"),\n                sprint: task.sprint_id || \"\", // Set sprint ID if exists\n                parentTask: task.parent_task_id || \"\", // Set parent task ID if exists\n            });\n        }\n    }, [task, reset]); // Runs whenever the task or reset function changes\n\n    // Handle form submission\n    const onSubmit = async (data) => {\n        // Convert the comma-separated labels string to an array of trimmed, non-empty strings\n        const labelsArray = data.labels\n            ? data.labels.split(',').map(l => l.trim()).filter(l => l.length > 0)\n            : [];\n\n        // Build the payload for API with labels as an array\n        const taskPayload = {\n            ...data, // Spread the rest of the form data as-is\n            labels: labelsArray, // Overwrite labels with the properly formatted array\n        };\n\n        try {\n            if (task) {\n                // If editing, call the update API\n                await updateTaskApi(task.taskId, taskPayload); // Pass the task ID and payload\n            } else {\n                // If creating, call the create API\n                await createTaskApi(taskPayload); // Pass the payload directly\n            }\n            navigate(\"/\"); // After successful submission, navigate to the home page\n        } catch (error) {\n            // Handle errors during API call\n            console.error(\"Error saving task:\", error);\n            // Optionally, display an error message to the user here\n        }\n    };\n\n    return (\n        <div className=\"form\">{/* Main wrapper for the form */}\n            <div className=\"form-header\">{/* Header section */}\n                <h1>{task ? \"Edit Task\" : \"+Create Task\"}</h1> {/* Header changes depending on mode */}\n            </div>\n            <div className=\"form-container\">{/* Container for the form fields */}\n                <form onSubmit={handleSubmit(onSubmit)}>{/* Form element with react-hook-form submit handler */}\n                    <div className=\"form-subcontainer\">{/* Subcontainer for type and title */}\n                        <div className=\"type-name\">\n                            {/* Task type dropdown */}\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Type</label>\n                            </div>\n                            <select\n                                {...register(\"type\", { required: true })} // Register for validation\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select type</option>\n                                <option value=\"task\">Task</option>\n                                <option value=\"epic\">Epic</option>\n                                <option value=\"story\">Story</option>\n                                <option value=\"sub_task\">Sub Task</option>\n                            </select>\n                            {errors.type && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n                        <div className=\"type-name\">\n                            {/* Task title input */}\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Task Name/Title</label>\n                            </div>\n                            <input\n                                {...register(\"title\", { required: true })} // Register for validation\n                                className=\"box\"\n                            />\n                            {errors.title && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n                    </div>\n                    <div className=\"form-subcontainer\">{/* Subcontainer for description */}\n                        {/* Task description textarea */}\n                        <div className=\"description\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n                            </div>\n                            <textarea\n                                {...register(\"description\")}\n                                rows={3}\n                                className=\"box\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-subcontainer\">{/* Subcontainer for epic name */}\n                        {/* Linked Epic Name input */}\n                        <div className=\"epic-name\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Linked Epic Name</label>\n                            </div>\n                            <input\n                                {...register(\"epicName\")}\n                                className=\"box\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-subcontainer\">{/* Subcontainer for dates */}\n                        {/* Start Date input */}\n                        <div className=\"date\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Start Date</label>\n                            </div>\n                            <input\n                                type=\"date\"\n                                {...register(\"startDate\")}\n                                className=\"box\"\n                            />\n                        </div>\n                        {/* End Date/Due Date input */}\n                        <div className=\"date\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">End Date/Due Date</label>\n                            </div>\n                            <input\n                                type=\"date\"\n                                {...register(\"endDate\")}\n                                className=\"box\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-subcontainer\">{/* Subcontainer for status and priority */}\n                        {/* Status dropdown */}\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Status</label>\n                            </div>\n                            <select\n                                {...register(\"status\", { required: true })}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select status</option>\n                                <option value=\"To Do\">To Do</option>\n                                <option value=\"In Progress\">In Progress</option>\n                                <option value=\"Done\">Done</option>\n                            </select>\n                            {errors.status && <span className=\"text-red-500 text-sm\">This field is required</span>}\n                        </div>\n                        {/* Priority dropdown */}\n                        <div className=\"status-priority\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Priority</label>\n                            </div>\n                            <select\n                                {...register(\"priority\")}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select priority</option>\n                                <option value=\"High\">High</option>\n                                <option value=\"Medium\">Medium</option>\n                                <option value=\"Low\">Low</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"form-subcontainer\">{/* Subcontainer for estimate and assignee */}\n                        {/* Original Estimate input */}\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Original Estimate (hours)</label>\n                            </div>\n                            <input\n                                type=\"number\"\n                                {...register(\"estimate\")}\n                                className=\"box\"\n                            />\n                        </div>\n                        {/* Assignee input */}\n                        <div className=\"time-assignee\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Assignee</label>\n                            </div>\n                            <input\n                                {...register(\"assignee\")}\n                                className=\"box\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-subcontainer\">{/* Subcontainer for labels, sprint, parent task */}\n                        {/* Labels/Tags input */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Labels</label>\n                            </div>\n                            <input\n                                {...register(\"labels\")}\n                                className=\"box\"\n                                placeholder=\"tag1, tag2, tag3\"\n                            />\n                        </div>\n                        {/* Sprint input */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Sprint</label>\n                            </div>\n                            <input\n                                {...register(\"sprint\")}\n                                className=\"box\"\n                            />\n                        </div>\n                        {/* Parent Task dropdown */}\n                        <div className=\"labels-sprint-parent\">\n                            <div className=\"title\">\n                                <label className=\"block text-sm font-medium text-gray-700\">Parent Task</label>\n                            </div>\n                            <select\n                                {...register(\"parentTask\")}\n                                className=\"box\"\n                            >\n                                <option value=\"\">Select parent task</option>\n                                {allTasks.map((t) => (\n                                    <option value={t.taskId} key={t.taskId}>\n                                        {t.title}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"form-subcontainer\">{/* Subcontainer for submit button */}\n                        <button\n                            type=\"submit\"\n                            className=\"button\"\n                        >\n                            {task ? \"Update Task\" : \"Create Task\"}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskForm; // Export the form component so it can be used elsewhere"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}