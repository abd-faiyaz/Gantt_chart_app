{"ast":null,"code":"var _jsxFileName = \"/home/shanto/Ontik/Gantt Chart Project/frontend/src/modules/form.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => console.log(data);\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return /*#__PURE__*/ /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: \"test\",\n      ...register(\"example\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"exampleRequired\", {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"This field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"+LcrTzTax1ndAePIwZBfPwbnP68=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useForm","jsxDEV","_jsxDEV","Form","_s","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","children","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","required","exampleRequired","type","_c","$RefreshReg$"],"sources":["/home/shanto/Ontik/Gantt Chart Project/frontend/src/modules/form.js"],"sourcesContent":["import { useForm } from \"react-hook-form\"\n\n\nexport default function Form() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm()\n\n\n  const onSubmit = (data) => console.log(data)\n\n\n  console.log(watch(\"example\")) // watch input value by passing the name of it\n\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input defaultValue=\"test\" {...register(\"example\")} />\n\n\n      {/* include validation with required or other standard HTML validation rules */}\n      <input {...register(\"exampleRequired\", { required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}\n\n\n      <input type=\"submit\" />\n    </form>\n  )\n}"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,KAAK;IACLC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGT,OAAO,CAAC,CAAC;EAGb,MAAMU,QAAQ,GAAIC,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAG5CC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC,SAAS,CAAC,CAAC,EAAC;;EAG9B,qBACE,yEACAL,OAAA;IAAMQ,QAAQ,EAAEJ,YAAY,CAACI,QAAQ,CAAE;IAAAI,QAAA,gBAErCZ,OAAA;MAAOa,YAAY,EAAC,MAAM;MAAA,GAAKV,QAAQ,CAAC,SAAS;IAAC;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAItDjB,OAAA;MAAA,GAAWG,QAAQ,CAAC,iBAAiB,EAAE;QAAEe,QAAQ,EAAE;MAAK,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAE7DV,MAAM,CAACY,eAAe,iBAAInB,OAAA;MAAAY,QAAA,EAAM;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAG9DjB,OAAA;MAAOoB,IAAI,EAAC;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEX;AAACf,EAAA,CA/BuBD,IAAI;EAAA,QAMtBH,OAAO;AAAA;AAAAuB,EAAA,GANWpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}