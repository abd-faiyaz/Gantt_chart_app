{"ast":null,"code":"var _jsxFileName = \"/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/components/HierarchicalTaskTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EpicRow from './EpicRow';\nimport './HierarchicalTaskTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HierarchicalTaskTable = ({\n  tasks,\n  onDeleteTask,\n  refreshTrigger\n}) => {\n  _s();\n  const [epics, setEpics] = useState([]);\n  const [expandedEpics, setExpandedEpics] = useState(new Set());\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchEpics();\n  }, [refreshTrigger]); // Add refreshTrigger as dependency\n\n  const fetchEpics = async () => {\n    try {\n      setLoading(true);\n      console.log(\"Fetching epics for hierarchical view...\");\n\n      // Fetch both epic tasks (from tasks table) and real epics\n      const [epicTasksResponse, epicsResponse] = await Promise.all([fetch('/tasks/epics'), fetch('/epics/top-level')]);\n      if (!epicTasksResponse.ok || !epicsResponse.ok) {\n        throw new Error('Failed to fetch epics');\n      }\n      const epicTasks = await epicTasksResponse.json();\n      const realEpics = await epicsResponse.json();\n      console.log(\"Epic tasks:\", epicTasks);\n      console.log(\"Real epics:\", realEpics);\n\n      // Combine both types and use epic tasks if they exist, otherwise use real epics\n      const allEpics = epicTasks.length > 0 ? epicTasks : realEpics;\n      setEpics(allEpics);\n    } catch (error) {\n      console.error('Error fetching epics:', error);\n      setEpics([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleEpicExpansion = epicId => {\n    const newExpanded = new Set(expandedEpics);\n    if (newExpanded.has(epicId)) {\n      newExpanded.delete(epicId);\n    } else {\n      newExpanded.add(epicId);\n    }\n    setExpandedEpics(newExpanded);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hierarchical-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading hierarchical view...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  if (epics.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hierarchical-empty\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No epics found. Create an epic to organize your tasks hierarchically.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hierarchical-task-table\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"modern-task-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"expand-column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Assignee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: epics.map(epic => /*#__PURE__*/_jsxDEV(EpicRow, {\n          epic: epic,\n          isExpanded: expandedEpics.has(epic.id || epic.epicId || epic.taskId),\n          onToggleExpand: toggleEpicExpansion,\n          onDeleteTask: onDeleteTask\n        }, epic.id || epic.epicId || epic.taskId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(HierarchicalTaskTable, \"haeQRXPEVz1m8OhWjK1oDSSrPko=\");\n_c = HierarchicalTaskTable;\nexport default HierarchicalTaskTable;\nvar _c;\n$RefreshReg$(_c, \"HierarchicalTaskTable\");","map":{"version":3,"names":["React","useState","useEffect","EpicRow","jsxDEV","_jsxDEV","HierarchicalTaskTable","tasks","onDeleteTask","refreshTrigger","_s","epics","setEpics","expandedEpics","setExpandedEpics","Set","loading","setLoading","fetchEpics","console","log","epicTasksResponse","epicsResponse","Promise","all","fetch","ok","Error","epicTasks","json","realEpics","allEpics","length","error","toggleEpicExpansion","epicId","newExpanded","has","delete","add","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","epic","isExpanded","id","taskId","onToggleExpand","_c","$RefreshReg$"],"sources":["/home/abd_faiyaz/ontik_project_1/Gantt_project_v1/src/main/resources/static/React_Frontend/frontend/src/components/HierarchicalTaskTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EpicRow from './EpicRow';\nimport './HierarchicalTaskTable.css';\n\nconst HierarchicalTaskTable = ({ tasks, onDeleteTask, refreshTrigger }) => {\n  const [epics, setEpics] = useState([]);\n  const [expandedEpics, setExpandedEpics] = useState(new Set());\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchEpics();\n  }, [refreshTrigger]); // Add refreshTrigger as dependency\n\n  const fetchEpics = async () => {\n    try {\n      setLoading(true);\n      console.log(\"Fetching epics for hierarchical view...\");\n      \n      // Fetch both epic tasks (from tasks table) and real epics\n      const [epicTasksResponse, epicsResponse] = await Promise.all([\n        fetch('/tasks/epics'),\n        fetch('/epics/top-level')\n      ]);\n\n      if (!epicTasksResponse.ok || !epicsResponse.ok) {\n        throw new Error('Failed to fetch epics');\n      }\n\n      const epicTasks = await epicTasksResponse.json();\n      const realEpics = await epicsResponse.json();\n\n      console.log(\"Epic tasks:\", epicTasks);\n      console.log(\"Real epics:\", realEpics);\n\n      // Combine both types and use epic tasks if they exist, otherwise use real epics\n      const allEpics = epicTasks.length > 0 ? epicTasks : realEpics;\n      setEpics(allEpics);\n    } catch (error) {\n      console.error('Error fetching epics:', error);\n      setEpics([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const toggleEpicExpansion = (epicId) => {\n    const newExpanded = new Set(expandedEpics);\n    if (newExpanded.has(epicId)) {\n      newExpanded.delete(epicId);\n    } else {\n      newExpanded.add(epicId);\n    }\n    setExpandedEpics(newExpanded);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"hierarchical-loading\">\n        <p>Loading hierarchical view...</p>\n      </div>\n    );\n  }\n\n  if (epics.length === 0) {\n    return (\n      <div className=\"hierarchical-empty\">\n        <p>No epics found. Create an epic to organize your tasks hierarchically.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"hierarchical-task-table\">\n      <table className=\"modern-task-table\">\n        <thead>\n          <tr>\n            <th className=\"expand-column\"></th>\n            <th>Title</th>\n            <th>Type</th>\n            <th>Status</th>\n            <th>Priority</th>\n            <th>Assignee</th>\n            <th>Start Date</th>\n            <th>Due Date</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {epics.map((epic) => (\n            <EpicRow\n              key={epic.id || epic.epicId || epic.taskId}\n              epic={epic}\n              isExpanded={expandedEpics.has(epic.id || epic.epicId || epic.taskId)}\n              onToggleExpand={toggleEpicExpansion}\n              onDeleteTask={onDeleteTask}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default HierarchicalTaskTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}